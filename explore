    1  l dev
    2  l dev/progs
    3  cp ~/.config/user-dirs.dirs ~/.config/user-dirs.dirs.bak
    4  vim ~/.config/user-dirs.dirs
    5  echo "enabled=false" > ~/.config/user-dirs.conf
    6  vim ~/.config/user-dirs.conf
    7  xdg-user-dirs-update
    8  git clone git@github.com:jdxlabs/config-vim.git
    9  l config-vim
   10  mv config-vim .vim
   11  ln -s ~/.vimrc vimrc
   12  ln -s vim  ~/.vimrc
   13  rm .vimrc
   14  cd .vim
   15  cat vimrc
   16  ln -s vimrc ~/.vimrc
   17  rm ../.vimrc
   18  ln -s ~/.vim/vimrc ~/.vimrc
   19  cat .vimrc
   20  git clone https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim
   21  wget https://github.com/powerline/powerline/raw/develop/font/PowerlineSymbols.otf\n
   22  wget https://github.com/powerline/powerline/raw/develop/font/10-powerline-symbols.conf
   23  sudo cp PowerlineSymbols.otf /usr/share/fonts
   24  fc-cache -f -v\n
   25  mkdir -p ~/.config/fontconfig/conf.d/\n
   26  cp 10-powerline-symbols.conf ~/.config/fontconfig/conf.d\n
   27  sudo dpkg -i code_1.33.1-1554971066_amd64.deb
   28  git clone git@github.com:jdxlabs/dotfiles.git
   29  sudo apt install tree
   30  tree -L 10
   31  ln -s ~/dev/dotfiles/.gitconfig .gitconfig
   32  cp .ssh/config ~/.ssh/config
   33  cat ~/.ssh/config
   34  vimdiff .zshrc ~/.zshrc
   35  python3 -V
   36  mkdir .local/bin
   37  git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf\n
   38  ~/.fzf/install
   39  sudo apt install oathtool 
   40  cat .ssh/config
   41  cat .gitconfig
   42  ln -s ~/dev/dotfiles/.config/pylintrc ~/.config/pylintrc
   43  cat ~/.config/pylintrc
   44  cd .config
   45  cd Code
   46  cd User
   47  ln -s /home/jdx/dev/dotfiles/.config/Code/User/settings.json ~/.config/Code/User
   48  cd ~/.config/Code/User
   49  ln -s /home/jdx/dev/dotfiles/.config/Code/User/keybindings.json ~/.config/Code/User
   50  ping 192.168.164.71
   51  ssh jdwescale@192.168.164.71
   52  mkdir 2019-macbookpro-wsc
   53  mv 2019-macbookpro-wsc 2019-wsc-mac
   54  scp -r jdwescale@192.168.164.71:Downloads .
   55  l Downloads
   56  scp -r jdwescale@192.168.164.71:.ssh .
   57  scp -r jdwescale@192.168.164.71:.sec .
   58  scp -r jdwescale@192.168.164.71:.aws .
   59  scp -r jdwescale@192.168.164.71:.gsutil .
   60  scp -r jdwescale@192.168.164.71:.config/gcloud .
   61  scp -r jdwescale@192.168.164.71:dev .
   62  sudo apt install gconf2  gconf-service gvfs-bin libappindicator1
   63  sudo dpkg -i slack-desktop-3.4.0-amd64.deb
   64  rm slack-desktop-3.4.0-amd64.deb
   65  scp -r jdwescale@192.168.164.71:Pictures .
   66  rm -rf jdxlabs
   67  cd ../../seloger/github/sl_digital-sample-app
   68  sudo python2 get-pip.py
   69  sudo apt install python3
   70  wget https://bootstrap.pypa.io/get-pip.py
   71  sudo apt install python3-distutils
   72  pip2 -V
   73  pip3 -V
   74  pip install awscli
   75  pip install awscli --user
   76  vim dev/dotfiles/.zshrc
   77  cat ~/.local/bin/aws_zsh_completer.sh
   78  apt install libssl1.0.2
   79  sudo apt install libssl1.0.2
   80  sudo dpkg -i openfortigui_0.7.3-2_stretch_amd64.deb
   81  apt search openfortigui
   82  rm openfortigui_0.7.3-2_stretch_amd64.deb
   83  find . -iname "*cert*"
   84  find . -iname "*CA*"
   85  find . -iname "*CA-cert*"
   86  find . -iname "*ca-cert*"
   87  find . -iname "*.cer"
   88  find . -iname "*.pem"
   89  scp -r jdwescale@192.168.164.71:Downloads/CA-Subordinate.cer .
   90  mkdir .sec
   91  cd .sec
   92  cp ~/dev/backups/2019-wsc-mac/Downloads/CA-Subordinate.cer .
   93  cp ~/dev/backups/2019-wsc-mac/.sec/sl-ad .
   94  mv sl-ad ad
   95  cat ad
   96  mv ad ad-pwd
   97  touch forti-conf
   98  openfortivpn -c forti-conf
   99  sudo seahorse
  100  apt-key adv --recv-keys --keyserver keyserver.ubuntu.com 2FAB19E7CCB7F415
  101  sha256sum CA-Subordinate.cer
  102  kill -9 3695
  103  /usr/bin/python3 -m pip install -U pylint --user
  104  cd dev/backups/2019-wsc-mac/Downloads
  105  scp -r jdwescale@192.168.164.71:Downloads/CA-Subordinate.pem .
  106  cp CA-Subordinate.pem ~/.sec/seloger/
  107  cat CA-Subordinate.pem
  108  sha256sum CA-Subordinate.pem
  109  ping vpn.poliris.net
  110  sudo openfortivpn -c forti-conf --user-cert=/home/jdx/.sec/seloger/CA-Subordinate.pem
  111  sudo openfortivpn -c forti-conf --user-cert=/home/jdx/.sec/seloger/CA-Subordinate.cer
  112  sudo openfortivpn -c forti-conf --ca-file=/home/jdx/.sec/seloger/CA-Subordinate.pem
  113  vim forti-conf
  114  sudo openfortivpn -c forti-conf --ca-file=/home/jdx/.sec/seloger/CA-Subordinate.cer
  115  vimdiff CA-Subordinate.cer JeromeCertif/CaSubordinate.cer
  116  sudo openfortivpn -c forti-conf --ca-file=/home/jdx/.sec/seloger/JeromeCertif/CA-Subordinate.cer
  117  sudo openfortivpn -c forti-conf
  118  cd .sec/seloger/JeromeCertif
  119  pkill -f openforti
  120  sudo apt-key adv –recv-keys –keyserver keyserver.ubuntu.com 2FAB19E7CCB7F415
  121  ps aux | grep openforti
  122  scp -r jdwescale@192.168.164.71:Downloads/vpn-connexion.png .
  123  openfortivpn vpn.poliris.net:10443 --username=jerome.devoucoux
  124  sudo openfortivpn vpn.poliris.net:10443 --username=jerome.devoucoux
  125  sudo openfortivpn vpn.poliris.net:10443 --username=jerome.devoucoux --trusted-cert 1f855d14db36dbf1392a5cb1a6a4a7087de499529d51bd9092e01ef0aceb11f2
  126  openforti-config
  127  sha256sum CaRoot.cer
  128  cat ad-pwd
  129  cat /home/jdx/.sec/seloger/forti-vpn/vpn_seloger_jdx.p12
  130  sha256sum /home/jdx/.sec/seloger/forti-vpn/vpn_seloger_jdx.p12
  131  vim ~/.sec/seloger/forti-vpn/openforti-config
  132  openssl pkcs12 -in vpn_seloger_jdx.p12 -out vpn_seloger_jdx.pem
  133  cat vpn_seloger_jdx.pem
  134  sha256sum vpn_seloger_jdx.pem
  135  sudo openfortivpn -c ~/.sec/seloger/forti-vpn/openforti-config
  136  man openfortivpn
  137  nslookup vpn.poliris.net
  138  cat openforti-config
  139  cd JeromeCertif
  140  openssl x509 -inform der -in CaSubordinate.cer -out CaSubordinate.pem
  141  sudo openfortivpn -c ~/.sec/seloger/forti-vpn/openforti-config -v
  142  ls -a
  143  vim openforti-config
  144  cp ~/dev/backups/2019-wsc-mac/.aws/credentials .aws
  145  cp ~/dev/backups/2019-wsc-mac/.aws/config .aws
  146  cd .aws
  147  export AWS_PROFILE=data-dev-ci
  148  apt search Remina
  149  apt search remmina
  150  sudo apt install remmina
  151  l | grep forticlientsslvpn_linux_4.4.2331.tar.gz
  152  tar -xvf forticlientsslvpn_linux_4.4.2331.tar.gz\ncd forticlientsslvpn/64bit\n./helper/setup.linux.sh
  153  rm -rf forticlientsslvpn
  154  sudo rm -rf forticlientsslvpn
  155  mv forticlientsslvpn_linux_4.4.2331.tar.gz ~/dev/progs
  156  cd ~/dev/progs
  157  tar -xvf forticlientsslvpn_linux_4.4.2331.tar.gz
  158  cd forticlientsslvpn/64bit
  159  ./helper/setup.linux.sh
  160  sudo ./forticlientsslvpn_cli --server vpn.poliris.net:10443 --vpnuser jerome.devoucoux --pkcs12 ~/.sec/seloger/forti-vpn/vpn_seloger_jdx.p12
  161  touch launch-forticli
  162  chmod +x launch-forticli
  163  mv launch-forticli launch-forticli.sh
  164  vim launch-forticli.sh
  165  rm -rf JeromeCertif
  166  rm vpn_seloger_jdx.pem
  167  rm openforti-config
  168  vim pCloudDrive/docs/wescale/notes/todo.txt
  169  cat pCloudDrive/docs/wescale/notes/todo.txt
  170  cat ../ad-pwd
  171  apt search stacer
  172  sudo dpkg -i stacer_1.1.0_amd64.deb
  173  ps aux | grep stacer
  174  rm stacer_1.1.0_amd64.deb
  175  sudo dpkg -i skypeforlinux-64.deb
  176  oathtool --totp --base32 $TOTP_KEY_JDX_USER$
  177  vim .aws/credentials
  178  cat ~/dev/www/github/infra-jdxlabs/aws-mfa-connect.sh
  179  source ~/dev/www/github/infra-jdxlabs/aws-mfa-connect.sh
  180  upower -i /org/freedesktop/UPower/devices/battery_BAT0
  181  mv ~/dev/backups/2019-wsc-mac/dev/www/seloger/github/sl_ops-workstation .
  182  git commit -m "add offer windu for dev by ops"
  183  git clone git@github.com:axel-springer-kugawana/sl_offer-windu-s3.git
  184  cd sl_offer-windu-s3
  185  chmod +x get-aws-scripts.sh
  186  pip install yasha
  187  pip install yasha --user
  188  pip install yamllint --user
  189  git commit -m "add missing creds for ecr"
  190  ./aws-cloudform.sh --account digital-nonprod --profile digital-nonprod-ci --test
  191  git add .yamllint
  192  git checkout cfn/stacks/digital/nonprod/001-s3/001-windu-dev.yml cfn/templates/s3/v1/main.yml
  193  git commit -m "add yaml exceptions"
  194  ssh -p 64535 18.232.107.81\n
  195  cd sl_digital-sample-app
  196  pip install boto3 --user
  197  /usr/bin/python3 -m pip install -U autopep8 --user
  198  git commit -m "set env var for teamcity"
  199  git commit -m "fix secretsmanager rights"
  200  git checkout poc-teamcity
  201  cd Downloads
  202  cd ../Téléchargements
  203  rm Simplenote-linux-1.5.0-amd64.deb
  204  cd seloger/github/sl_offer-windu-s3
  205  vimdiff cfn/stacks/digital/nonprod/001-s3/001-windu-dev.yml cfn/stacks/digital/nonprod/001-s3/002-windu-rct.yml
  206  pip install troposphere --user
  207  sudo apt install zip
  208  ./aws-cloudform.sh --account central-shared-services --profile central-shared-services-ci --category 002-iamaccess --stack 001-testtc.yml
  209  git merge poc-teamcity 
  210  git branch -d poc-teamcity
  211  git commit -m "remove test trigger"
  212  ssh paut-tcy-ce7403
  213  nslookup paut-tcy-ce7403
  214  nslookup paut-tcy-ce7403.users.poliris.net
  215  ssh root@paut-tcy-ce7403.users.poliris.net
  216  nslookup paut-tcy-ce7403.poliris.net
  217  ./aws-cloudform.sh --account central-shared-services --profile central-shared-services-ci --category 001-tools --stack 001-keyrotator.yml
  218  git commit -m "update lambda key rotator with cloudformation"
  219  aws configure --profile testtc
  220  export AWS_PROFILE=testtc
  221  aws sts assume-role --region eu-west-1 --role-arn arn:aws:iam:::role/digital-nonprod-accesstesttc-iam-role --duration-seconds 3600 --role-session-name assumption-testtc-1558009336
  222  ssh root@paut-tcy-ce7401.poliris.net
  223  ssh root@paut-tcy-ce7402.poliris.net
  224  ssh root@paut-tcy-ce7404.poliris.net
  225  ssh root@paut-tcy-ce7405.poliris.net
  226  ssh root@paut-tcy-ce7406.poliris.net
  227  touch tmp_aws_session
  228  rm tmp_aws_session
  229  git commit -m "debug assumerole bash"
  230  apt search powershell
  231  apt search retex
  232  sudo apt install retex
  233  sudo apt install retext
  234  cat ~/.aws/credentials 
  235  sudo dpkg -i code_1.34.0-1557957934_amd64.deb
  236  rm code_1.34.0-1557957934_amd64.deb
  237  apt search gnupg
  238  apt search apt-transport-https
  239  sudo apt install apt-transport-https
  240  cd seloger/github/sl_digital-sample-app
  241  curl https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add -
  242  sudo sh -c 'echo "deb [arch=amd64] https://packages.microsoft.com/repos/microsoft-debian-stretch-prod stretch main" > /etc/apt/sources.list.d/microsoft.list'\n\n
  243  sudo apt --fix-missing install
  244  rm powershell_6.2.0-1.debian.9_amd64.deb
  245  sudo dpkg -i powershell_6.2.0-1.ubuntu.18.04_amd64.deb
  246  apt search liblttng-ust0
  247  sudo apt install liblttng-ust0
  248  sudo apt install libssl1.0.0
  249  sudo apt install libssl1.1 
  250  sudo apt install libicu60
  251  sudo apt install libicu63
  252  sudo dpkg -i powershell_6.2.0-1.debian.9_amd64.deb
  253  rm powershell*
  254  rm powershell-6.2.0-linux-x64.tar.gz
  255  apt search libssl
  256  rm libssl1.0.0_1.0.1t-1+deb8u11_amd64.deb
  257  sudo dpkg -i libssl1.0-dev_1.0.2r-1\~deb9u1_amd64.deb
  258  rm libssl1.0-dev_1.0.2r-1\~deb9u1_amd64.deb
  259  which pwsh
  260  pwsh help
  261  pwsh
  262  grep -nri "missing jq" .
  263  cd backups/2019-wsc-mac/dev/www/old-prjs
  264  cd jin-infra_2018-06-01
  265  cat mfa-connect.sh
  266  gitk
  267  sudo apt install gitk
  268  gitk poc-assume-role/s3-ls-bash.sh
  269  git commit -m "debug assumerole powershell"
  270  cd jin
  271  grep -nri docker .
  272  sudo gpasswd -a $USER docker\n
  273  sudo groupadd docker\n
  274  docker run hello-world
  275  docker pull mcr.microsoft.com/powershell
  276  docker run -it --name powershell mcr.microsoft.com/powershell
  277  docker rm powershell
  278  cd dev/www/seloger/github/sl_ops-workstation
  279  cat docker-construct.ps1
  280  docker build -t ops-workstation -f ./docker-ops-worsktation/Dockerfile ./docker-ops-worsktation/
  281  docker run -td --name ops-workstation -v ~/.aws:/root/.aws -v ~/dev/www:/userdata ops-workstation
  282  docker exec -it ops-workstation bash
  283  cd seloger/github/sl_ops-workstation
  284  yamsha
  285  yamcha
  286  pip search requests
  287  pip search yamsha
  288  pip search yamcha
  289  apt search yamsha
  290  apt search yamcha
  291  git commit -m "add commands for linux users"
  292  docker stop -t0 ops-workstation
  293  docker rm ops-workstation
  294  cat pCloudDrive/docs/wescale/todo.txt
  295  ssh-copy-id -i ~/.ssh/id_rsa.pub admin@vps
  296  node -v
  297  gravc
  298  grabc
  299  sudo apt install filezilla
  300  uname -m
  301  curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64 \\n  && chmod +x minikube
  302  sudo cp minikube /usr/local/bin && rm minikube
  303  minikube
  304  apt search virtualbox-dkms
  305  grep -nri minikube .
  306  sudo dpkg-reconfigure virtualbox-dkms
  307  sudo dpkg-reconfigure virtualbox
  308  sudo modprobe vboxdrv
  309  sudo modprobe vboxnetflt
  310  minikube delete
  311  rm -rf .minikube
  312  l | grep docker
  313  l .minikube
  314  cd .minikube
  315  curl -LO https://storage.googleapis.com/kubernetes-release/release/$\(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt\)/bin/linux/amd64/kubectl
  316  curl -LO https://storage.googleapis.com/kubernetes-release/release/v1.14.0/bin/linux/amd64/kubectl
  317  rm '$(curl'
  318  chmod +x ./kubectl
  319  mv kubectl ~/.local/bin
  320  grep -nri minikube
  321  curl
  322  nslookup seloger.com
  323  nslookup google.com
  324  minikube status
  325  minikube 
  326  kg po
  327  kubectl get all --show-all
  328  kubectl get po --show-all
  329  kubectl get help
  330  kubectl get --help
  331  cd dev/www/bitbucket/jdxlabs
  332  ls -lact --full-time /etc |tail
  333  cd pCloudDrive/dev/tests/nomad
  334  cd nomad
  335  cd /home/jdx/pCloudDrive/dev/tests/nomad
  336  unzip consul_1.5.0_linux_amd64.zip
  337  mv consul ~/.local/bin
  338  consil
  339  consul
  340  consul agent -dev
  341  unzip nomad_0.9.1_linux_amd64.zip
  342  unzip packer_1.4.1_linux_amd64.zip
  343  unzip vagrant_2.2.4_linux_amd64.zip
  344  unzip vault_1.1.2_linux_amd64.zip
  345  mv nomad ~/.local/bin
  346  mv packer ~/.local/bin
  347  mv vagrant ~/.local/bin
  348  mv vault ~/.local/bin
  349  rm *linux*
  350  nomad agent -dev -config=nomad.conf
  351  nomad jobs
  352  docker exec -it 73d90babb2ba 
  353  docker exec -it 73d90babb2ba redis-cli
  354  nomad status test-batch
  355  nomad run job.hcl
  356  nomad stop test-batch
  357  nomad help
  358  docker exec -it 5bb062e20ce3 redis-cli
  359  nomad logs redis-svc
  360  nomad log redis-svc
  361  nomad status redis-svc
  362  nomad logs 8874060a -f 200
  363  nomad logs help
  364  nomad logs --help
  365  nomad logs 8874060a -n 200
  366  nomad logs -n200 8874060a
  367  nomad logs -n 200 8874060a
  368  nomad logs -tail 200 8874060a
  369  nomad alloc logs -tail 200 8874060a
  370  nomad logs 8874060a
  371  ps aux | grep vim
  372  ps aux | grep consul
  373  cd flat
  374  mv test_kube tests_kube
  375  cd tests_kube
  376  cd basics
  377  kubectl apply -f redis-deployment.yml
  378  kubectl logs redis-master-74b4bf6796-zb9hd
  379  kubectl exec redis-master-74b4bf6796-zb9hd
  380  kubectl exec redis-master
  381  kubectl exec -h
  382  kubectl exec -it redis-master-74b4bf6796-zb9hd redis-cli
  383  minikube stop
  384  cd dev/backups/2019-wsc-mac/dev/www/old-prjs/
  385  cd dev/www/
  386  mkdir old-prjs
  387  mv jin-infra_2018-05-14 ~/dev/www/old-prjs
  388  l old-prjs
  389  mv flat/kube-formation-lvl1 ~/dev/www/flat
  390  cd flat/
  391  mv im-workshop-istio ibm-workshop-istio
  392  cd ibm-workshop-istio
  393  rm ibm-workshop-istio
  394  rm -r ibm-workshop-istio
  395  cd ../github
  396  git clone https://github.com/IBM/istio101
  397  docker run -it -p 8080-8085:8080-8085 jjasghar/ibm-cloud-cli
  398  watch -n1 'curl http://158.177.67.219/'
  399  cat /etc/fstab
  400  cat ~/pCloudDrive/docs/wescale/todo.txt
  401  diff -bur . ../infra-jdwescale
  402  touch eks/.keep
  403  mv sbx vpc-sbx
  404  mv eks vpc-eks
  405  mv vpc-sbx clusters-sbx
  406  mv vpc-eks clusters-eks
  407  cp -r clusters-eks clusters-gke
  408  git commit -m "set theorical basis for new infra"
  409  git commit -m "copy from jdwsc-pp"
  410  grep -nri jdwsc .
  411  ps aux | grep box
  412  ps aux | grep virtualbox
  413  ps aux | grep kube
  414  minikube dashboard
  415  minikube shh
  416  minikube ssh
  417  history | grep jlabs
  418  history | grep lab
  419  history | grep s3
  420  grep -nri jlab .
  421  history | grep find
  422  mv ./clusters-nomad/jdwsc-pp-ansible.cfg ./clusters-nomad/jlabs-pp-ansible.cfg
  423  rm ./clusters-nomad/terraform/00-prebuild/jdwsc-pp-ctn.eu-west-1.tfstate
  424  mv ./clusters-nomad/terraform/jdwsc-pp-ctn-eu-west-1.tfvars ./clusters-nomad/terraform/jlabs-pp-ctn-eu-west-1.tfvars
  425  mv ./clusters-nomad/jdwsc-pp ./clusters-nomad/jlabs-pp
  426  rm ./clusters-nomad/jdwsc-pp-ssh.cfg
  427  rm ./clusters-es/terraform/00-prebuild/jdwsc-pp.eu-west-1.tfstate
  428  rm ./clusters-es/terraform/00-snapshots/jdwsc-pp.eu-west-1.tfstate.backup
  429  rm ./clusters-es/terraform/00-snapshots/jdwsc-pp.eu-west-1.tfstate
  430  mv ./clusters-es/jdwsc-pp-ansible.cfg ./clusters-es/jlabs-pp-ansible.cfg
  431  mv ./clusters-es/terraform/jdwsc-pp-eu-west-1.tfvars ./clusters-es/terraform/jlabs-pp-eu-west-1.tfvars
  432  find . -iname "*jdwsc*"
  433  mv ./clusters-es/jdwsc-pp ./clusters-es/jlabs-pp
  434  rm ./clusters-es/jdwsc-pp-ssh.cfg
  435  mv ./secrets/jdwsc-pp-ctn-eu-west-1 ./secrets/jlabs-pp-ctn-eu-west-1
  436  git commit -m "rename folders to jlabs"
  437  rm -rf ./clusters-nomad/terraform/02-monitoring/.terraform ./clusters-nomad/terraform/01-access-rights/.terraform ./clusters-nomad/terraform/01-logstore/.terraform ./clusters-nomad/terraform/00-prebuild/.terraform ./clusters-nomad/terraform/03-nomad-masters/.terraform ./clusters-nomad/terraform/05-entrypoints/.terraform ./clusters-nomad/terraform/04-nomad-workers/.terraform ./clusters-es/terraform/03-elasticsearch/.terraform ./clusters-es/terraform/00-prebuild/.terraform ./clusters-es/terraform/02-bastion/.terraform ./clusters-es/terraform/04-monitoring/.terraform ./clusters-es/terraform/01-landscape/.terraform ./clusters-es/terraform/00-snapshots/.terraform
  438  find . -iname ".terraform"
  439  git commit -m "big renaming to jlabs"
  440  git tag v1.0.1
  441  apt search snapd
  442  sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 931FF8E79F0876134EDDBDCCA87FF9DF48BF1C90
  443  echo deb http://repository.spotify.com stable non-free | sudo tee /etc/apt/sources.list.d/spotify.list
  444  unzip terraform_0.12.0_linux_amd64.zip
  445  mv terraform ~/.local/bin/terraform012
  446  terraform012 --version
  447  rm terraform_0.12.0_linux_amd64.zip
  448  mkdir -p _tmp/photos
  449  mv kubecon-party_* _tmp/photos
  450  mv wsc-marrakesh-2018_* _tmp/photos
  451  mv Image\ from\ iOS.jpg _tmp/photos
  452  mkdir _tmp/mudday
  453  mv certificat_medical.pdf _tmp/mudday
  454  mv the-mud-day-certificatmedical-sportsautorises-competition.pdf _tmp/mudday
  455  mv resa_barcelone _tmp
  456  gitk configs/iam-inventory/groups/dynatrace.yml
  457  ping groscalcul4
  458  ping groscalcul
  459  ping groscalculs
  460  ping groscalculs4
  461  nslookup groscalculs
  462  nslookup groscalculs4
  463  nslookup groscalculs4.poliris.net
  464  nslookup groscalculs4.users.poliris.net
  465  nslookup groscalcul.users.poliris.net
  466  nslookup groscalculs.users.poliris.net
  467  nslookup groscalculs.poliris.net
  468  git clone git@github.com:axel-springer-kugawana/sl_ops-localadminsmanagement.git
  469  cd sl_ops-localadminsmanagement
  470  grep -nri groscal .
  471  nslookup groscalcul4.poliris.net
  472  history | grep nslookup
  473  nslookup ws-recommender2.prod.aws.datahub.poliris.net
  474  nslookup ws-recommender.prod.aws.datahub.poliris.net
  475  traceroute ws-recommender2.prod.aws.datahub.poliris.net
  476  route print
  477  ssh root@paut-tcy-ce7403.poliris.net
  478  cd ../sl_ops-aws-base-infra
  479  ruby
  480  apt search ruby
  481  sudo apt install ruby
  482  ruby -V
  483  ruby --version
  484  gem install cfn-nag --user
  485  gem
  486  gem list --local
  487  ./aws-cloudform.sh --account central-shared-services --profile central-shared-services-ci --cfn-nag
  488  ./aws-cloudform.sh --account central-shared-services --profile central-shared-services-ci --cfn-nag | grep fail
  489  ./aws-cloudform.sh --account central-shared-services --profile central-shared-services-ci --cfn-nag | grep Fail
  490  sudo gem uninstall cfn-nag --user
  491  sudo gem uninstall cfn-nag
  492  gem uninstall cfn-nag --user
  493  gem install --local cfn-nag
  494  gem install --user-install cfn-nag
  495  cfn_nag_scan
  496  cat .sec/seloger/ad-pwd
  497  apt search scangear
  498  sudo dpkg -i scangearmp2-3.40-1-deb
  499  sudo dpkg -i scangearmp2-3.40-1-deb/packages
  500  ./install.sh
  501  scangearmp2
  502  rm -rf scangearmp2-3.40-1-deb
  503  mkdir pCloudDrive/docs/wescale/drafts
  504  aws s3 sync help
  505  git commit -m "delete at sync for iam-inventory"
  506  traceroute ws-slplus.prod.aws.datahub.poliris.net
  507  mv ~/dev/backups/2019-wsc-mac/dev/www/seloger/github/sl_it-names .
  508  cd sl_it-names
  509  git checkout develeop
  510  git checkout -b feature/fix-docker-img
  511  git commit -m "fix docker img to work with assume role"
  512  git push --set-upstream origin feature/fix-docker-img
  513  ssh -p 64535 54.210.74.150
  514  ssh -p 64535 54.210.74.150\n
  515  ssh -p 64535 54.221.45.204\n
  516  rm .DS_Store
  517  git commit -m "use available tools in the container"
  518  git commit -m "handle python scripts"
  519  ssh -p 64536 35.168.20.231\n
  520  cd sl_docker-awscli-python3
  521  gitk Dockerfile
  522  ssh -p 64536 3.90.109.49\n\n
  523  export ENVIRONMENT=dev
  524  pylint push.py
  525  python push.py 
  526  gd push.py
  527  git checkout push.py
  528  git commit -m "add dynamodb for ops"
  529  git commit -m "add some structure : linting, configuration"
  530  ssh -p 64537 52.90.21.44
  531  git commit -m "init session before call boto3"
  532  git branch -d feature/fix-docker-img
  533  git fetch && git checkout platform
  534  git rm applications.yaml teams.yaml
  535  git commit -m "merge master into platform branch"
  536  git merge platform
  537  git commit -m "add platform team and apps (by mario)"
  538  git commit -m "fix format"
  539  git branch -d platform
  540  git branch -d data-add-project-specific-rights
  541  git checkout -b switch-central-auth
  542  git push --set-upstream origin switch-central-auth
  543  cat sl_aws-base-infra/.git/config
  544  git clone git@github.com:axel-springer-kugawana/sl_askbot.git
  545  cd sl_askbot
  546  rm -rf configs/iam-inventory/groups_bkp/
  547  git commit -m "add askbot"
  548  ssh -p 64535 100.24.64.5\n
  549  ./aws-cloudform.sh --account central-shared-services --profile central-shared-services-ci --category 002-iamaccess --stack 008-data.yml --skip-build
  550  ./aws-cloudform.sh --account central-shared-services --profile central-shared-services-ci --category 002-iamaccess --stack 008-data.yml
  551  git checkout switch-central-auth 
  552  cp -r configs/iam-inventory configs/iam-inventory_bkp
  553  git commit -m "backup iam inventory"
  554  git reset --hard e92673c76f9d5924a03a92cad8e5a0543511c92f
  555  git push -f origin e92673c76f9d5924a03a92cad8e5a0543511c92f:switch-central-auth
  556  tree configs
  557  grep -nri groups .
  558  git commit -m "set groups-test to isolate askbot"
  559  git commit -m "fix askbot"
  560  git commit -m "add missing permission for askbot"
  561  git commit -m "sync group-test"
  562  git commit -m "hide dev envs for tests"
  563  terraform012 version
  564  git commit -m "transverse rename"
  565  git commit -m "set tools for auth account"
  566  echo $AWS_ACCESS_KEY_ID_CENTRAL_SHARED_SERVICES
  567  cat ~/.aws/credentials| grep ccess
  568  cat ~/.aws/credentials| grep BHGL
  569  ssh -p 64535 18.215.255.35
  570  aws configure --profile central-auth-ci
  571  ./aws-cloudform.sh --account central-shared-services --profile central-auth-ci --test
  572  git commit -m "circle pipeline"
  573  cd sl_aws-base-infra
  574  git checkout -b add-central-auth
  575  git push --set-upstream origin add-central-auth
  576  ./aws-bootstrap.sh
  577  ./aws-bootstrap.sh --organization seloger --accountGroup central --context auth --region eu-west-1
  578  git commit -m "bootstrap central auth"
  579  cd terraform/00-prebuild
  580  cd ../00-snapshots
  581  git commit -m "prebuild"
  582  git add ../
  583  cd terraform/00-snapshots
  584  terraform plan -var=target_name=jlabs-pp -var=target_region=eu-west-1 -state=jlabs-pp.eu-west-1.tfstate
  585  terraform apply -var=target_name=jlabs-pp -var=target_region=eu-west-1 -state=jlabs-pp.eu-west-1.tfstate
  586  git commit -m "add es snapshot"
  587  git rm clusters-es/terraform/01-landscape/.terraform
  588  git squash help
  589  git squash-all help
  590  git squash-all --help
  591  git rebase --help
  592  git rebase -i HEAD~4
  593  git filter-branch --tree-filter 'rm -rf clusters-es/terraform/01-landscape/.terraform' HEAD\n
  594  git filter-branch --tree-filter 'rm -rf clusters-es/terraform/00-prebuild/.terraform' HEAD\n
  595  git filter-branch -f --tree-filter 'rm -rf clusters-es/terraform/00-prebuild/.terraform' HEAD\n
  596  git filter-branch -f --tree-filter 'rm -rf clusters-es/terraform/00-snapshots/.terraform' HEAD\n
  597  gdst
  598  git filter-branch --tree-filter 'rm -rf clusters-es/terraform/02-bastion/.terraform' HEAD
  599  git filter-branch -f --tree-filter 'rm -rf clusters-es/terraform/02-bastion/.terraform' HEAD
  600  git filter-branch -f --tree-filter 'rm -rf clusters-nomad/terraform/00-prebuild/.terraform' HEAD
  601  git filter-branch -f --tree-filter 'rm -rf clusters-es/terraform/03-elasticsearch/.terraform' HEAD
  602  git filter-branch -f --tree-filter 'rm -rf clusters-es/terraform/04-monitoring/.terraform' HEAD
  603  git filter-branch -f --tree-filter 'rm -rf clusters-nomad/terraform/01-access-rights/.terraform' HEAD
  604  git filter-branch -f --tree-filter 'rm -rf clusters-nomad/terraform/01-logstore/.terraform' HEAD
  605  git filter-branch -f --tree-filter 'rm -rf clusters-nomad/terraform/02-monitoring/.terraform' HEAD
  606  git filter-branch -f --tree-filter 'rm -rf clusters-nomad/terraform/03-nomad-masters/.terraform' HEAD
  607  git filter-branch -f --tree-filter 'rm -rf clusters-nomad/terraform/04-nomad-workers/.terraform' HEAD
  608  git filter-branch -f --tree-filter 'rm -rf clusters-nomad/terraform/05-entrypoints/.terraform' HEAD
  609  cd clusters-es/terraform/00-prebuild
  610  terraform init -plugin-dir ~/.terraform
  611  pip install ansible --user
  612  ansible-playbook plays/apply/apply.yml -e layer_name=01-landscape -vvv
  613  echo $AWS_SESSION_TOKEN
  614  echo $AWS_DEFAULT_REGION
  615  echo 
  616  ansible-playbook plays/apply/apply.yml -e layer_name=01-landscape  -e target_name=jlabs-pp -e target_region=eu-west-1
  617  echo $ANSIBLE_CFG
  618  vimdiff ../aws-mfa-connect.sh ../../infra-jdwescale/aws-mfa-connect.sh
  619  ansible-playbook plays/apply/apply.yml -e layer_name=01-landscape
  620  git checkout clusters-es/apply_all.sh
  621  git commit -m "fix mfa-connect"
  622  sudo apt install python3-venv
  623  python -m venv venv
  624  rm -rf ~/.cache/pip
  625  pip install --upgrade ansible==2.4.0
  626  pip --help
  627  pip uninstall --help
  628  pip install --upgrade ansible==2.4.0 --user
  629  pip install --upgrade ansible==2.5.0 --user
  630  vim requirements.txt
  631  pip help
  632  pip install -r ../requirements.txt
  633  pip install -r ../requirements.txt --user
  634  cat ~/.ssh/jlabs-pp-aws-bastion
  635  cat ~/.ssh/jlabs-pp-aws-bastion.pub
  636  ansible -m ping bastion
  637  ansible-playbook plays/apply/apply.yml -e layer_name=02-bastion
  638  ansible-playbook plays/apply/apply.yml -e layer_name=03-elasticsearch
  639  ansible-playbook plays/apply/apply.yml -e layer_name=04-monitoring
  640  ssh -f jlabs-pp-ssh.cfg admin@es-instance-master-0
  641  git add ../.
  642  git commit -m "ansible es working"
  643  ansible-playbook plays/apply/apply_es_cluster.yml -vvv
  644  ssh-copy-id -i ~/.ssh/id_rsa.pub jdx@192.168.0.12
  645  ssh jdx@192.168.0.12
  646  sudo apt install ghostscript
  647  cd Téléchargements/admin_stuff/dossier_location
  648  ps2pdf contrat\ -\ Jérôme\ Devoucoux\ -\ Wescale.pdf contrat-jdevoucoux-wescale.pdf
  649  cd dev/www/github/infra-jdxlabs
  650  ssh -F jlabs-pp-ssh.cfg admin@es-instance-worker-0
  651  ssh -F jlabs-pp-ssh.cfg admin@monitor-instance
  652  ./apply_all.sh
  653  ssh -F jlabs-pp-ssh.cfg admin@es-instance-master-0
  654  grep -nri backport .
  655  ansible-playbook plays/apply/apply_es_cluster.yml
  656  ./destroy_all.sh
  657  cat apply_all.sh
  658  ansible-playbook plays/apply/apply.yml -e layer_name=01-landscape -e auto_apply=true
  659  gp-
  660  ansible-playbook plays/apply/apply.yml -e layer_name=02-bastion -e auto_apply=true
  661  aws configure --profile aws-jdx-sandbox
  662  aws configure
  663  aws s3 l
  664  cd gitlab/aws-cost-and-usage-reporter
  665  cd ../../github/infra-jdxlabs
  666  ansible-playbook plays/destroy/destroy.yml -e layer_name=02-bastion
  667  env | grep ANS
  668  export ANSIBLE_CONFIG=./jlabs-pp-ansible.cfg
  669  cat jlabs-pp-ansible.cfg
  670  cd terraform/02-bastion
  671  cd //
  672  emulate bash -c 'source ~/dev/www/github/infra-jdxlabs/aws-mfa-connect.sh'
  673  cd clusters-es
  674  echo $ANSIBLE_CONFIG
  675  oathtool --totp --base32 $TOTP_KEY_JDX_USER
  676  which virtualenv
  677  pip install --upgrade virtualenv
  678  history | grep ansible
  679  pip uninstall ansible --user
  680  pip uninstall ansible
  681  ansible
  682  virtualenv
  683  pip install virtualenv --user
  684  pip search wheel
  685  pip uninstall wheel
  686  sudo pip uninstall wheel
  687  pip install wheel --user
  688  pip install --upgrade --user pip
  689  pip install --upgrade virtualenvwrapper
  690  sudo pip install --upgrade virtualenvwrapper
  691  sudo pip uninstall virtualenvwrapper
  692  git commit -m "add central auth in circleci"
  693  git commit -m "add develop in pipeline"
  694  pip install --upgrade
  695  pip install --upgrade all
  696  pip install --upgrade urllib3
  697  pip install --upgrade urllib3 --user
  698  pip install --upgrade botocore --user
  699  pip install --upgrade awscli --user
  700  pip install --upgrade boto3 troposphere --user
  701  pip install --upgrade certifi colorama cryptography distro httplib2 idna --user
  702  pip install --upgrade Mako Markdown MarkupSafe pexpect Pillow pycairo pycups Pygments PyGObject pysmbc pyxdg PyYAML reportlab requests roman rsa  --user
  703  pip list --outdated
  704  pip install --upgrade PyGObject --user
  705  pip install --upgrade pycairo --user
  706  pip uninstall pycairo
  707  git checkout setuptools wheel pycairo
  708  sudo apt remove python-pip-whl --purge
  709  sudo python3 get-pip.py
  710  apt search python-pip
  711  sudo apt install --reinstall virtualenv
  712  sudo apt remove virtualenv
  713  pip install --reinstall virtualenv
  714  pip install virtualenv
  715  pip uninstall virtualenv
  716  sudo pip uninstall virtualenv
  717  sudo pip install --upgrade virtualenv
  718  virtualenv venv --quiet
  719  rm -rf build
  720  git commit -m "fix circlec"
  721  git commit -m "fix circle"
  722  ./aws-cloudform.sh --account central-auth --profile central-auth-ci --test
  723  ssh -p 64535 54.145.233.165\n
  724  cat get-aws-scripts.sh
  725  git commit -m "authorize central auth"
  726  ssh -p 64535 54.227.3.190\n
  727  aws configure --profile oneshot
  728  echo $?
  729  aws s3 ls s3://seloger-central-shared-services-infra-bucket/
  730  cd github/sl_askbot
  731  ssh -p 64535 3.83.164.105
  732  export AWS_PROFILE=oneshot
  733  git commit -m "set central auth for assume role"
  734  aws s3 ls jlabs-pp-pics
  735  aws s3 ls jlabs-pp-pics/nature
  736  aws s3 ls jlabs-pp-pics/nature/
  737  cd .local/bin
  738  mv terraform terraform011
  739  mv terraform012 terraform
  740  cd github/infra-jdxlabs
  741  git checkout -b wip2
  742  rm clusters-*
  743  rm -rf clusters-*
  744  rm aws-mfa-connect.sh
  745  rm requirements.txt
  746  rm -rf secrets
  747  rm -rf libs
  748  git commit -m "set new basis"
  749  git push --set-upstream origin wip2
  750  CLOUD_SDK_REPO="cloud-sdk-$(grep VERSION_CODENAME /etc/os-release | cut -d '=' -f 2)"\n
  751  echo $CLOUD_SDK_REPO
  752  echo "deb http://packages.cloud.google.com/apt $CLOUD_SDK_REPO main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
  753  curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -\n
  754  node -V
  755  node --version
  756  node
  757  gcloud help
  758  gcloud storage help
  759  cd bitbucket/jdxlabs
  760  cd jdxlabs
  761  git reset
  762  diff -bur notes/lib/tpl/dokuwiki notes/lib/tpl/jdxlabs
  763  git commit -m "remove custom tpl dokuwiki"
  764  git pusb --tags
  765  git merge dev
  766  man ssh-keygen
  767  ping facebook.com
  768  nslookup twitter.com
  769  ping twitter.com
  770  terraform 012upgrade
  771  terraform 0.12upgrade
  772  mkdir aws
  773  mkdir vpc
  774  mkdir tf
  775  mv vpc tf/01-vpc
  776  mv vpc tf/02-ec2
  777  mkdir vpc tf/02-ec2
  778  rm -rf vpc
  779  curl https://circleci.com/api/v1.1/me\?circle-token\=:token
  780  cd configs/iam-inventory/groups
  781  grep -nri sl_ .
  782  cat ~/pCloudDrive/docs/ws-seloger/notes/task-notes/2019-06-05-migrate-process-central-auth.txt
  783  rm -rf cfn/stacks/central/auth/
  784  git commit -m "add 2 missings repos"
  785  git checkout develop 
  786  git commit -m "set basic vpc"
  787  git add ../../../
  788  git commit -m "update conf"
  789  terraform 0.12upgrade .
  790  terraform 0.12upgrade ./zone
  791  terraform plan -var-file ../../../configs/jlabs-pp-aws-vpc.tfvars 
  792  terraform apply -var-file ../../../configs/jlabs-pp-aws-vpc.tfvars 
  793  git commit -m "fix tf syntax"
  794  git tag v1.1.0
  795  git branch -d wip
  796  cd ../../\n
  797  git filter-branch --tree-filter 'rm -rf clusters-es/terraform/01-landscape/.terraform' HEAD
  798  git filter-branch --tree-filter 'rm -rf clusters-es/terraform/00-prebuild/.terraform' HEAD
  799  git tag -d v1.0.0
  800  git tag -d v1.0.1
  801  git tag -d v1.1.1
  802  git push origin :refs/tags/v1.0.0
  803  git push origin :refs/tags/v1.0.1
  804  cd dev/backups/2019-wsc-mac/dev/www/seloger/_old/gitlab
  805  cd aws/terraform/001-vpc
  806  terraform destroy -var-file ../../configs/jlabs-pp-aws-vpc.tfvars 
  807  git ad .
  808  git commit -m "add makefile"
  809  tf-plan-pp
  810  make tf-plan-pp
  811  terraform plan  help
  812  cd aws/terraform/001-vpc/
  813  terraform plan -var-file ../../configs/jlabs-pp-aws-vpc.tfvars 
  814  make tf-plan-pp LAYER_PATH=001-vpc
  815  make tf-apply-pp LAYER_PATH=001-vpc
  816  make tf-destroy-pp LAYER_PATH=001-vpc
  817  chmod +x clean.sh
  818  find . -name ".terraform" .
  819  find . -name ".terraform"
  820  find . -name ".terraform" -type d
  821  ncdu .
  822  l$
  823  l .ssh
  824  mv jlabs-pp-eu-west-1.pem ~/.ssh/
  825  chmod 400 ~/.ssh/jlabs-pp-eu-west-1.pem
  826  git commit -m "make asg"
  827  make tf-destroy-aws-pp LAYER_PATH=002-vpc
  828  make tf-destroy-aws-pp LAYER_PATH=002-asg
  829  make tf-destroy-aws-pp LAYER_PATH=001-vpc
  830  make tf-apply-aws-pp LAYER_PATH=001-vpc
  831  make tf-plan-aws-pp LAYER_PATH=002-asg
  832  make tf-apply-aws-pp LAYER_PATH=002-asg
  833  ssh -i ~/.ssh/jlabs-pp-eu-west-1.pem
  834  ssh -i ~/.ssh/jlabs-pp-eu-west-1.pem admin@34.250.39.93
  835  nslookup 34.250.39.93
  836  terraform apply --help
  837  chmod +x aws-apply.sh
  838  terraform destroy --help
  839  cd dev/
  840  find . -name ".terraform" -type d -exec rm -rf {} \;
  841  git merge wip2
  842  git merge wip2 
  843  git checkout wip2
  844  git branch -d master
  845  git checkout -b wip
  846  git push --set-upstream origin wip
  847  git branch -d wip2
  848  mv ../../old-prjs/infra-jdwescale ~/dev/backups/2019-wsc-mac/dev/www/github
  849  l ~/dev/backups/2019-wsc-mac/dev/www/github
  850  l ../../old-prjs/
  851  mv infra-jdxlabs jlabs_base-infra
  852  l jlabs_base-infra
  853  vim jlabs_base-infra/.git/config
  854  git commit -m "rename readme"
  855  tf-plan-aws-pp
  856  make tf-plan-aws-pp LAYER_PATH=001-vpc
  857  git commit -m "avoid repetition"
  858  vimdiff configs/iam-inventory/groups-test/askbot.yml configs/iam-inventory/groups/askbot.yml
  859  git commit -m "reactivate full circle pipeline"
  860  git commit -m "set groups and update lambda"
  861  git checkout add-central-auth
  862  git merge add-central-auth
  863  git branch -d add-central-auth
  864  git merge switch-central-auth 
  865  ssh -p 64536 3.89.156.88
  866  aws secretsmanager get-secret-value --secret-id arn:aws:secretsmanager:eu-west-1:673277413506:secret:central-auth-masterkeycircleci-secret-OZBhun
  867  aws secretsmanager help
  868  grep -nri "aws secretsmanager" .
  869  export AWS_PROFILE=central-auth-ci
  870  aws secretsmanager get-secret-value --secret-id central-auth-masterkeycircleci
  871  aws secretsmanager list-secrets
  872  ./generate-cfn.sh -cclean
  873  ./generate-cfn.sh -clean
  874  ./aws-cloudform.sh --account data-dev --profile data-dev-ci
  875  ./aws-cloudform.sh --account data-prod --profile data-prod-ci
  876  ssh -p 64535 3.81.1.13
  877  ./aws-cloudform.sh --account digital-prod --profile digital-prod-ci
  878  git checkout switch-central-auth
  879  git merge switch-central-auth
  880  git branch -d switch-central-auth
  881  git commit -m "update ops rights for auth account"
  882  curl --silent --location "https://github.com/weaveworks/eksctl/releases/download/latest_release/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
  883  mv /tmp/eksctl ~/.local/bin
  884  ./clean.sh
  885  chmod +x aws/eks/create.sh
  886  eksctl --help
  887  git clone git@github.com:axel-springer-kugawana/sl_ett_statistics.git
  888  cd sl_ett_statistics
  889  vim .circleci/config.yml
  890  git commit -m "add ecr keys"
  891  ssh -p 64535 3.91.152.218\n\n
  892  ./aws/eks/create.sh
  893  export AWS_PROFILE=central-shared-services-ci
  894  aws s3 ls seloger-ettstatistics-prod-bucket
  895  aws s3 cp seloger-ettstatistics-prod-bucket/service-worker.js .
  896  aws s3 cp s3://seloger-ettstatistics-prod-bucket/service-worker.js .
  897  cat service-worker.js
  898  aws s3 ls s3://seloger-central-shared-services-infra-bucket/scripts
  899  aws s3 ls s3://seloger-central-shared-services-infra-bucket/scripts/
  900  aws s3 cp s3://seloger-central-shared-services-infra-bucket/scripts/lambda/v2/deploy-py.sh .
  901  aws sts --help
  902  aws sts help
  903  aws sts assume-role help
  904  ssh -p 64539 3.80.174.67\n
  905  go
  906  apt search golang
  907  sudo apt install golang
  908  go get -u -v github.com/kubernetes-sigs/aws-iam-authenticator/cmd/aws-iam-authenticator
  909  man ln
  910  ln -s ~/go/bin/aws-iam-authenticator ~/.local/bin/aws-iam-authenticator
  911  ./aws/eks/destroy.sh
  912  git commit -m "add eks cmds"
  913  git commit -m "fix deploy lambda"
  914  ssh -p 64539 34.203.191.179\n\n
  915  ./aws-cloudform.sh --account central-shared-services --profile central-shared-services-ci
  916  ./aws-cloudform.sh --account central-shared-services --profile central-shared-services-ci --category 002-iamaccess --stack 007-ettstatistics.yml --skip-build
  917  ./aws-cloudform.sh --account central-shared-services --profile central-shared-services-ci --category 002-iamaccess --stack 005-ettstatistics.yml --skip-build
  918  git commit -m "add some iam actions"
  919  ./aws-cloudform.sh --account central-auth --profile central-auth-ci --category 001-tools --stack 001-keyrotator.yml --skip-build
  920  ./aws-cloudform.sh --account central-auth --profile central-auth-ci --category 001-tools --stack 001-keyrotator.yml
  921  git commit -m "refacto and eks conf"
  922  ssh admin@34.244.38.52
  923  ssh -i ~/.ssh/id_rsa admin@34.244.38.52
  924  eksctl -h
  925  eksctl help
  926  eksctl
  927  eksctl version
  928  eksctl update help
  929  eksctl update --help
  930  eksctl create --help
  931  eksctl get --help
  932  eksctl get cluster
  933  eksctl get nodegroup
  934  eksctl get nodegroup --cluster jlabs-pp-eks
  935  vim ~/.kube
  936  ./aws-destroy.sh
  937  sudo dpkg -i code_1.35.0-1559611369_amd64.deb
  938  rm -rf code_1.35.0-1559611369_amd64.deb
  939  mkdir clis
  940  cd www
  941  mv seloger clis
  942  cd clis/seloger/github
  943  cd sl_ops-aws-
  944  l flat/jin-infra_2018-05-14/
  945  mkdir _old
  946  mv cli/seloger/ .
  947  pip install requests
  948  pip install urllib3 chardet
  949  pip uninstall request --user
  950  pip uninstall requests --user
  951  pip uninstall requests
  952  sudo pip uninstall requests
  953  pip install requests --user
  954  pip install tabnanny --user
  955  python -m tabnanny lambdas/key-rotator/main.py
  956  python -m tabnanny test.py
  957  rm test.py
  958  gitk lambdas/key-rotator/main.py
  959  python lambdas/key-rotator/main.py
  960  touch tmp.py
  961  rm tmp.py
  962  ping http://teamcity.seloger.com
  963  git commit -m "vpn for central-auth"
  964  export AWS_PROFILE=debug-auth
  965  ./aws-cloudform.sh --account central-auth --profile central-auth-ci
  966  ./aws-cloudform.sh --account central-auth --profile central-auth-ci --skip-build
  967  curl http://teamcity.seloger.com
  968  curl http://teamcity.seloger.com/login.html
  969  cd flat/python-recipes
  970  python test-url.py
  971  ./aws-cloudform.sh --account central-shared-services --profile central-shared-services-ci --category 002-iamaccess --stack 006-ops.yml --skip-build
  972  ./aws-cloudform.sh --account central-auth --profile central-auth-ci --category 002-iamaccess --stack 006-ops.yml --skip-build
  973  ./aws-cloudform.sh --account central-shared-services --profile central-shared-services-ci --category 002-iamaccess --stack 004-ops.yml --skip-build
  974  git tag v1.2.0
  975  mv ~/dev/backups/2019-wsc-mac/dev/www/github/learn-python3 .
  976  cd learn-python3
  977  git merge "merge wip in master"
  978  git commit -m "merge wip in master"
  979  mv kubernetes-formation kubernetes-formation_org
  980  mv kubernetes-formation_org kubernetes-formation_original
  981  git clone git@github.com:jdxlabs/kubernetes-formation.git
  982  git checkout -b my-gcp
  983  git push --set-upstream origin my-gcp
  984  grep -nri /16 .
  985  grep -nri "/16" .
  986  grep -nri "/20" .
  987  grep -nri "voc" .
  988  grep -nri "vpc" .
  989  grep -nri submodule .
  990  grep -nri sub-module .
  991  git clone git@github.com:jdxlabs/jlabs_base-infra-config.git
  992  cd jlabs_base-infra-config
  993  git commit -m "set jlabs-pp config on aws"
  994  git commit -m "remove config"
  995  git submodule add git@github.com:jdxlabs/jlabs_base-infra-config.git config
  996  git commit -m "restructure"
  997  cat ./../../../config/jlabs-pp-aws.tfvars
  998  cd ../jlabs_base-infra-config
  999  git commit -m "update tf"
 1000  make tf-apply-aws-pp LAYER=001-vpc
 1001  git commit -m "remodel config"
 1002  make eks-create-pp
 1003  cat /home/jdx/.ssh/id_rsa.pub
 1004  ssh admin@34.241.110.51
 1005  ssh -i ~/.ssh/jlabs-pp-eu-west-1.pem admin@34.241.110.51
 1006  ./aws-apply.sh
 1007  ./tf-apply.sh --provider aws
 1008  man ls
 1009  ls ./providers/aws/terraform
 1010  ls -r ./providers/aws/terraform
 1011  ./tf-apply.sh --provider aws --env pp
 1012  ssh ec2-user@34.240.28.242
 1013  ./scripts/tf-apply.sh --provider aws --env aws
 1014  make eks-update
 1015  make eks-update-pp
 1016  make eks-delete-pp
 1017  git commit -m "regroup scripts"
 1018  vim jlabs-pp-aws-tf.tfvars
 1019  tree -A
 1020  gcloud container clusters --help
 1021  make gke-create-pp
 1022  \ngcloud container clusters get-credentials jlabs-pp-gke --zone europe-west1-b --project infra-jdxlabs\n
 1023  make gke-delete-pp
 1024  git commit -m "gke setup"
 1025  cd kubernetes-ressources/terraform/
 1026  gsutil ls
 1027  echo $GOOGLE_APPLICATION_CREDENTIALS
 1028  pip install google --user
 1029  pip install google.cloud --user
 1030  pip uninstall google --user
 1031  pip uninstall google
 1032  pip uninstall google.cloud
 1033  pip install google-cloud-storage --user
 1034  export GOOGLE_APPLICATION_CREDENTIALS=/home/jdx/dev/www/github/kubernetes-formation/kubernetes-ressources/terraform/infra-jdxlabs.json
 1035  export GOOGLE_APPLICATION_CREDENTIALS=./infra-jdxlabs.json
 1036  terraform011 apply
 1037  git clone git@github.com:jdxlabs/plannigs-formations.git
 1038  cd plannigs-formations
 1039  git commit -m "kubernetes formation lvl 1"
 1040  cd ../kubernetes-formation
 1041  git commit -m "add data and instructions to work on my account"
 1042  mv plannigs-formations plannings-formations
 1043  vim plannings-formations/.git/config
 1044  cd plannings-formations
 1045  git tag v1.0.0
 1046  git clone git@github.com:jdxlabs/jlabs_sigal.git
 1047  cd jlabs_sigal
 1048  cd ../seloger/github/sl_ops-aws-iam
 1049  git commit -m "unactive teamcity, waiting for vpn by olivier"
 1050  curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt
 1051  curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/$\(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt\)/bin/linux/amd64/kubectl
 1052  rm kubectl
 1053  curl -Lo kops https://github.com/kubernetes/kops/releases/download/$\(curl -s https://api.github.com/repos/kubernetes/kops/releases/latest | grep tag_name | cut -d '"' -f 4)/kops-linux-amd64
 1054  watch -n1 l
 1055  watch -n1 "ls -la"
 1056  watch -n1 "ls -lah"
 1057  chmod +x kops
 1058  mv kops ~/.local/bin
 1059  kodak2ti3
 1060  kops
 1061  terraform011 destroy
 1062  which bash
 1063  kops create cluster --help
 1064  ./providers/aws/kops/create.sh
 1065  ssh admin@34.244.24.118
 1066  ssh admin@34.241.62.242
 1067  ./providers/aws/kops/state-edit.sh
 1068  ./providers/aws/kops/apply.sh
 1069  git commit -m "remove eks"
 1070  git commit -m "install kops"
 1071  cd flat/python-recipes/test-url-lambda
 1072  pip install requests --target ./
 1073  zip -r test-url-lambda.zip test-url-lambda/
 1074  man zip
 1075  cd test-url-lambda
 1076  zip ../test-url-lambda.zip -r .
 1077  ssh admin@10.105.4.155
 1078  chmod 400 ~/Téléchargements/test-vpn.pem
 1079  ssh -i ~/Téléchargements/test-vpn.pem admin@10.105.4.155
 1080  ssh -i ~/Téléchargements/test-vpn.pem ec2-user@10.105.4.155
 1081  sudo rm ~/Téléchargements/test-vpn.pem
 1082  git commit -m "reactive teamcity"
 1083  git tag v1.3.0
 1084  nslookup ADFS2SeLoger.users.poliris.net
 1085  pip install detect-secrets --user
 1086  detect-secrets
 1087  cd _old
 1088  detect-secrets scan jin-infra_2018-05-14 --all-files
 1089  vim jin-infra_2018-05-14/libs/roles/graylog-role/templates/mongodb.conf.j2
 1090  vim jin-infra_2018-05-14/prod/terraform/terraform.tfstate
 1091  vim jin-infra_2018-05-14/prod/k8s/secrets/node-debug.yaml
 1092  vim jin-infra_2018-05-14/pp/k8s/secrets/oxa-proxy.yaml
 1093  vim jin-infra_2018-05-14/pp/k8s/secrets/node-debug.yaml
 1094  vim jin-infra_2018-05-14/mfa-connect.sh
 1095  vim jin-infra_2018-05-14/libs/roles/vault/defaults/main.yml
 1096  vim jin-infra_2018-05-14/libs/roles/prometheus-master/templates/prometheus-cfg-clusters-es.yml.j2
 1097  vim jin-infra_2018-05-14/libs/roles/jenkins-role/defaults/main.yml
 1098  vim jin-infra_2018-05-14/libs/roles/opentsdb/defaults/main.yml
 1099  vim jin-infra_2018-05-14/pp/k8s/traefik/tls.key
 1100  vim jin-infra_2018-05-14/libs/roles/consul-role/templates/consulca.conf.j2
 1101  vim jin-infra_2018-05-14/ansible-dev/keys/id_rsa_deployer
 1102  cd github/jlabs_base-infra/
 1103  detect-secrets scan config --all-files
 1104  detect-secrets scan config/ --all-files
 1105  l config
 1106  rm -rf sl_aws-base-infra/build
 1107  rm -rf sl_aws-base-infra/venv
 1108  detect-secrets scan sl_aws-base-infra --all-files
 1109  vim sl_aws-base-infra/configs/global.yml
 1110  vim sl_aws-base-infra/cfn/stacks/central/shared-services/006-ecs/004-citools2.yml
 1111  vim sl_aws-base-infra/scripts/aws-bootstrap/v2/aws-bootstrap.sh
 1112  pip install flask --user
 1113  cd /home/jdx/.local/lib/python3.7/site-packages
 1114  ŵd
 1115  pwf
 1116  vim github/jlabs_base-infra/Makefile
 1117  free -m
 1118  free -mh
 1119  l | impl
 1120  l | grep impl
 1121  ps aux | grep simpl
 1122  cd .local/
 1123  cd .cache
 1124  find . -iname "*automatic*"
 1125  find . -iname "*tomatic*"
 1126  find . -type d -iname "*tomatic*"
 1127  find . -type d -iname "*cache*"
 1128  find . -type d -iname "*plenot*"
 1129  ls -la ./.config/Simplenote
 1130  cd .config/Simplenote
 1131  cd Cache
 1132  rm -rf *
 1133  sudo dpkg -i Simplenote-linux-1.5.0-amd64.deb
 1134  rm -rf Simplenote
 1135  ls -la | grep simpl
 1136  grep -nri "plenot" .
 1137  vim ./ws-seloger/notes/todo.txt
 1138  vim jdx/notes/tips.txt
 1139  cd dev/www/gitlab
 1140  mv aws-cost-and-usage-reporter aws-cost-and-usage-reporter_bkp
 1141  cat ~/.ssh/id_rsa
 1142  cd gitlab
 1143  git clone git@gitlab.com:wescalefr-oss/aws-cost-and-usage-reporter.git
 1144  git clone git@gitlab.com:jdxlabs/aws-cost-and-usage-reporter.git
 1145  cd aws-cost-and-usage-reporter
 1146  git checkout -b modified
 1147  git commit -m "my params"
 1148  git push --set-upstream origin modified
 1149  git clone git@gitlab.com:wescalefr/wemap.git
 1150  cd wemap
 1151  make kope-create
 1152  make kope-create-pp
 1153  kops rolling-update cluster
 1154  kops-delete-pp
 1155  cd dev/www/github/jlabs_base-infra
 1156  export CLUSTER_NAME=k8s.pp.aws.jdxlabs.com\nexport KOPS_STATE_STORE=s3://jlabs-pp-eu-west-1-kops-state\n
 1157  ssh -i ~/.ssh/id_rsa admin@api.k8s.pp.aws.jdxlabs.com
 1158  nslookup api.k8s.pp.aws.jdxlabs.com.
 1159  ssh admin@18.203.85.168
 1160  ssh admin@54.194.219.235
 1161  make kops-update-pp
 1162  make kops-create-pp
 1163  kops validate cluster
 1164  kubectl get nodes --show-labels
 1165  ssh admin@api.k8s.pp.aws.jdxlabs.com
 1166  ssh admin@34.248.209.190
 1167  oathtool --totp --base32 $TOTP_KEY_SCALEWAY
 1168  kubectl get all --al-namespaces
 1169  make kops-delete-pp
 1170  git commit -m "update kops"
 1171  cd ../jlabs_docker-python3
 1172  cd dev/www/github/jlabs_docker-python3
 1173  docker run -it --name jlabs_docker-python3 jlabs_docker-python3
 1174  docker run -it --name jlabs_docker-python3 jlabs_docker-python3 sh
 1175  docker exec -it jlabs_docker-python3 sh
 1176  docker stop -t0 jlabs_docker-python3
 1177  docker rm jlabs_docker-python3
 1178  docker rmi jlabs_docker-python3
 1179  docker build -t python-builder .
 1180  docker run -it python-builder sh
 1181  docker stop -t0 python-builder
 1182  docker rm python-builder
 1183  docker rmi python-builder
 1184  docker rm competent_shannon
 1185  docker rmi competent_shannon
 1186  docker os
 1187  curl -o aws-iam-authenticator https://amazon-eks.s3-us-west-2.amazonaws.com/1.12.7/2019-03-27/bin/linux/amd64/aws-iam-authenticator
 1188  rm aws-iam-authenticator
 1189  wget --quiet https://amazon-eks.s3-us-west-2.amazonaws.com/1.12.7/2019-03-27/bin/linux/amd64/aws-iam-authenticator
 1190  man docker run
 1191  make exec
 1192  docker rmi docker-python3
 1193  docker rmi python:slim-stretch
 1194  git commit -m "init image for aws"
 1195  cat Dockerfile
 1196  history | grep kops
 1197  ./scripts/clean.sh
 1198  terraform init --help
 1199  terraform init \\n\t\t-backend-config "region=eu-west-1" \\n\t\t-backend-config "dynamodb_table=jlabs-pp-eu-west-1-tfstate-lock" \\n\t\t-backend-config "bucket=jlabs-pp-eu-west-1-tfstate" \\n\t\t-backend-config "key=001-vpc.tfstate" \\n\t\t-force-copy
 1200  ssh admin@34.245.156.215
 1201  ssh ec2-user@34.245.156.215
 1202  ssh -i ~/.ssh/jlabs-pp-eu-west-1.pem ec2-user@34.245.156.215
 1203  ssh -i ~/.ssh/jlabs-pp-eu-west-1.pem admin@34.245.156.215
 1204  curl -sfL https://get.k3s.io | sh -\n
 1205  git clone git@github.com:axel-springer-kugawana/sl_aws_eks_config.git
 1206  cd sl_aws_eks_config
 1207  kubectl get nodes
 1208  cat ~/.sec/seloger/ad-pwd
 1209  ps aux | grep 27330
 1210  sudo dpkg -i code_1.35.1-1560350270_amd64.deb
 1211  ssh -p 64536 54.242.232.54\n
 1212  git fetch && git checkout feature/add-eks
 1213  ./aws-cloudform.sh --account digital-nonprod --profile digital-nonprod-ci
 1214  aws sts get-caller-identity
 1215  cd ../backups
 1216  find . -iname "*forti*"
 1217  find . -iname "*vpn*"
 1218  aws eks --region eu-west-1 update-kubeconfig --name sl-kube-test-eks-eu-west-1
 1219  aws eks --region eu-west-1 update-kubeconfig --name sl-kube-eks-eu-west-1
 1220  aws-iam-authenticator
 1221  aws --region eu-west-1 --profile sl-digital-nonprod eks update-kubeconfig --name sl-kube-eks-eu-west-1
 1222  aws --region eu-west-1 --profile digital-nonprod eks update-kubeconfig --name sl-kube-eks-eu-west-1
 1223  aws --region eu-west-1 --profile digital-nonprod-ci eks update-kubeconfig --name sl-kube-eks-eu-west-1
 1224  aws --region eu-west-1 --profile sl-digital-nonprod-my-super-role eks update-kubeconfig --name sl-kube-eks-eu-west-1
 1225  aws --region eu-west-1 --profile sl-digital-nonprod-assumerole eks update-kubeconfig --name sl-kube-eks-eu-west-1
 1226  ssh -p 64537 34.235.133.55\n
 1227  aws --region eu-west-1 --profile digital-nonprod-assumerole eks update-kubeconfig --name sl-kube-eks-eu-west-1
 1228  ssh -p 64535 52.55.101.11
 1229  sudo update-icon-caches /usr/share/icons/*
 1230  export AWS_PROFILE=digital-nonprod-ci
 1231  export AWS_PROFILE=sl-digital-nonprod-ekstest-creds
 1232  kubectl get all --namespace namespace-admin-app-1
 1233  kubectl get all --namespace=namespace-admin-app-1
 1234  kubectl get po --namespace=namespace-admin-app-1
 1235  kubectl get svc
 1236  kubectl run nginx --image=nginx --namespace=app-2
 1237  cd dev/www/github
 1238  git clone git@github.com:glorrain/git-secret-finder.git
 1239  cd git-secret-finder
 1240  cd seloger/github/sl_ops-aws-base-infra
 1241  git commit -m "add sl_docker-awscli-kubectl"
 1242  cd ../sl_aws_eks_config
 1243  ./scripts/tf-apply.sh
 1244  ssh admin@18.203.246.202
 1245  ssh -i ~/.ssh/jlabs-pp-eu-west-1.pem admin@18.203.246.202
 1246  git commit -m "cloud init : add auto upgrade"
 1247  git checkout -b feature/add-human-users
 1248  git push --set-upstream origin feature/add-human-users
 1249  tree configs/iam-inventory
 1250  rm -rf configs/iam-inventory/members/
 1251  git commit -m "less rights"
 1252  history | grep eks
 1253  aws eks --help
 1254  aws help
 1255  aws eks help
 1256  aws eks list-clusters
 1257  history | grep kube
 1258  kubectl get pods --namespace=app-2
 1259  istory
 1260  19 export AWS_PROFILE=sl-digital-nonprod-ekstest
 1261  cp ~/.kube/config ~/.kube/config.bkp
 1262  l ~/.kube
 1263  aws eks list-clusters --region=eu-west-1 sl-kube-eks-eu-west-1
 1264  aws eks list-clusters --region=eu-west-1 --cluster=sl-kube-eks-eu-west-1
 1265  aws eks list-clusters help
 1266  aws --region eu-west-1 --profile sl-digital-nonprod-ekstest eks update-kubeconfig --name sl-k8s-digital-nonprod
 1267  aws --region eu-west-1 --profile sl-digital-nonprod-ekstest eks update-kubeconfig --name sl-kube-eks-eu-west-1
 1268  kubectl config use-context minikube
 1269  kubectl config use-context arn:aws:eks:eu-west-1:220766614489:cluster/sl-kube-eks-eu-west-1
 1270  kubectl config get-contexts
 1271  kubectl get pods --namespace=app-1
 1272  cd pCloudDrive/docs/jin
 1273  grep -nri kubectl .
 1274  vim ./notes/devops-notes/2017-05_APIS-156_158_bastion.txt
 1275  kubectl top
 1276  kubectl get namespaces
 1277  kubectl po help
 1278  kubectl poh help
 1279  kubectl pod help
 1280  kubectl get po --namespace=app1
 1281  kubectl delete po nginx-dbddb74b8-lxmlr --namespace=app-1
 1282  kubectl get all --namespace=app-1
 1283  kubectl get po,svc --namespace=app-1
 1284  kubectl delete deployment.extensions/nginx --namespace=app-1
 1285  apt search keycloak
 1286  docker run -e KEYCLOAK_USER=admin -e KEYCLOAK_PASSWORD=424228 jboss/keycloak
 1287  lsof -i -P -n | grep LISTEN
 1288  docker run -e KEYCLOAK_USER=admin -e KEYCLOAK_PASSWORD=424228 jboss/keycloak  -p 8080:8080
 1289  docker stop -t0 clever_khayyam
 1290  docker rm clever_khayyam
 1291  docker run -e KEYCLOAK_USER=admin -e KEYCLOAK_PASSWORD=424228 -p 8080:8080 jboss/keycloak
 1292  history | grep noright
 1293  cd pCloudDrive/docs/ws-seloger
 1294  grep -nri noright .
 1295  grep -nri AWS_ACCESS_KEY_ID_DIGI .
 1296  git clone git@github.com:axel-springer-kugawana/sl_aws-eks-sampleapp.git
 1297  git commit -m "add eks sample-app rights"
 1298  git clone git@github.com:axel-springer-kugawana/sl_docker-awscli-kubectl.git
 1299  cd sl_docker-awscli-kubectl
 1300  git commit -m "fix repo for kubectl"
 1301  ssh -p 64535 54.172.48.8\n\n
 1302  ssh -p 64537 3.87.17.123\n
 1303  ./aws-cloudform.sh --account central-auth --profile sl-digital-nonprod --category 002-iamaccess --stack 003-ekssampleapp.yml
 1304  ssh -p 64535 3.89.74.136
 1305  ./aws-cloudform.sh --account digital-nonprod --profile sl-digital-nonprod --category 002-iamaccess --stack 003-ekssampleapp.yml
 1306  ./generate-cfn.sh && ./aws-cloudform.sh --account digital-nonprod --profile sl-digital-nonprod --category 002-iamaccess --stack 003-ekssampleapp.yml
 1307  ssh -p 64539 54.163.22.136
 1308  ssh -p 64535 18.232.62.36\n
 1309  ssh -p 64537 18.205.235.46
 1310  ssh -p 64535 3.89.104.106\n
 1311  ssh -p 64536 3.89.147.163
 1312  nslookup
 1313  nslookup jdxlabs.com
 1314  grep -nri policyBucket .
 1315  ssh -p 64535 54.164.55.251
 1316  cd github/sl_aws-base-infra
 1317  cd ../sl_offer-windu-s3
 1318  git commit -m "update ecr default folder"
 1319  ./generate-cfn.sh && ./aws-cloudform.sh --account digital-nonprod --profile sl-digital-nonprod --category 002-iamaccess --stack 003-ekssampleapp.yml --skip-build
 1320  ssh -p 64535 3.82.18.47\n
 1321  ssh -p 64537 18.233.98.134\n
 1322  ssh -p 64537 18.233.98.134
 1323  ssh -p 64535 54.89.27.128
 1324  kubectl run nginx --image=nginx --namespace=app-1
 1325  kubectl get po --namespace=app-1
 1326  kubectl get po --namespace=app-2
 1327  sudo apt install meld
 1328  cat ~/dev/tmp/diff_l
 1329  touch ~/dev/tmp/diff_l
 1330  touch ~/dev/tmp/diff_r
 1331  aws eks get-token --region eu-west-1 --cluster-name sl-kube-eks-eu-west-1
 1332  export AWS_PROFILE=sl-digital-nonprod-ekstest
 1333  tail ~/.aws/credentials
 1334  kubectl config current-context
 1335  kubectl get po,svc,deployment --namespace=app-1
 1336  aws eks update-kubeconfig --name sl-kube-eks-eu-west-1 --region eu-west-1 --profile sl-digital-nonprod
 1337  vim ~/.kube/config
 1338  chmod +x kustomize_2.1.0_linux_amd64
 1339  mv kustomize_2.1.0_linux_amd64 ~/.local/bin/kustomize
 1340  kustomize
 1341  kustomize version
 1342  cd sl_aws_eks_config/clusters/digital/nonprod/
 1343  kustomize build
 1344  kubectl describe configmap -n kube-system aws-auth
 1345  0;59;8m:q
 1346  kustomize --help
 1347  aws eks update-kubeconfig --name sl-kube-eks-eu-west-1 --region eu-west-1 --profile sl-digital-nonprod-eks-admin
 1348  kustomize build | kubctl apply -f -
 1349  kustomize build | kubectl apply -f -
 1350  git checkout -b test-sample
 1351  git commit -m "test sample"
 1352  git push --set-upstream origin test-sample
 1353  kubectl edit -n kube-system configmap/aws-auth
 1354  ssh -p 64535 18.207.121.0\n
 1355  export AWS_PROFILE=sl-digital-nonprod-eks-admin
 1356  cd /home/jdx/dev/www/seloger/github/sl_aws_eks_config/clusters/digital/nonprod
 1357  ssh -p 64535 54.234.168.97\n
 1358  kubectl get po --all-namespaces
 1359  kubectl deployment app-1
 1360  kubectl deployment deployment.extensions/nginx
 1361  kubectl deployment extensions/nginx
 1362  kubectl delete deployment app-1
 1363  kubectl delete deployment app-1 --namespace=app-1
 1364  kubectl delete deployment extensions/nginx --namespace=app-1
 1365  kubectl delete deployment deployment.extensions/nginx --namespace=app-1
 1366  kubectl get po,svc,deployment
 1367  kubectl get po,svc,deployment --all-namespaces
 1368  kubectl get po,deployment --all-namespaces
 1369  watch -n1 "kubectl get deployment,po --all-namespaces"
 1370  kubectl delete deployment deployment.extensions/sampleapp --namespace=eks-sampleapp
 1371  kubectl delete deployment.extensions/sampleapp --namespace=eks-sampleapp
 1372  kubectl delete deployment nginx --namespace=app-1
 1373  kubectl get deployment,po --all-namespaces
 1374  kubectl get deployment,po --namespace=eks-sampleapp
 1375  watch -n1 "kubectl get deployment,po --namespace=eks-sampleapp"
 1376  ssh -p 64535 54.174.173.7\n
 1377  git commit -m "clean it"
 1378  kubectl delete deployment sampleapp --namespace=eks-sampleapp
 1379  docker pull drone/drone:1
 1380  docker run \\n  --volume=/var/run/docker.sock:/var/run/docker.sock \\n  --volume=/var/lib/drone:/data \\n  --env=DRONE_GITHUB_SERVER=https://github.com \\n  --env=DRONE_GITHUB_CLIENT_ID=9543edf483de9ea31ea5 \\n  --env=DRONE_GITHUB_CLIENT_SECRET=567319bad01af5eb9c6f382715ef97f7ba1581a7 \\n  --env=DRONE_RUNNER_CAPACITY=2 \\n  --env=DRONE_SERVER_HOST=localhost \\n  --env=DRONE_SERVER_PROTO=http \\n  --env=DRONE_TLS_AUTOCERT=true \\n  --publish=80:80 \\n  --publish=443:443 \\n  --restart=always \\n  --detach=true \\n  --name=drone \\n  drone/drone:1\n
 1381  nomad
 1382  git commit -m "tests k3s"
 1383  touch notes_drone.md
 1384  docker run \\n  --volume=/var/run/docker.sock:/var/run/docker.sock \\n  --volume=/var/lib/drone:/data \\n  --env=DRONE_GITHUB_SERVER=https://github.com \\n  --env=DRONE_GITHUB_CLIENT_ID=9543edf483de9ea31ea5 \\n  --env=DRONE_GITHUB_CLIENT_SECRET=567319bad01af5eb9c6f382715ef97f7ba1581a7 \\n  --env=DRONE_RUNNER_CAPACITY=2 \\n  --env=DRONE_SERVER_HOST=drone.aws.jdxlabs.com \\n  --env=DRONE_SERVER_PROTO=http \\n  --env=DRONE_TLS_AUTOCERT=true \\n  --publish=80:80 \\n  --publish=443:443 \\n  --restart=always \\n  --detach=true \\n  --name=drone \\n  drone/drone:1
 1385  ping drone.aws.jdxlabs.com
 1386  ping 52.213.125.207
 1387  52.213.125.207
 1388  python -m http.server 8000 --bind 127.0.0.1
 1389  echo $DRONE_GITHUB_CLIENT_ID
 1390  echo $DRONE_GITHUB_CLIENT_SECRET
 1391  docker run \\n  --volume=/var/run/docker.sock:/var/run/docker.sock \\n  --volume=/var/lib/drone:/data \\n  --env=DRONE_GITHUB_SERVER=https://github.com \\n  --env=DRONE_GITHUB_CLIENT_ID=$DRONE_GITHUB_CLIENT_ID \\n  --env=DRONE_GITHUB_CLIENT_SECRET=$DRONE_GITHUB_CLIENT_SECRET \\n  --env=DRONE_RUNNER_CAPACITY=2 \\n  --env=DRONE_SERVER_HOST=127.0.0.1 \\n  --env=DRONE_SERVER_PROTO=http \\n  --env=DRONE_TLS_AUTOCERT=true \\n  --publish=80:8080 \\n  --publish=443:4432 \\n  --restart=always \\n  --detach=true \\n  --name=drone \\n  drone/drone:1
 1392  docker stop -t0 drone
 1393  docker rm drone
 1394  ssh -i ~/.ssh/jlabs-pp-eu-west-1.pem admin@52.213.125.207
 1395  ssh -i ~/.ssh/jlabs-pp-eu-west-1.pem admin@34.252.170.143
 1396  watch 'nslookup drone.aws.jdxlabs.com'
 1397  curl http://drone.aws.jdxlabs.com/
 1398  curl http://http://52.213.204.60/
 1399  curl http://52.213.204.60/
 1400  curl https://drone.aws.jdxlabs.com
 1401  mv sl_aws_eks_config sl_aws-eks-config
 1402  vim sl_aws-eks-config/.git/config
 1403  cd sl_aws-eks-
 1404  ssh -p 64535 3.86.27.45\n
 1405  ssh -p 64537 54.224.89.255\n
 1406  git commit -m "add eks sampleapp rights"
 1407  git commit -am "add eks sampleapp rights"
 1408  cd seloger/github/sl_it-names
 1409  git commit -m "set code owners"
 1410  git reset --hard 206cbdccc9324a9abf9d4f9e131e51e86b65aba0
 1411  git push -f origin 206cbdccc9324a9abf9d4f9e131e51e86b65aba0:master
 1412  git push origin 206cbdccc9324a9abf9d4f9e131e51e86b65aba0:master
 1413  export AWS_PROFILE=sl-central-shared-services
 1414  seloger-central-shared-services-infra-bucket
 1415  aws s3 ls seloger-central-shared-services-infra-bucket
 1416  cat deployment.yaml
 1417  ssh -p 64536 52.23.196.78
 1418  aws s3 ls s3://seloger-central-shared-services-infra-bucket
 1419  aws eks list-clusters --region=eu-west-1
 1420  git checkout -b feature/circle-automation
 1421  git push --set-upstream origin feature/circle-automation
 1422  git commit -m "set circle basis"
 1423  git commit -m "add eks for ops"
 1424  rm ~/pCloudDrive/docs/ws-seloger/notes/task-notes/SEC-107.txt
 1425  rm ~/pCloudDrive/docs/ws-seloger/notes/task-notes/SEC-120.txt
 1426  mv ~/pCloudDrive/docs/ws-seloger/notes/task-notes/201806_drafts.txt ~/pCloudDrive/docs/ws-seloger/notes/task-notes/201906_drafts.txt
 1427  l ~/pCloudDrive/docs/ws-seloger/notes/task-notes/
 1428  git checkout Makefile
 1429  cd ../sl_aws-eks-config
 1430  grep -nri windows .
 1431  git commit -m "direct deploy"
 1432  git commit -m "set deploy commands"
 1433  git commit -m "pwd"
 1434  git commit -m "set good path"
 1435  cd seloger/github/sl_docker-awsclikub
 1436  cd seloger/github/sl_docker-awscli-kubectl
 1437  ssh -p 64536 54.82.39.52\n\n
 1438  history | grep kusto
 1439  gem install cfn-nag
 1440  sudo gem install cfn-nag
 1441  ./aws-cloudform.sh --account digital-nonprod --profile sl-digital-nonprod --cfn-nag | grep fail
 1442  ./aws-cloudform.sh --account digital-nonprod --profile sl-digital-nonprod --cfn-nag | grep Fail
 1443  ./aws-cloudform.sh --account digital-nonprod --profile sl-digital-nonprod --category 012-eks --cfn-nag
 1444  ./aws-cloudform.sh --account digital-nonprod --profile sl-digital-nonprod --category 012-eks --cfn-nag | grep Fail
 1445  grep -nri yamllint disable rule ../
 1446  grep -nri "disable rule" ../
 1447  ./aws-cloudform.sh --account digital-nonprod --profile sl-digital-nonprod --category 012-eks --test
 1448  git commit -m "fix linter"
 1449  git checkout feature/add-eks
 1450  git merge feature/add-eks
 1451  wget https://github.com/kubernetes-sigs/kustomize/releases/download/v2.1.0/kustomize_2.1.0_linux_amd64
 1452  cd ../sl_docker-awscli-kubectl
 1453  git commit -m "add kustomize"
 1454  ssh -p 64535 35.173.183.179\n\n
 1455  curl --help
 1456  git commit -m "fix kustomize"
 1457  git checkout test-sample
 1458  rm clusters/digital/nonprod/kustomization.yaml
 1459  git rm clusters/digital/nonprod/kustomization.yaml
 1460  git commit -m "merge master into test-sample"
 1461  git commit -m "update sample-app rights"
 1462  git merge test-sample
 1463  git commit -m "update eks nodes roles"
 1464  git commit -m "add autoscaliing rights for ops"
 1465  ./generate-cfn.sh && ./aws-cloudform.sh --account digital-nonprod --profile sl-digital-nonprod --skip-build
 1466  git branch -d test-sample
 1467  git commit -m "speed up"
 1468  git merge feature/circle-automation
 1469  ssh -p 64537 54.152.29.80\n
 1470  git commit -m "add drone badge"
 1471  touch .drone.yml
 1472  git commit -m "better makefile and drone init"
 1473  make clean
 1474  make run
 1475  cd seloger/github/sl_aws-eks-
 1476  git commit -m "update role at eks creation"
 1477  git checkout feature/circle-automation
 1478  git commit -m "return to normal"
 1479  make build
 1480  git commit -m "go in main folder"
 1481  ssh -p 64535 54.145.45.220\n
 1482  grep -nri eks-sampleapp .
 1483  git commit -m "update namespace for kube"
 1484  git commit -m "basic test drone"
 1485  ssh -p 64536 3.91.177.106\n
 1486  apt search unzip
 1487  git commit -m "go for it"
 1488  apt search make
 1489  git commit -m "add update"
 1490  git commit -m "add essentials"
 1491  docker run -it --name python python:3.7.3-slim
 1492  docker run -d --name python python:3.7.3-slim
 1493  watch docker ps
 1494  docker exec -it python sh
 1495  apt search docker
 1496  docker stop -t0 python && docker rm python
 1497  docker run -it --name python python:3.7.3-slim sh
 1498  wget --quiet https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64
 1499  mv hadolint-Linux-x86_64 ~/.local/bin/hadolint
 1500  chmod +x ~/.local/bin/*
 1501  hadolint
 1502  git commit -m "set dockerfile tests"
 1503  hadolint Dockerfile  --ignore DL3003
 1504  hadolint Dockerfile  --ignore DL3008
 1505  hadolint --help
 1506  git commit -m "hadolint exception"
 1507  git commit -m "init docker inception"
 1508  git commit -m "add docker volume"
 1509  curl -L https://github.com/drone/drone-cli/releases/download/v1.1.0/drone_linux_amd64.tar.gz | tar zx
 1510  mv drone ~/.local/bin
 1511  drone repo update --trusted jdxlabs/jlabs_docker-python3
 1512  docker repo
 1513  drone server
 1514  drone ls
 1515  drone server env
 1516  drone server ls
 1517  docker info
 1518  docker user ls
 1519  DRONE_USER_CREATE=username:jdxlabs,admin:true
 1520  grep -nri jlabs .
 1521  git commit -m "build"
 1522  ssh -i ~/.ssh/jlabs-pp-eu-west-1.pem admin@52.213.204.60
 1523  git commit -m "update asg"
 1524  cd github/jlabs_base-infra/config
 1525  git commit -m "add drone params"
 1526  git commit -m "automate drone install"
 1527  docker build -t jlabs_docker-python3 .
 1528  git commit -m "aws ok"
 1529  drone exec repo jdxlabs/jlabs_docker-python3
 1530  git commit -m "build docker python"
 1531  git commit -m "optim vars"
 1532  git commit -m "region as var"
 1533  git commit -m "set sequential"
 1534  git clone https://github.com/jdxlabs/jlabs_sample-api.git
 1535  git commit -m "init drone"
 1536  vim ../jlabs_docker-python3/.git/config
 1537  git commit -m "clean dockerfile"
 1538  touch plip
 1539  git commit -am "plip"
 1540  rm plip
 1541  git commit -m "plip"
 1542  touch tap
 1543  git commit -m "tap"
 1544  echo $AWS_ECR_CENTRAL_SHARED_SERVICES
 1545  git commit -m "use available ecr image"
 1546  git commit -m "add volume"
 1547  git commit -m "plugin ecr"
 1548  git commit -m "add package for ecr"
 1549  git commit -m "try with hack"
 1550  git commit "test"
 1551  git commit -m "up"
 1552  ssh -i ~/.ssh/jlabs-pp-eu-west-1.pem admin@52.50.71.94
 1553  apt search postman
 1554  apt search virtualbox
 1555  tar -xzvf Postman-linux-x64-7.2.2.tar.gz
 1556  l Postman
 1557  mv Postman ~/dev/progs
 1558  l ~/dev/progs/Postman
 1559  l ~/dev/progs/Postman/app
 1560  vim ~/dev/progs/Postman/app
 1561  rm Postman-linux-x64-7.2.2.tar.gz
 1562  cd ~/dev/progs/Postman
 1563  grep -nri postman .
 1564  vim ./jdx/notes/tips.txt
 1565  cat > ~/.local/share/applications/Postman.desktop <<EOL\n[Desktop Entry]\nType=Application\nName=Postman\nExec=/home/jdx/.local/bin/postman\nIcon=/home/jdx/dev/progs/Postman/resources/app/assets/icon.png\nCategories=Development;\nEncoding=UTF-8\nTerminal=false\nEOL
 1566  cat ~/.local/share/applications/Postman.desktop
 1567  l ~/.local/share/applications
 1568  ln -s /home/jdx/dev/progs/Postman/Postman ~/.local/bin/postman
 1569  l ~/.local/bin
 1570  l /home/jdx/dev/progs/Postman/app/resources/app/assets/icon.png
 1571  vim ~/.local/share/applications
 1572  mkdir win_iso
 1573  rm -r win
 1574  rm -r win_iso
 1575  git clone git@github.com:ahmetb/kubernetes-network-policy-recipes.git
 1576  gpo
 1577  git branch -d feature/circle-automation
 1578  ssh -p 64535 54.242.41.252\n\n
 1579  ssh -p 64535 18.209.22.248
 1580  ssh -p 64535 54.92.220.201
 1581  ssh -p 64536 54.196.255.20\n\n
 1582  ssh -p 64535 3.82.128.86\n
 1583  mv digital-nonprod-eks-main.pem ~/.ssh/
 1584  l ~/ss
 1585  l ~/.ssh
 1586  mkdir seloger
 1587  mv digital-nonprod-eks-main.pem seloger
 1588  chmod 400 digital-nonprod-eks-main.pem
 1589  git checkout -b feature/eks-clean-keypair
 1590  git commit -m "make a dynamic keypair associated to eks clusters"
 1591  git push --set-upstream origin feature/eks-clean-keypair
 1592  cat ~/.ssh/seloger/digital-nonprod-eks-main.pem
 1593  mv digital-nonprod-sl-kube-eks-eu-west-1.pem ~/.ssh/seloger/
 1594  rm digital-nonprod-
 1595  rm digital-nonprod-eks-main.pem
 1596  sudo rm digital-nonprod-eks-main.pem
 1597  chmod 400 digital-nonprod-sl-kube-eks-eu-west-1.pem
 1598  yamllint
 1599  yamllint .
 1600  yamllint ./templates
 1601  git commit -m "add namespace sample-app2"
 1602  git checkout -b feature/network-policies
 1603  git push --set-upstream origin feature/network-policies
 1604  ssh -p 64535 34.230.6.221
 1605  cd seloger/github/sl_aws-eks-sampleapp
 1606  git clone https://github.com/axel-springer-kugawana/sl_aws-eks-sampleapp2.git
 1607  git clone git@github.com:axel-springer-kugawana/sl_aws-eks-sampleapp2.git
 1608  cd sl_aws-eks-sampleapp2
 1609  cd seloger/github/sl_
 1610  git commit -m "add sampleapp2"
 1611  grep -nri sampleapp .
 1612  git commit -m "init circle"
 1613  ssh -p 64537 54.92.148.85\n
 1614  ssh -p 64537 3.93.17.95\n
 1615  GST
 1616  ./scripts/tf-destroy.sh
 1617  cat ./scripts/tf-destroy.sh
 1618  nslookup drone.aws.jdxlabs.com
 1619  ssh -i ~/.ssh/jlabs-pp-eu-west-1.pem admin@34.245.22.155
 1620  docker logs -f 5943b9ad2060
 1621  ssh -i ~/.ssh/jlabs-pp-eu-west-1.pem admin@34.242.94.167
 1622  drone -v
 1623  drone repo -h
 1624  drone build -h
 1625  drone build  jdxlabs/jlabs_docker-python3
 1626  drone build info jdxlabs/jlabs_docker-python3
 1627  git commit -m "test2"
 1628  git commit -m "test3"
 1629  ./scripts/tf-destroy.sh --provider aws --env pp
 1630  cd github/jlabs_base-infra
 1631  config
 1632  drone -h
 1633  drone repo enable jdxlabs/jlabs_docker-python3\n
 1634  cd github/jlabs_docker-python3
 1635  git commit -m "test4"
 1636  drone build -?
 1637  drone build
 1638  drone build ls jdxlabs/jlabs_docker-python3
 1639  drone build restart
 1640  drone build restart jdxlabs/jlabs_docker-python3
 1641  drone build restart jdxlabs/jlabs_docker-python3 1
 1642  drone build restart jdxlabs/jlabs_docker-python3 last
 1643  aws s3 sl
 1644  git commit -m "todo"
 1645  git tag v1.6.0
 1646  ssh -p 64535 100.26.200.85
 1647  minikube start
 1648  kubectl --version
 1649  kubectl krew
 1650  kubectl plugin install ca-cert
 1651  kubectl version
 1652  kubectl help
 1653  ssh -p 64535 34.207.239.158
 1654  ./scripts/tf-apply.sh --provider aws --env pp
 1655  ssh -i ~/.ssh/jlabs-pp-eu-west-1.pem admin@63.35.198.105
 1656  cd sl_aws-eks-config
 1657  curl https://circleci.com/api/v1.1/me\?circle-token\=:$CIRCLECI_SL_TOKEN
 1658  ssh -p 64537 100.24.19.108\n
 1659  ssh -p 64535 54.88.130.54\n
 1660  ssh -p 64535 3.93.190.50
 1661  ssh -p 64537 34.238.176.131
 1662  ssh -p 64535 3.88.40.150\n
 1663  ssh -p 64536 52.91.79.136\n
 1664  ssh -p 64535 34.238.247.228\n
 1665  git commit -m "allow network from sample-app to sample-app2"
 1666  traceroute --help
 1667  traceroute 78.192.19.2
 1668  kubectl get po -n app-sample2
 1669  ssh -p 64536 52.91.79.136
 1670  ssh -p 64535 34.224.70.254
 1671  cd pCloudDrive/docs/ws-seloger/notes/
 1672  cd docs
 1673  grep -nri nginx .
 1674  ssh -p 64536 54.82.94.240
 1675  ssh -p 64535 54.224.59.132
 1676  git commit -m "set deny-all by default"
 1677  ssh -p 64535 54.224.59.132\n\n
 1678  git checkout -b feature/autosync
 1679  touch autosync.py
 1680  touch autosync.sh
 1681  chmod +x autosync.sh
 1682  ./autosync.sh
 1683  aws cloudformation list-stack-resources
 1684  aws cloudformation list-stack-resources help
 1685  aws cloudformation list-stacks
 1686  aws cloudformation help
 1687  vim test.sh
 1688  rm test.sh
 1689  ./clean-cfn-iam-inventory.sh
 1690  ./clean-cfn-iam-inventory.sh --account digital-nonprod
 1691  man diff
 1692  man sort
 1693  sudo dpkg -i code_1.36.0-1562161087_amd64.deb
 1694  aws cloudformation describe-stack-events --stack-name central-auth-iamaccess-testdelete2-cf
 1695  {\n    "StackEvents": [\n        {\n            "StackId": "arn:aws:cloudformation:eu-west-1:673277413506:stack/central-auth-iamaccess-testdelete2-cf/046d1520-9e2f-11e9-9e94-064aa725f74e",\n            "EventId": "142b14d0-9e2f-11e9-80b3-02f48c625dae",\n            "StackName": "central-auth-iamaccess-testdelete2-cf",\n            "LogicalResourceId": "central-auth-iamaccess-testdelete2-cf",\n            "PhysicalResourceId": "arn:aws:cloudformation:eu-west-1:673277413506:stack/central-auth-iamaccess-testdelete2-cf/046d1520-9e2f-11e9-9e94-064aa725f74e",\n            "ResourceType": "AWS::CloudFormation::Stack",\n            "Timestamp": "2019-07-04T07:41:05.041Z",\n            "ResourceStatus": "ROLLBACK_COMPLETE"\n        },\n        {\n            "StackId": "arn:aws:cloudformation:eu-west-1:673277413506:stack/central-auth-iamaccess-testdelete2-cf/046d1520-9e2f-11e9-9e94-064aa725f74e",\n            "EventId": "CircleciTestrepoUser-DELETE_COMPLETE-2019-07-04T07:41:04.283Z",\n            "StackName": "central-auth-iamaccess-testdelete2-cf",\n            "LogicalResourceId": "CircleciTestrepoUser",\n            "PhysicalResourceId": "",\n            "ResourceType": "AWS::IAM::User",\n            "Timestamp": "2019-07-04T07:41:04.283Z",\n            "ResourceStatus": "DELETE_COMPLETE",\n            "ResourceProperties": "{\"UserName\":\"s-circleci-testrepo\"}"\n        },\n        {\n            "StackId": "arn:aws:cloudformation:eu-west-1:673277413506:stack/central-auth-iamaccess-testdelete2-cf/046d1520-9e2f-11e9-9e94-064aa725f74e",\n            "EventId": "Group-DELETE_COMPLETE-2019-07-04T07:41:04.238Z",\n            "StackName": "central-auth-iamaccess-testdelete2-cf",\n            "LogicalResourceId": "Group",\n            "PhysicalResourceId": "",\n            "ResourceType": "AWS::IAM::Group",\n            "Timestamp": "2019-07-04T07:41:04.238Z",\n            "ResourceStatus": "DELETE_COMPLETE",\n            "ResourceProperties": "{\"GroupName\":\"central-auth-accesstestdelete2-iam-group\",\"Policies\":[{\"PolicyName\":\"central-auth-assumeroletestdelete2-iam-policy\",\"PolicyDocument\":{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Resource\":\"arn:aws:iam::220766614489:role/digital-nonprod-accesstestdelete2-iam-role\",\"Effect\":\"Allow\"}]}}]}"\n        },\n        {\n            "StackId": "arn:aws:cloudformation:eu-west-1:673277413506:stack/central-auth-iamaccess-testdelete2-cf/046d1520-9e2f-11e9-9e94-064aa725f74e",\n            "EventId": "0b3bf100-9e2f-11e9-9f02-020193028d12",\n            "StackName": "central-auth-iamaccess-testdelete2-cf",\n            "LogicalResourceId": "central-auth-iamaccess-testdelete2-cf",\n            "PhysicalResourceId": "arn:aws:cloudformation:eu-west-1:673277413506:stack/central-auth-iamaccess-testdelete2-cf/046d1520-9e2f-11e9-9e94-064aa725f74e",\n            "ResourceType": "AWS::CloudFormation::Stack",\n            "Timestamp": "2019-07-04T07:40:50.053Z",\n            "ResourceStatus": "ROLLBACK_IN_PROGRESS",\n            "ResourceStatusReason": "The following resource(s) failed to create: [Group, CircleciTestrepoUser]. . Rollback requested by user."\n        },\n        {\n            "StackId": "arn:aws:cloudformation:eu-west-1:673277413506:stack/central-auth-iamaccess-testdelete2-cf/046d1520-9e2f-11e9-9e94-064aa725f74e",\n            "EventId": "Group-CREATE_FAILED-2019-07-04T07:40:49.354Z",\n            "StackName": "central-auth-iamaccess-testdelete2-cf",\n            "LogicalResourceId": "Group",\n            "PhysicalResourceId": "",\n            "ResourceType": "AWS::IAM::Group",\n            "Timestamp": "2019-07-04T07:40:49.354Z",\n            "ResourceStatus": "CREATE_FAILED",\n            "ResourceStatusReason": "Resource creation cancelled",\n            "ResourceProperties": "{\"GroupName\":\"central-auth-accesstestdelete2-iam-group\",\"Policies\":[{\"PolicyName\":\"central-auth-assumeroletestdelete2-iam-policy\",\"PolicyDocument\":{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Resource\":\"arn:aws:iam::220766614489:role/digital-nonprod-accesstestdelete2-iam-role\",\"Effect\":\"Allow\"}]}}]}"\n        },\n        {\n            "StackId": "arn:aws:cloudformation:eu-west-1:673277413506:stack/central-auth-iamaccess-testdelete2-cf/046d1520-9e2f-11e9-9e94-064aa725f74e",\n            "EventId": "CircleciTestrepoUser-CREATE_FAILED-2019-07-04T07:40:48.889Z",\n            "StackName": "central-auth-iamaccess-testdelete2-cf",\n            "LogicalResourceId": "CircleciTestrepoUser",\n            "PhysicalResourceId": "",\n            "ResourceType": "AWS::IAM::User",\n            "Timestamp": "2019-07-04T07:40:48.889Z",\n            "ResourceStatus": "CREATE_FAILED",\n            "ResourceStatusReason": "s-circleci-testrepo already exists in stack arn:aws:cloudformation:eu-west-1:673277413506:stack/central-auth-iamaccess-testdelete-cf/c5899ab0-9e2c-11e9-87ff-061b9f50c2ce",\n            "ResourceProperties": "{\"UserName\":\"s-circleci-testrepo\"}"\n        },\n        {\n            "StackId": "arn:aws:cloudformation:eu-west-1:673277413506:stack/central-auth-iamaccess-testdelete2-cf/046d1520-9e2f-11e9-9e94-064aa725f74e",\n            "EventId": "Group-CREATE_IN_PROGRESS-2019-07-04T07:40:48.749Z",\n            "StackName": "central-auth-iamaccess-testdelete2-cf",\n            "LogicalResourceId": "Group",\n            "PhysicalResourceId": "",\n            "ResourceType": "AWS::IAM::Group",\n            "Timestamp": "2019-07-04T07:40:48.749Z",\n            "ResourceStatus": "CREATE_IN_PROGRESS",\n            "ResourceProperties": "{\"GroupName\":\"central-auth-accesstestdelete2-iam-group\",\"Policies\":[{\"PolicyName\":\"central-auth-assumeroletestdelete2-iam-policy\",\"PolicyDocument\":{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Resource\":\"arn:aws:iam::220766614489:role/digital-nonprod-accesstestdelete2-iam-role\",\"Effect\":\"Allow\"}]}}]}"\n        },\n        {\n            "StackId": "arn:aws:cloudformation:eu-west-1:673277413506:stack/central-auth-iamaccess-testdelete2-cf/046d1520-9e2f-11e9-9e94-064aa725f74e",\n            "EventId": "CircleciTestrepoUser-CREATE_IN_PROGRESS-2019-07-04T07:40:48.570Z",\n            "StackName": "central-auth-iamaccess-testdelete2-cf",\n            "LogicalResourceId": "CircleciTestrepoUser",\n            "PhysicalResourceId": "",\n            "ResourceType": "AWS::IAM::User",\n            "Timestamp": "2019-07-04T07:40:48.570Z",\n            "ResourceStatus": "CREATE_IN_PROGRESS",\n            "ResourceProperties": "{\"UserName\":\"s-circleci-testrepo\"}"\n        },\n        {\n            "StackId": "arn:aws:cloudformation:eu-west-1:673277413506:stack/central-auth-iamaccess-testdelete2-cf/046d1520-9e2f-11e9-9e94-064aa725f74e",\n            "EventId": "081eab70-9e2f-11e9-81d2-02beba5c02de",\n            "StackName": "central-auth-iamaccess-testdelete2-cf",\n            "LogicalResourceId": "central-auth-iamaccess-testdelete2-cf",\n            "PhysicalResourceId": "arn:aws:cloudformation:eu-west-1:673277413506:stack/central-auth-iamaccess-testdelete2-cf/046d1520-9e2f-11e9-9e94-064aa725f74e",\n            "ResourceType": "AWS::CloudFormation::Stack",\n            "Timestamp": "2019-07-04T07:40:44.826Z",\n            "ResourceStatus": "CREATE_IN_PROGRESS",\n            "ResourceStatusReason": "User Initiated"\n        },\n        {\n            "StackId": "arn:aws:cloudformation:eu-west-1:673277413506:stack/central-auth-iamaccess-testdelete2-cf/046d1520-9e2f-11e9-9e94-064aa725f74e",\n            "EventId": "046cc700-9e2f-11e9-9e94-064aa725f74e",\n            "StackName": "central-auth-iamaccess-testdelete2-cf",\n            "LogicalResourceId": "central-auth-iamaccess-testdelete2-cf",\n            "PhysicalResourceId": "arn:aws:cloudformation:eu-west-1:673277413506:stack/central-auth-iamaccess-testdelete2-cf/046d1520-9e2f-11e9-9e94-064aa725f74e",\n            "ResourceType": "AWS::CloudFormation::Stack",\n            "Timestamp": "2019-07-04T07:40:38.715Z",\n            "ResourceStatus": "REVIEW_IN_PROGRESS",\n            "ResourceStatusReason": "User Initiated"\n        }\n    ]\n}\n\n\n\n\n\nsdqdq\nexit
 1696  aws cloudformation describe-stack-events help
 1697  aws cloudformation describe-stack-events --stack-name central-auth-iamaccess-testdelete2-cf --region eu-west-1 --profile sl-central-auth
 1698  ./generate-cfn.sh && ./aws-cloudform.sh --account central-auth --profile sl-central-auth --category 002-iamaccess --skip-build
 1699  cd seloger/github/sl_aws-base-infra/
 1700  git checkout -b feature/catch-deploy-errors
 1701  git commit -m "catch cloudformation deploy errors"
 1702  git push --set-upstream origin feature/catch-deploy-errors
 1703  cd scangearmp2-3.40-1-deb
 1704  sudo ./install.sh
 1705  cd packages
 1706  sudo dpkg -i scangearmp2_3.40-1_amd64.deb
 1707  apt search scangearmp2
 1708  which scangearmp2
 1709  cd Téléchargements/
 1710  cd scangearmp2-3.40-1-deb/packages
 1711  ar x scangearmp2_3.40-1_amd64.deb
 1712  tar -zxf data.tar.gz
 1713  cat > ~/.local/share/applications/ScanGearMP2.desktop <<EOL\n[Desktop Entry]\nType=Application\nName=ScanGearMP2\nExec=/usr/bin/scangearmp2\nStartupNotify=true\nIcon=scanner\nCategories=Utility;\nEncoding=UTF-8\nTerminal=false\nEOL
 1714  cat ~/.local/share/applications/ScanGearMP2.desktop
 1715  head -n 30 ~/pCloudDrive/docs/ws-seloger/notes/todo.txt
 1716  sudo pkill -f slack
 1717  apt search -icon
 1718  apt search "-icon"
 1719  apt search "\-icon"
 1720  apt search "\-icon-theme"
 1721  sudo apt install deepin-icon-theme
 1722  sudo apt install mate-icon-theme
 1723  sudo apt remove mate-icon-theme
 1724  sudo apt remove mate-icon-theme --purge
 1725  sudo apt remove deepin-icon-theme --purge
 1726  git checkout -b feature/optim-sqs
 1727  git push --set-upstream origin feature/optim-sqs
 1728  ./generate-cfn.sh && ./aws-cloudform.sh --account central-auth --profile sl-central-auth --category 002-iamaccess --stack 002-sqs-queues.yml --skip-build
 1729  git commit -m "create sqs queues"
 1730  ps aux | grep -nri slack
 1731  watch -n1 "ps aux | grep slack"
 1732  ps aux | grep slack
 1733  cd backups
 1734  grep -nri "console.log" .
 1735  cd ~/pCloudDrive/dev/codebase/nodejs
 1736  grep -nri "sqs.getMessage" .
 1737  cp lambdas/key-rotator-push/main.py ~/pCloudDrive/dev/codebase/python/sqs.py
 1738  cd pCloudDrive/dev/codebase/
 1739  cd seloger/github/sl_aws-eks-config
 1740  git commit -m "default deny all correction"
 1741  git checkout feature/network-policies
 1742  git commit -m "fix policy types"
 1743  git merge feature/network-policies
 1744  ssh -p 64536 54.161.7.55\n
 1745  ssh -p 64536 54.161.7.55
 1746  man aws lambda invoke
 1747  vim ~/.gitconfig
 1748  aws s3 sync ./configs/iam-inventory/ s3://seloger-central-auth-iaminventory-bucket --dryrun
 1749  vim test_sync.py
 1750  python test_sync.py
 1751  python get_recent.py
 1752  php
 1753  apt search php
 1754  apt install php
 1755  sudo apt install php
 1756  rm generate-cfn.sh
 1757  aws version
 1758  aws lambda invoke help
 1759  tail -f ./build/tmp/out-central-auth-keyrotatorpushv1-lambda-function.log
 1760  watch cat ./build/tmp/out-central-auth-keyrotatorpushv1-lambda-function.log
 1761  base64
 1762  base64 -d
 1763  ./scripts/iam-tools/v1/exec-key-rotation-push.sh
 1764  ./seloger
 1765  cd github/sl_ops-aws-
 1766  cd github/sl_ops-aws-iam
 1767  ./scripts/iam-tools/v1/exec-key-rotation.sh
 1768  cat ~/pCloudDrive/docs/ws-seloger/notes/task-notes/201907_drafts.txt
 1769  pip search yamllint
 1770  pip search yaml
 1771  git commit -m "add scheduler to lambda"
 1772  sudo dpkg -i code_1.36.1-1562627527_amd64.deb
 1773  grep -nri libflashplayer.so .
 1774  vim ./docs/jdx/notes/tips.txt
 1775  cd flash_player_npapi_linux.x86_64
 1776  sudo mv libflashplayer.so /usr/lib/mozilla/plugins/
 1777  l ls -la /usr/lib/mozilla/plugins
 1778  l /usr/lib/mozilla/plugins
 1779  python lambdas/key-rotator-push/main.py
 1780  cd pCloudDrive/dev/codebase
 1781  cat ~/pCloudDrive/dev/codebase/python/sqs.py
 1782  python lambdas/key-rotator-consume/main.py | prettyjson
 1783  python lambdas/key-rotator-consume/main.py 
 1784  buildah
 1785  pt search dbeaver
 1786  tar -xzvf dbeaver-ee-6.1.0-linux.gtk.x86_64.tar.gz
 1787  l dbeaver
 1788  rm dbeaver-ee-6.1.0-linux.gtk.x86_64.tar.gz
 1789  rm -rf dbeaver
 1790  sudo dpkg -i dbeaver-ee_6.1.0_amd64.deb
 1791  sudo apt remove dbeaver-ee
 1792  sudo apt remove dbeaver-ee --purge
 1793  apt search dbeaver
 1794  rm dbeaver-ee_6.1.0_amd64.deb
 1795  ./generate-cfn.sh && ./aws-cloudform.sh --account central-auth --profile sl-central-auth --category 001-tools --stack 002-sqs-queues.yml --skip-build
 1796  cd dev/www/seloger/github/sl_ops-aws-iam
 1797  ./generate-cfn.sh && ./aws-cloudform.sh --account central-auth --profile sl-central-auth --category 001-tools --stack 004-keyrotator-consume2.yml
 1798  aws lambda invoke --invocation-type RequestResponse --function-name central-auth-keyrotatorconsumev2-lambda-function \\n--payload file://input.txt outputfile.txt
 1799  aws lambda list-event-source-mappings --function-name central-auth-keyrotatorconsumev2-lambda-function \\n--event-source arn:aws:sqs:eu-west-1:673277413506:central-auth-key-rotator-consume-sqs-queue
 1800  git commit -m "set sqs pattern"
 1801  ./generate-cfn.sh && ./aws-cloudform.sh --account central-auth --profile sl-central-auth --category 001-tools --stack 003-keyrotator-push.yml
 1802  git commit -m "add logs and renaming"
 1803  ./generate-cfn.sh && ./aws-cloudform.sh --account central-auth --profile sl-central-auth --category 001-tools --stack 004-keyrotator-consume.yml
 1804  git commit -m "add depends on"
 1805  ./exec-key-rotation.sh
 1806  ping 78.192.19;2
 1807  ping vps
 1808  vim .pylint.d
 1809  rm configs/iam-inventory/groups/new.yml
 1810  vim .config/pylintrc
 1811  pylint lambdas/key-rotator-consume/main.py
 1812  vim .config/Code/User/settings.json
 1813  git commit -m "update vscode and pylint"
 1814  python lambdas/key-rotator-consume/main.py
 1815  git commit -m "fix and raise exceptions"
 1816  git commit -m "update trigger for keyrotator"
 1817  ./generate-cfn.sh && ./aws-cloudform.sh --account central-auth --profile sl-central-auth --category 001-tools
 1818  git tag v1.4.0
 1819  grep -nri rejinect .
 1820  grep -nri reinject .
 1821  git commit -m "make recovery"
 1822  docker run --name kublr -d --restart=unless-stopped -p 9080:9080 kublr/kublr:1.12.1
 1823  docker stop -t0 kublr
 1824  docker rm kublr
 1825  pip install sqlmap --user
 1826  sqlmap -h
 1827  sqlmap -hh
 1828  sqlmap -u https://www.loueragile.fr/
 1829  curl http://elastic3.poliris.net:9200/_search
 1830  ./generate-cfn.sh && ./aws-cloudform.sh --account central-auth --profile sl-central-auth --category 001-tools --stack 002-sqs-queues.yml
 1831  ./generate-cfn.sh && ./aws-cloudform.sh --account central-auth --profile sl-central-auth --category 001-tools --stack 006-sns-alerts.yml
 1832  ./generate-cfn.sh && ./aws-cloudform.sh --account central-auth --profile sl-central-auth --category 001-tools --stack 006-sns-alerts.yml --skip-build
 1833  git commit -m "final touch"
 1834  git tag v1.5.0
 1835  git commit -m "reactive schedule for new system"
 1836  git tag v.1.5.1
 1837  ./generate-cfn.sh && ./aws-cloudform.sh --account central-auth --profile sl-central-auth --category 001-tools --stack 006-sns-alerts.yml --skip-build --test
 1838  ./generate-cfn.sh && ./aws-cloudform.sh --account central-auth --profile sl-central-auth --category 001-tools --stack 006-sns-alerts.yml --skip-build --cfn-nag | grep Fail
 1839  ./generate-cfn.sh && ./aws-cloudform.sh --account central-auth --profile sl-central-auth --skip-build --cfn-nag | grep Fail
 1840  ./generate-cfn.sh && ./aws-cloudform.sh --account central-auth --profile sl-central-auth --skip-build --test
 1841  ./generate-cfn.sh && ./aws-cloudform.sh --account central-auth --profile sl-central-auth --skip-build --cfn-nag
 1842  ./aws-cloudform.sh --account central-auth --profile sl-central-auth --skip-build --cfn-nag
 1843  ./aws-cloudform.sh --account central-auth --profile sl-central-auth --skip-build --cfn-nag | grep Fail
 1844  git commit -m "remove junk"
 1845  git commit -m "follow new naming"
 1846  git tag v1.5.2
 1847  git checkout feature/optim-sqs
 1848  git merge feature/optim-sqs
 1849  gsst
 1850  git tag v1.5.3
 1851  git branch -d feature/optim-sqs
 1852  git push --delete origin v.1.5.1$
 1853  git push --delete origin v.1.5.1
 1854  git branch -d feature/autosync
 1855  git fetch && git checkout feature/add-octopus-keyrotator
 1856  git fetch && git checkout feature/IAM-dynatrce
 1857  git commit -m "test new repo"
 1858  git commit -m "rm test"
 1859  git checkout feature/IAM-dynatrce
 1860  git checkout feature/add-octopus-keyrotator
 1861  git clone git@github.com:axel-springer-kugawana/sl_aws-cloud-cli.git
 1862  git checkout -b feature/suggestions
 1863  git push --set-upstream origin feature/suggestions
 1864  git commit -m "handle cfn-info v1"
 1865  checksum
 1866  apt search checksum
 1867  pip3 install . --user
 1868  git commit -m "fix test"
 1869  python3 setup.py sdist --formats=zip
 1870  apt search fullrelease
 1871  pip install zest.releaser
 1872  pip install zest.releaser --user
 1873  touch ~/.pypirc
 1874  fullrelease --no-input
 1875  fullrelease
 1876  python3 setup.py test
 1877  pip3 install .
 1878  aws-cloud
 1879  mkdir .pip
 1880  pip3 install --upgrade aws-cloud-cli --user
 1881  git branch -d feature/suggestions
 1882  cd seloger/github/sl_aws-cloud-cli
 1883  cd seloger/github/
 1884  ssh -p 64535 3.81.224.11\n
 1885  git clone git@github.com:axel-springer-kugawana/sl_website-aws-infra.git
 1886  cd sl_website-aws-infra
 1887  git fetch && git checkout develop
 1888  ./aws-cloudform.sh --account digital-nonprod --category 002-routing-diap --stack 010-preprod-1.yml
 1889  ps aux | grep forti
 1890  git commit -m "cutting proposal for human user rights from ad"
 1891  git commit -m "update users"
 1892  docker run -p 8080:8080 jboss/keycloak
 1893  docker run -e KEYCLOAK_USER=admin -e KEYCLOAK_PASSWORD=admin -p 8080:8080 jboss/keycloak
 1894  git clone git@github.com:jboss-dockerfiles/keycloak.git
 1895  grep -nri _HOME
 1896  docker exec -it 0efe419b3ce7 sh
 1897  man sed
 1898  grep -nri CLOAK_HOME
 1899  sudo updat
 1900  sudo update
 1901  git clone git@github.com:WeScale/drone-aws-python3.git
 1902  git clone git@github.com:WeScale/drone-aws-app-sample.git
 1903  git fetch && git checkout feature/init
 1904  cd ../jlabs_base-infra
 1905  touch Dockerfile
 1906  touch Makefile
 1907  mkdir .terraform
 1908  mkdir scripts
 1909  mkdir .secrets
 1910  mkdir -p providers/aws/ansible
 1911  mkdir -p providers/aws/terraform
 1912  mkdir -p providers/gcp/terraform
 1913  mkdir -p providers/gcp/ansible
 1914  mkdir -p providers/aws/terraform/commons
 1915  mkdir -p providers/aws/terraform/001-vpc
 1916  mkdir -p providers/aws/terraform/002-asg
 1917  mkdir -p providers/gpc/terraform/commons
 1918  mkdir -p providers/gcp/terraform/commons
 1919  mkdir -p providers/gcp/terraform/001-vpc
 1920  mkdir -p providers/gcp/terraform/002-asg
 1921  rm -rf providers/gpc
 1922  touch .editorconfig
 1923  git commit -m "set the structure"
 1924  docker build -t drone-base .
 1925  docker run -it -v $(pwd):/userdata -v ~/.aws:~/.aws -e 'DRONE_BASE_TEAM=wsc' -e 'DRONE_BASE_ENV=jd' --name drone-base drone-base
 1926  env | grep AWS
 1927  docker build -t drone-base . && \\ndocker run -it \\n  -v $(pwd):/userdata\n  -e 'TEAM=jdwsc' \\n  -e 'DRONE_BASE_ENV=pp' \\n  -e 'AWS_ACCESS_KEY_ID=AKIASHXMK3Z7NGSOKNR2' \\n  -e 'AWS_SECRET_ACCESS_KEY=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' \\n  --name drone-base \\n  drone-base
 1928  docker build -t drone-base . && \\ndocker run -it \\n  -v $(pwd):/userdata \\n  -e 'TEAM=jdwsc' \\n  -e 'DRONE_BASE_ENV=pp' \\n  -e 'AWS_ACCESS_KEY_ID=AKIASHXMK3Z7NGSOKNR2' \\n  -e 'AWS_SECRET_ACCESS_KEY=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' \\n  --name drone-base \\n  drone-base
 1929  docker run -it \\n  -v $(pwd):/userdata \\n  -e 'TEAM=jdwsc' \\n  -e 'DRONE_BASE_ENV=pp' \\n  -e 'AWS_ACCESS_KEY_ID=AKIASHXMK3Z7NGSOKNR2' \\n  -e 'AWS_SECRET_ACCESS_KEY=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' \\n  --name drone-base \\n  drone-base bash
 1930  docker build -t drone-base . && \\ndocker run -it \\n  -v $(pwd):/userdata \\n  -e 'TEAM=jdwsc' \\n  -e 'DRONE_BASE_ENV=pp' \\n  -e 'AWS_ACCESS_KEY_ID=AKIASHXMK3Z7NGSOKNR2' \\n  -e 'AWS_SECRET_ACCESS_KEY=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' \\n  --name drone-base \\n  drone-base bash
 1931  git commit -m "set docker env for everyone"
 1932  ls ../
 1933  git commit -m "set arbo"
 1934  docker build -t drone-base . && \\ndocker run -it \\n  -v $(pwd):/userdata \\n  -e 'TEAM=jdwsc' \\n  -e 'ENV=pp' \\n  -e 'AWS_ACCESS_KEY_ID=AKIASHXMK3Z7NGSOKNR2' \\n  -e 'AWS_SECRET_ACCESS_KEY=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' \\n  --name drone-base \\n  drone-base bash
 1935  ln -s ./../commons/provider.tf providers/aws/terraform/001-vpc/provider.tf
 1936  cat providers/aws/terraform/001-vpc/provider.tf
 1937  ln -s ./../../../../.terraform.d providers/aws/terraform/001-vpc/.terraform.d
 1938  ln -s ./../../../../.terraform.d providers/aws/terraform/002-asg/.terraform.d
 1939  l providers/aws/terraform/001-vpc
 1940  ln -s ./../../../../.terraform providers/aws/terraform/001-vpc/.terraform
 1941  ln -s ./../../../../.terraform providers/aws/terraform/002-asg/.terraform
 1942  rm providers/aws/terraform/001-vpc/.terraform.d
 1943  rm providers/aws/terraform/002-asg/.terraform.d
 1944  l providers/aws/terraform/002-asg/
 1945  ln -s ./../commons/provider.tf providers/aws/terraform/002-asg/provider.tf
 1946  git commit -m "set tf vpc"
 1947  make test
 1948  echo $AWS_REGION
 1949  docker build -t drone-base . && \\ndocker run -it \\n  -v $(pwd):/userdata \\n  -e 'TEAM=team' \\n  -e 'ENV=env' \\n  -e 'AWS_ACCESS_KEY_ID=id' \\n  -e 'AWS_SECRET_ACCESS_KEY=secret' \\n  -e 'AWS_REGION=eu-west-1' \\n  --name drone-base \\n  drone-base bash
 1950  ln -s ./../../../../.terraform providers/aws/terraform/000-tfstate/.terraform
 1951  l providers/aws/terraform/000-tfstate/.terraform
 1952  docker stop -t0 drone-base && docker rm drone-base
 1953  docker build -t drone-base . && \\ndocker run -it \\n  -v $(pwd):/userdata \\n  -e 'TEAM=jdwsc' \\n  -e 'ENV=pp' \\n  -e 'AWS_ACCESS_KEY_ID=AKIASHXMK3Z7NGSOKNR2' \\n  -e 'AWS_SECRET_ACCESS_KEY=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' \\n  -e 'AWS_REGION=eu-west-1' \\n  --name drone-base \\n  drone-base bash
 1954  cd providers/aws/terraform/000-tfstate
 1955  terraform
 1956  terraform 0.12upgrade main.tf
 1957  ../
 1958  git commit -m "set tfstate"
 1959  terraform 0.12upgrade ./
 1960  ln -s ./../commons/versions.tf providers/aws/terraform/001-vpc/versions.tf
 1961  ln -s ./../commons/versions.tf providers/aws/terraform/002-asg/versions.tf
 1962  ln -s ./../commons/versions.tf providers/aws/terraform/000-tfstate/versions.tf
 1963  git commit -m "tfstate ok"
 1964  git fetch && git merge feature/k3s
 1965  git merge feature/k3s
 1966  git rm providers/aws/terraform/000-tfstate/jdwsc-dev..tfstate.backup
 1967  git commit -m "ignore tfstate bk"
 1968  apt search selinux
 1969  ping 37.59.123.83
 1970  make help
 1971  make tf-plan --provider aws
 1972  vim Makefile
 1973  make tf-plan 
 1974  chmod +x deploy.sh
 1975  make tf-plan
 1976  make tf-plan PROVIDER=aws
 1977  export TEAM=jdwsc
 1978  export ENV=dev
 1979  export AWS_REGION=eu-west-1
 1980  env
 1981  terraform init \\n        -backend-config "region=eu-west-1" \\n        -backend-config "dynamodb_table=jdwsc-dev-eu-west-1-tfstate-lock" \\n        -backend-config "bucket=jdwsc-dev-eu-west-1-tfstate" \\n        -backend-config "key=001-vpc.tfstate" \\n        -force-copy
 1982  sudo rm -rf .terraform/*
 1983  ./deploy.sh --team jdwsc --env dev --awsRegion eu-west-1
 1984  cd /home/jdx/dev/www/github/drone-base/providers/aws/terraform/001-vpc
 1985  cat ./../../../../.secrets/tf-config/jdwsc-dev-aws-tf-001-vpc.tfvars
 1986  cat ./../../../../.secrets/tf-config/jdwsc-dev-aws-tf.tfvars
 1987  make tf-plan PROVIDER=aws LAYER=001-vpc
 1988  cd providers/aws/terraform/001-vpc
 1989  cd ../../../../
 1990  git commit -m "make deploy script"
 1991  ./deploy.sh
 1992  ./deploy.sh --team jdwsc --env dev --provider aws --awsRegion eu-west-1
 1993  ./deploy.sh --team jdwsc --env dev --provider aws --awsRegion eu-west-1 --tfAction plan
 1994  git commit -m "set bash deploy tf"
 1995  ./tf-deploy.sh --team jdwsc --env dev --provider aws --awsRegion eu-west-1 --tfAction destroy
 1996  ./tf-deploy.sh --team jdwsc --env dev --provider aws --awsRegion eu-west-1 --tfAction apply
 1997  ./tf-deploy.sh --team jdwsc --env dev --provider aws --awsRegion eu-west-1 --tfAction plan
 1998  git commit -m "set the basic deployment"
 1999  git pushg
 2000  rm -rf .terraform/*
 2001  ./tf-deploy.sh --team jdwsc --env dev --provider aws --awsRegion eu-west-1 --tfAction plan --layer 002-asg
 2002  rm .secrets
 2003  rm .secrets.zip
 2004  git commit -m "fix docker"
 2005  cd github/drone-base
 2006  rm -rf providers/aws/terraform/000-tfstate/.terraform
 2007  rm -rf providers/aws/terraform/001-vpc/.terraform
 2008  rm -rf providers/aws/terraform/002-asg /.terraform
 2009  git checkout providers/aws/terraform/002-asg/
 2010  rm -rf providers/aws/terraform/002-asg/.terraform
 2011  ls -la providers/aws/terraform/001-vpc
 2012  ls -la providers/aws/terraform/000-tfstate
 2013  ls -la providers/aws/terraform/002-asg
 2014  tflint
 2015  wget https://github.com/wata727/tflint/releases/download/v0.9.2/tflint_darwin_amd64.zip\n
 2016  wget https://github.com/wata727/tflint/releases/download/v0.9.2/tflint_linux_amd64.zip
 2017  cd dotfiles
 2018  ./tf-deploy.sh
 2019  export AWS_PROFILE=wsc-jdx
 2020  ./tf-deploy.sh --team jdwsc --env dev --provider aws --awsRegion eu-west-1 --tfAction plan --layer 001-vpc
 2021  docker stop -t0 drone-base && docker rm drone-base && \\ndocker build -t drone-base . && \\ndocker run -it \\n  -v $(pwd):/userdata \\n  -e 'TEAM=jdwsc' \\n  -e 'ENV=dev' \\n  -e 'AWS_ACCESS_KEY_ID=AKIASHXMK3Z7NGSOKNR2' \\n  -e 'AWS_SECRET_ACCESS_KEY=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' \\n  -e 'AWS_REGION=eu-west-1' \\n  --name drone-base \\n  drone-base bash
 2022  git commit -m "some fixes"
 2023  apt search apparmor
 2024  apt search mariadb
 2025  git checkout feature/catch-deploy-errors 
 2026  git branch -d feature/catch-deploy-errors
 2027  cd ~/pCloudDrive/docs/ws-seloger/notes/
 2028  mv task-notes/SEC-105.txt SEC-105_keycloak.txt
 2029  mv SEC-105_keycloak.txt task-notes
 2030  cd ../../flat/keycloak
 2031  unzip keycloak-master.zip
 2032  cp keycloak-master/server/tools ~/dev/www/flat/keycloak/
 2033  cp -r keycloak-master/server/tools ~/dev/www/flat/keycloak/
 2034  docker
 2035  \n\ndocker exec -it keycloak-custom sh
 2036  docker exec -it 38192a2e6bc8 sh
 2037  docker exec -it 38192a2e6bc8 bash
 2038  git clone https://github.com/stianst/keycloak-experimental.git
 2039  vimdiff Dockerfile Dockerfile.original
 2040  docker run -e KEYCLOAK_USER=admin -e KEYCLOAK_PASSWORD=admin -p 8080:8080 keycloak-custom
 2041  docker exec -it 9117f506841a bash
 2042  docker stop -t0 9117f506841a
 2043  docker rm 9117f506841a
 2044  docker exec -it b529b9e71c79 bash
 2045  docker exec -it b529b9e71c79 sh
 2046  docker exec -it 52fdc295f205 bash
 2047  docker stop -t0 52fdc295f205 && docker rm 52fdc295f205
 2048  docker run -e KEYCLOAK_USER=admin -e KEYCLOAK_PASSWORD=admin -p 8080:8080 -p 8443:8443 keycloak-custom
 2049  docker exec -it 903a44bf46b3 bash
 2050  docker stop -t0 903a44bf46b3 && docker rm 903a44bf46b3
 2051  su - root
 2052  sudo passwd
 2053  git checkout -b feature/add-role-eks-pods-cas
 2054  git push --set-upstream origin feature/add-role-eks-pods-cas
 2055  ./ge
 2056  git branch -d feature/add-role-eks-pods-cas
 2057  [200~docker run -e KEYCLOAK_USER=admin -e KEYCLOAK_PASSWORD=admin -p 8080:8080 -p 8443:8443 --name keycloak-custom keycloak-custom~
 2058  docker exec -it 9ce85b364f21 bash
 2059  ducker run -it 2022b44a5b5a bash
 2060  docker run -it 2022b44a5b5a bash
 2061  docker run -it keycloak-custom sh
 2062  docker run -it keycloak-custom bash
 2063  export AWS_PROFILE=sl-digital-prod
 2064  aws s3 ls seloger-atlas-prod-preloadplanet-bucket/
 2065  aws s3 ls seloger-atlas-prod-preloadwebapi-bucket/
 2066  git clone help
 2067  git clone --help
 2068  docker stop -t0 keycloak-custom && docker rm keycloak-custom
 2069  docker build --no-cache -t keycloak-custom .
 2070  cd flat/keycloak
 2071  wget https://signin.aws.amazon.com/static/saml-metadata.xml
 2072  vim saml-metadata.xml
 2073  rm keycloak-master
 2074  rm keycloak-master.zip
 2075  rm -rf keycloak-master
 2076  rm -rf keycloak-experimental
 2077  watch l
 2078  watch ls -la
 2079  watch ls -lah
 2080  unzip keycloak-6.0.1.zip
 2081  rm keycloak-6.0.1 ~/dev/progs
 2082  mv keycloak-6.0.1 ~/dev/progs
 2083  l ~/dev/progs/keycloak-6.0.1
 2084  l ~/dev/progs/keycloak-6.0.1/bin
 2085  cd dev/progs
 2086  mv keycloak-6.0.1 keycloak
 2087  cd keycloak
 2088  vim version.txt
 2089  echo $PATH
 2090  kcadm.sh config credentials --server http://localhost:8080/auth --realm master --user admin
 2091  kcadm.sh create realm -s realm=jdxlabs -s enabled=true
 2092  kcadm.sh create realms -s realm=jdxlabs -s enabled=true
 2093  kcadm.sh create clients -r jdxlabs -s clientId="urn:amazon:webservices" -s enabled=true -f
 2094  kcadm.sh create clients/ab0b660b-1f9b-4572-8110-6d2265eb2abb/roles -r jdxlabs -s 'name=arn:aws:iam::220766614489:role/jdxlabs-admin,arn:aws:iam::220766614489:saml-provider/docker-keycloak' -s 'description=AWS Administration AccessOH'
 2095  kcadm.sh create groups -r jdxlabs -s name=aws-admins
 2096  kcadm.sh add-roles -r jdxlabs --gname 'aws-admins' --cclientid 'urn:amazon:webservices' --rolename 'arn:aws:iam::220766614489:role/jdxlabs-admin,arn:aws:iam::220766614489:saml-provider/docker-keycloak'\n
 2097  kcadm.sh create users -r jdxlabs -s username=jdxlabs -s email=jdevoucoux@gmail.com -s enabled=true
 2098  kcadm.sh update users/13b9fb96-efc1-4b95-b6fa-ee47e11520eb/reset-password -r jdxlabs  -s type=password -s value=pass2 -s temporary=true -n
 2099  kcadm.sh update users/13b9fb96-efc1-4b95-b6fa-ee47e11520eb/groups/5dcf7e13-ef80-4a52-9cc5-b779c5d5a22e -r jdxlabs -s realm=jdxlabs -s userId=13b9fb96-efc1-4b95-b6fa-ee47e11520eb -s groupId=5dcf7e13-ef80-4a52-9cc5-b779c5d5a22e -n\n
 2100  kcadm.sh get -r jdxlabs clients/ab0b660b-1f9b-4572-8110-6d2265eb2abb/installation/providers/saml-idp-descriptor > client-tailored-saml-idp-metadata.xml
 2101  kcadm.sh get -r jdxlabs clients/ab0b660b-1f9b-4572-8110-6d2265eb2abb/installation/providers/saml/descriptor > client-tailored-saml-idp-metadata.xml
 2102  cd dev/www/flat/keycloak
 2103  docker system prune -a -f 
 2104  docker build -t keycloak-custom .
 2105  cd Téléchargements/ApacheDirectoryStudio-2.0.0.v20180908-M14-linux.gtk.x86_64
 2106  mv ApacheDirectoryStudio ~/dev/progs
 2107  l ~/dev/progs
 2108  cd dev/progs/ApacheDirectoryStudio/
 2109  ./ApacheDirectoryStudio
 2110  cat > ~/.local/share/applications/Apache Directory Studio.desktop <<EOL\n[Desktop Entry]\nType=Application\nName=Apache Directory Studio\nExec=/home/jdx/dev/progs/ApacheDirectoryStudio/ApacheDirectoryStudio\nIcon=/home/jdx/dev/progs/ApacheDirectoryStudio/icon.xpm\nCategories=Development;\nEncoding=UTF-8\nTerminal=false\nEOL
 2111  cat > ~/.local/share/applications/ApacheDirectoryStudio.desktop <<EOL\n[Desktop Entry]\nType=Application\nName=Apache Directory Studio\nExec=/home/jdx/dev/progs/ApacheDirectoryStudio/ApacheDirectoryStudio\nIcon=/home/jdx/dev/progs/ApacheDirectoryStudio/icon.xpm\nCategories=Development;\nEncoding=UTF-8\nTerminal=false\nEOL
 2112  rm ~/.local/share/applications/Apache
 2113  ./jxplorer-3.3.1.2-linux-installer.run
 2114  sudo ./jxplorer-3.3.1.2-linux-installer.run
 2115  apt search jxplorer
 2116  rm jxplorer-3.3.1.2-linux-installer.run
 2117  rm ApacheDirectoryStudio-2.0.0.v20180908-M14-linux.gtk.x86_64*
 2118  rm -rf ApacheDirectoryStudio-2.0.0.v20180908-M14-linux.gtk.x86_64*
 2119  docker exec -it 165fc62c274e bash
 2120  docker restart keycloak-custom
 2121  docker exec -it keycloak-custom bash
 2122  sudo dpkg-reconfigure wireshark-common
 2123  sudo usermod -a -G wireshark $USER\n
 2124  newgrp wireshark
 2125  cd seloger/github/sl_ops-aws-
 2126  cat configs/iam-inventory/groups/seller.yml
 2127  ./launch-forticli.sh 
 2128  git commit -m "cut rights for bd"
 2129  docker start keycloak-custom
 2130  git checkout -b feature/add-conditions
 2131  git push --set-upstream origin feature/add-conditions
 2132  ./lambdas/key-rotator-push/main.py
 2133  python ./lambdas/key-rotator-push/main.py
 2134  git commit -m "quickfix"
 2135  git commit -m "test condition pattern"
 2136  git commit -m "fix rights lux"
 2137  ssh -p 64537 54.88.156.101
 2138  ./sl_ops-localadminsmanagement
 2139  git checkout feature/add-conditions
 2140  ./aws-cloudform.sh --account digital-nonprod --category 002-iamaccess --stack 008-ekssampleapp2.yml
 2141  ./aws-cloudform.sh --account digital-nonprod --category 002-iamaccess --stack 008-ekssampleapp2.yml --skip-build
 2142  git commit -m "add condition in generation script"
 2143  docker stop -t0 keycloak-custom
 2144  ps aux | grep sla
 2145  apt search free
 2146  touch pCloudDrive/docs/jdx/notes/todo.txt
 2147  unzip notes.zip
 2148  rm -rf source
 2149  vim ./201805_xuan_argus.txt
 2150  vim ./201607.txt
 2151  grep -nri xuan .
 2152  vim ./201812\ thoughts.txt
 2153  ssh localhost
 2154  ssh jdx@localhost
 2155  kubectl 
 2156  ssh -p 64535 107.21.5.218\n\n
 2157  git checkout -b feature/fix-rights-adama
 2158  git push --set-upstream origin feature/fix-rights-adama
 2159  git commit -m "add local respo"
 2160  git merge feature/fix-rights-adama
 2161  docker run -e KEYCLOAK_USER=admin -e KEYCLOAK_PASSWORD=admin -p 8080:8080 -p 8443:8443 --name keycloak-custom keycloak-custom
 2162  docker start 165fc62c274e
 2163  l keycloak
 2164  mv keycloak keycloak-tests
 2165  docker logs -f keycloak-custom
 2166  aws sts assume-role-with-saml help
 2167  aws sts assume-role-with-saml \\n  --role-arn arn:aws:iam::220766614489:role/sltest-admin \\n  --principal-arn arn:aws:iam::220766614489:saml-provider/sltest-kc \\n  --saml-assertion PHNhbWxwOlJlc3BvbnNlIHhtbG5zOnNhbWxwPSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6cHJvdG9jb2wiIHhtbG5zOnNhbWw9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDphc3NlcnRpb24iIERlc3RpbmF0aW9uPSJodHRwczovL3NpZ25pbi5hd3MuYW1hem9uLmNvbS9zYW1sIiBJRD0iSURfYjJmNDgyYTItNjFhZi00MzUyLTg5YTAtOTg2YTRmOWUzZWZlIiBJc3N1ZUluc3RhbnQ9IjIwMTktMDctMjlUMTQ6NTM6NTkuMDg3WiIgVmVyc2lvbj0iMi4wIj48c2FtbDpJc3N1ZXI\n
 2168  aws sts assume-role-with-saml \\n  --role-arn arn:aws:iam::220766614489:role/sltest-admin \\n  --principal-arn arn:aws:iam::220766614489:saml-provider/sltest-kc \\n  --saml-assertion PHNhbWxwOlJlc3BvbnNlIHhtbG5zOnNhbWxwPSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6cHJvdG9jb2wiIHhtbG5zOnNhbWw9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDphc3NlcnRpb24iIERlc3RpbmF0aW9uPSJodHRwczovL3NpZ25pbi5hd3MuYW1hem9uLmNvbS9zYW1sIiBJRD0iSURfYjJmNDgyYTItNjFhZi00MzUyLTg5YTAtOTg2YTRmOWUzZWZlIiBJc3N1ZUluc3RhbnQ9IjIwMTktMDctMjlUMTQ6NTM6NTkuMDg3WiIgVmVyc2lvbj0iMi4wIj48c2FtbDpJc3N1ZXI+aHR0cDovL2xvY2FsaG9zdDo4MDgwL2F1dGgvcmVhbG1zL3NsdGVzdDwvc2FtbDpJc3N1ZXI+PGRzaWc6U2lnbmF0dXJlIHhtbG5zOmRzaWc9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAv…DQ4OTpzYW1sLXByb3ZpZGVyL3NsdGVzdC1rYzwvc2FtbDpBdHRyaWJ1dGVWYWx1ZT48c2FtbDpBdHRyaWJ1dGVWYWx1ZSB4bWxuczp4cz0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOnhzaT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiIHhzaTp0eXBlPSJ4czpzdHJpbmciPmFybjphd3M6aWFtOjoyMjA3NjY2MTQ0ODk6cm9sZS9zbHRlc3QtYWRtaW4sYXJuOmF3czppYW06OjIyMDc2NjYxNDQ4OTpzYW1sLXByb3ZpZGVyL3NsdGVzdC1rYzwvc2FtbDpBdHRyaWJ1dGVWYWx1ZT48L3NhbWw6QXR0cmlidXRlPjwvc2FtbDpBdHRyaWJ1dGVTdGF0ZW1lbnQ+PC9zYW1sOkFzc2VydGlvbj48L3NhbWxwOlJlc3BvbnNlPg==
 2169  aws sts assume-role-with-saml \\n  --role-arn arn:aws:iam::220766614489:role/sltest-admin \\n  --principal-arn arn:aws:iam::220766614489:saml-provider/sltest-kc \\n  --saml-assertion SAMLResponse=\n
 2170  aws sts assume-role-with-saml \\n  --role-arn arn:aws:iam::220766614489:role/sltest-admin \\n  --principal-arn arn:aws:iam::220766614489:saml-provider/sltest-kc \\n  --saml-assertion 
 2171  export AWS_ACCESS_KEY_ID=ASIATGZVXGPMZIE6BOHJ
 2172  export AWS_SECRET_ACCESS_KEY=dfILqUiNXivcFT40/ubZ8XGXTHCZtS8jWGXy4VTU
 2173  export AWS_SESSION_TOKEN=FQoGZXIvYXdzEBEaDMdSkkC/F2VJmlE4YSK2ApxIhZzgsDRDWEO9HBUItdWd18tkp/Z9uaCXFT+Uzt9Krori75awzm1ofmSClQo56sr16GZhwQ3uW28vsXUAk1EwLSRbmxkxI1QhXY4QMGf6pXObogbz04zGvYTMCsgTcZER7TY64BVUpXNt1cDStjf6ug++fPqqhXtp/rMi4lWiV4i8gC4dpHhDdQw+LYjSrEd5rtKSc8ZPvPAu2D/2ClTtJ+65d6jIEWgHDH67dixqJXCvai3Ech/wf9dH3EK0Uk5CUhJbFU/wQW0CQehe/Un6U29d+2F9UzkMces4F7T/LeOlW6LzV5Euj3Ur2mrlg7blU6hPYVzLKSHbXXinKe6lIKK/6xfSkIPtAJNi01qlLls6FjNfU50Y0ZBKGJ951owwRC9w1Yf9oiX1YFag/LGlCGLejEMoupb86QU=
 2174  pip3 install --upgrade boto beautifulsoup4 requests
 2175  pip3 install --upgrade boto beautifulsoup4 requests --user
 2176  cd ../flat/keycloak
 2177  mkdir awscli
 2178  cd awscli
 2179  mv ~/Téléchargements/0192721658_1562696757_blogversion_samlapi_python3.py working_samlapi.py
 2180  cp working_samlapi.py working_samlapi.py.bkp
 2181  vim working_samlapi.py
 2182  ./working_samlapi.py
 2183  pip3 install requests_ntlm --user
 2184  python ./working_samlapi.py
 2185  git clone git@github.com:axel-springer-kugawana/sl_ops-aws-security.git
 2186  git commit -m "add security repo"
 2187  cd ../sl_ops-aws-security
 2188  git commit -m "la base"
 2189  git tag v0.1.0
 2190  git push --tags
 2191  tree -a
 2192  man tree
 2193  tree -a -I .git
 2194  touch sl_repo_base_example.txt
 2195  vim sl_repo_base_example.txt
 2196  aws --region eu-west-1 ec2 describe-images --owners aws-marketplace --filters Name=product-code,Values=aw0evgkw8e5c1q413zgy5pjce 
 2197  cat nat-hoche.poliris.net
 2198  aws ec2 describe-images --owners amazon --filters "Name=name,Values=centos*" --query 'sort_by(Images, &CreationDate)[].Name'
 2199  aws ec2 describe-images --owners amazon --filters "Name=name,Values=CentOS*" --query 'sort_by(Images, &CreationDate)[].Name'
 2200  aws ec2 describe-images --owners amazon --filters "Name=name,Values=amzn*" --query 'sort_by(Images, &CreationDate)[].Name'
 2201  aws --region us-east-1 ec2 describe-images --owners aws-marketplace --filters Name=product-code,Values=aw0evgkw8e5c1q413zgy5pjce 
 2202  aws --region us-east-1 ec2 describe-images --owners aws-marketplace --filters Name=product-code,Values=aw0evgkw8e5c1q413zgy5pjce > out
 2203  git commit -m "add custom rscs for central auth"
 2204  git commit -m "iso"
 2205  ./aws-cloudform.sh --account central-auth --profile sl-central-auth --category 005-lambda --stack 001-cfn-custom-resources.yml
 2206  git commit -m "clean custom resources"
 2207  echo $CIRCLEBRANCH
 2208  mv central-auth-keycloak.pem ~/.ssh/seloger/
 2209  chmod 400 ~/.ssh/seloger/central-auth-keycloak.pem 
 2210  vim ~/.ssh/seloger/central-auth-keycloak.pem
 2211  ssh centos@10.105.0.65
 2212  ssh -i ~/.ssh/seloger/central-auth-keycloak.pem centos@10.105.0.65
 2213  ssh -i ~/.ssh/seloger/central-auth-keycloak.pem centos@18.202.55.185
 2214  traceroute 10.105.5.201
 2215  ping diskstation
 2216  cat ~/.ssh/seloger/central-auth-keycloak.pem
 2217  cd sl_ops-aws-security
 2218  ./aws-cloudform.sh --account digital-nonprod --profile sl-digital-nonprod --category 012-eks
 2219  git commit -m "escape eks to restore green cicd"
 2220  git checkout -b feature/setup-keycloak
 2221  git push --set-upstream origin feature/setup-keycloak
 2222  git commit -m "update naming"
 2223  git clone git@github.com:jdxlabs/cloudformation-workshops.git
 2224  cd cloudformation-workshops
 2225  sg
 2226  git commit -m "fix domain name"
 2227  git commit -m "fix linters"
 2228  ssh -i ~/.ssh/seloger/central-auth-keycloak.pem centos@10.105.4.161
 2229  ssh -i ~/.ssh/seloger/central-auth-keycloak.pem centos@10.105.5.201
 2230  nslookup central-ALB-1A7FIK4T0U79B-777166002.eu-west-1.elb.amazonaws.com
 2231  watch nslookup central-ALB-1A7FIK4T0U79B-777166002.eu-west-1.elb.amazonaws.com
 2232  watch nslookup central-alb-1a7fik4t0u79b-777166002.eu-west-1.elb.amazonaws.com.
 2233  nslookup -keycloak.auth.groupeseloger.tools
 2234  nslookup "-keycloak.auth.groupeseloger.tools"
 2235  nslookup central-alb-1a7fik4t0u79b-777166002.eu-west-1.elb.amazonaws.com.
 2236  /-p
 2237  docker run --help
 2238  ssh -i ~/.ssh/seloger/central-auth-keycloak.pem centos@10.105.6.174
 2239  ssh -i ~/.ssh/seloger/central-auth-keycloak.pem centos@10.105.4.102
 2240  ssh -i ~/.ssh/seloger/central-auth-keycloak.pem centos@10.105.5.232
 2241  ssh -i ~/.ssh/seloger/central-auth-keycloak.pem centos@10.105.6.189
 2242  ssh -i ~/.ssh/seloger/central-auth-keycloak.pem centos@10.105.4.218
 2243  ssh -i ~/.ssh/seloger/central-auth-keycloak.pem centos@10.105.6.166
 2244  ssh -i ~/.ssh/seloger/central-auth-keycloak.pem centos@10.105.6.23
 2245  ssh -i ~/.ssh/seloger/central-auth-keycloak.pem centos@10.105.4.212
 2246  git commit -m "finally works"
 2247  ssh -i ~/.ssh/seloger/central-auth-keycloak.pem centos@10.105.6.33
 2248  echo date
 2249  echo $date
 2250  echo "pass in" && date
 2251  sudo docker run -e KEYCLOAK_USER=admin -e KEYCLOAK_PASSWORD=admin -p 1337:8080 --name keycloak jboss/keycloak
 2252  curl localhost:1337
 2253  docker rm keycloak
 2254  docker run -d -e KEYCLOAK_USER=admin -e KEYCLOAK_PASSWORD=admin -p 80:8080 -p 443:8443 --name keycloak jboss/keycloak | $LOG_CMD
 2255  docker run -e KEYCLOAK_USER=admin -e KEYCLOAK_PASSWORD=admin -p 80:8080 -p 443:8443 --name keycloak jboss/keycloak
 2256  docker run -e KEYCLOAK_USER=admin -e KEYCLOAK_PASSWORD=admin -p 1337:8080 -p 8443:8443 --name keycloak jboss/keycloak
 2257  docker run -e KEYCLOAK_USER=admin -e KEYCLOAK_PASSWORD=admin -p 1337:8080 -p 8443:443 --name keycloak jboss/keycloak
 2258  docker run -e KEYCLOAK_USER=admin -e KEYCLOAK_PASSWORD=admin -p 1337:8080 --name keycloak jboss/keycloak
 2259  docker run -d -e KEYCLOAK_USER=admin -e KEYCLOAK_PASSWORD=admin -p 1337:8080 --name keycloak jboss/keycloak
 2260  ssh -i ~/.ssh/seloger/central-auth-keycloak.pem centos@10.105.4.222
 2261  ssh -i ~/.ssh/seloger/central-auth-keycloak.pem centos@10.105.5.187
 2262  nslookup 10.105.4.222
 2263  ping 10.105.4.222
 2264  nslookup http://keycloak.auth.groupeseloger.tools/
 2265  nslookup keycloak.auth.groupeseloger.tools/
 2266  watch -n1 "nslookup keycloak.auth.groupeseloger.tools"
 2267  git commit -m "set clean security groups"
 2268  git commit -m "handle one for now"
 2269  git commit -m "web auth"
 2270  git commit -m "fix spaces"
 2271  git commit -m "target group http"
 2272  git commit -m "https ok"
 2273  git commit -m "set certif var"
 2274  ./aws-cloudform.sh --account central-auth --profile sl-central-auth --skip-build
 2275  mv central-auth-keycloak-dev* ~/.ssh/seloger
 2276  chmod 400 *
 2277  git commit -m "add dev gln"
 2278  git checkout -b dev/gln
 2279  git push --set-upstream origin dev/gln
 2280  cat ~/.ssh/seloger/central-auth-keycloak-devgln.pem
 2281  ./aws-cloudform.sh --account central-auth --profile sl-central-auth --category 001-keycloak --stack 002-asg-devgln.yml
 2282  git commit -m "add dev jdx"
 2283  git checkout -b dev/jdx
 2284  git push --set-upstream origin dev/jdx
 2285  ./aws-cloudform.sh --account central-auth --profile sl-central-auth --category 001-keycloak --stack 002-asg-devjdx.yml
 2286  git checkout feature/setup-keycloak
 2287  git commit -m "limit the impact"
 2288  git checkout dev/gln
 2289  git merge feature/setup-keycloak
 2290  git clone git@github.com:axel-springer-kugawana/sl_docker-keycloak.git
 2291  cd sl_docker-keycloak
 2292  git commit -m "let's rock baby"
 2293  git commit -m "add docker keycloak repo"
 2294  git clone git@github.com:axel-springer-kugawana/sl_lead_as_a_service.git
 2295  cd sl_lead_as_a_service
 2296  grep -nri LambdaRole .
 2297  tree 
 2298  git fetch && git checkout feature/create_application_load_balancer
 2299  find . -iname "*deploy*"
 2300  cd script
 2301  chmod +x deploy-env.sh
 2302  vim deploy-env.sh
 2303  ./deploy-env.sh  --env dev --organization SeLoger --projectName LAAS --region eu-west-1 --bucket seloger-digital-nonprod-laas-infra-bucket  --templatefile "../infrastructure/LaasInfrastructure.yml"
 2304  ssh -p 64536 54.196.51.146\n
 2305  git checkout -b feature/update-laas
 2306  ./generate-cfn.sh && ./aws-cloudform.sh --account digital-nonprod --profile sl-digital-nonprod --category 002-iamaccess --skip-build
 2307  git commit -m "allow some iam roles for laas"
 2308  git push --set-upstream origin feature/update-laas
 2309  nslookup keycloak.auth.groupeseloger.tools
 2310  nslookup keycloak-devjdx.auth.groupeseloger.tools
 2311  ssh -i ~/.ssh/seloger/central-auth-keycloak-devgln.pem centos@10.105.5.54
 2312  watch nslookup keycloak-devjdx.auth.groupeseloger.tools
 2313  git checkout -b feature/update-ecr-deploy
 2314  git commit -m "allow other ecrs than central shared"
 2315  git push --set-upstream origin feature/update-ecr-deploy
 2316  cd dev/backups/2019-wsc-mac/
 2317  git branch -d feature/update-ecr-deploy
 2318  ssh -p 64537 18.215.239.9\n
 2319  git commit -m "add src tools"
 2320  git checkout feature/update-laas
 2321  git clone git@github.com:axel-springer-kugawana/sl_ops-groupeseloger-website.git
 2322  cd sl_ops-groupeseloger-website
 2323  git checkout -b feature/add-permission-boundaries
 2324  ./generate-cfn.sh 
 2325  git commit -m "add boundaries folder"
 2326  git push --set-upstream origin feature/add-permission-boundaries
 2327  git commit -m "rename for more flexibility"
 2328  git commit -m "add boundary for real"
 2329  ./generate-cfn.sh && ./aws-cloudform.sh --account digital-nonprod --profile sl-digital-nonprod --category 002-iamaccess
 2330  [200~ssh -p 64535 54.173.187.184
 2331  ~
 2332  ssh -p 64535 54.173.187.184
 2333  git commit -m "account var"
 2334  ./generate-cfn.sh && ./aws-cloudform.sh --account digital-nonprod --profile sl-digital-nonprod --category 003-iamaccess
 2335  ssh -p 64535 18.205.236.27\n
 2336  ssh -p 64536 3.80.211.243\n
 2337  ssh -p 64535 52.201.230.4\n\n
 2338  ./generate-cfn.sh && ./aws-cloudform.sh --account data-dev --profile sl-data-dev --category 003-iamaccess --skip-build
 2339  git commit -m "better like this"
 2340  aws iam create-role help
 2341  ./generate-cfn.sh && ./aws-cloudform.sh --account digital-nonprod --profile sl-digital-nonprod --category 002-iamprereqs
 2342  ./generate-cfn.sh && ./aws-cloudform.sh --account digital-nonprod --profile sl-digital-nonprod --category 002-iamprereqs --skip-build
 2343  ./generate-cfn.sh && ./aws-cloudform.sh --account digital-nonprod --profile sl-digital-nonprod --category 003-iamaccess --skip-build
 2344  git commit -m "fallback"
 2345  git commit -m "accessible to the big wild internet"
 2346  cd seloger/github/sl_docker-keycloak
 2347  ssh -i ~/.ssh/seloger/central-auth-keycloak-devjdx.pem centos@10.105.5.54
 2348  git checkout dev/jdx
 2349  aws ecr help
 2350  aws ecr describe-repositories
 2351  ssh -i ~/.ssh/seloger/central-auth-keycloak-devgln.pem centos@10.105.6.203
 2352  ./aws-cloudform.sh --account central-auth --profile sl-central-auth --category 001-keycloak --stack 003-asg-devjdx.yml --test
 2353  ssh -i ~/.ssh/seloger/central-auth-keycloak-devjdx.pem centos@10.105.6.82
 2354  ssh jdx@93.31.167.4
 2355  ssh-copy-id -i ~/.ssh/id_rsa.pub jdx@jdx-syno
 2356  ssh -i ~/.ssh/syno/privkey.pem jdx@jdx-syno
 2357  ssh -i ~/.ssh/syno/syno-ca-privkey.pem jdx@jdx-syno
 2358  head ~/pCloudDrive/docs/ws-seloger/notes/todo.txt
 2359  head -n100 ~/pCloudDrive/docs/ws-seloger/notes/todo.txt
 2360  ssh -i ~/.ssh/seloger/central-auth-keycloak-devgln.pem centos@10.105.5.100
 2361  ssh -i ~/.ssh/seloger/central-auth-keycloak-devjdx.pem centos@10.105.6.31
 2362  aws secretsmanager get-secret-value --secret-id central-auth-keycloak-secret --region=eu-west-1
 2363  aws secretsmanager get-secret-value --secret-id central-auth-keycloak-dev-secret --region=eu-west-1
 2364  aws secretsmanager get-secret-value --secret-id central-auth-keycloak-dev-secret --region=eu-west-1 | jq -r .SecretString\n | sed 's/\\//g' | jq -r .POSTGRES_USER)\n
 2365  aws secretsmanager get-secret-value --secret-id central-auth-keycloak-dev-secret --region=eu-west-1 | jq -r .SecretString | sed 's/\\//g' | jq -r .admin_pass)
 2366  JSON_CONF=aws secretsmanager get-secret-value --secret-id central-auth-keycloak-dev-secret --region=eu-west-1 | jq -r .SecretString | sed 's/\\//g'
 2367  JSON_CONF=${aws secretsmanager get-secret-value --secret-id central-auth-keycloak-dev-secret --region=eu-west-1 | jq -r .SecretString | sed 's/\\//g'^^}
 2368  JSON_CONF=$(aws secretsmanager get-secret-value --secret-id central-auth-keycloak-dev-secret --region=eu-west-1 | jq -r .SecretString | sed 's/\\//g'^^)
 2369  aws secretsmanager get-secret-value --secret-id central-auth-keycloak-dev-secret --region=eu-west-1 | jq -r .SecretString | sed 's/\\//g' 
 2370  var=aws secretsmanager get-secret-value --secret-id central-auth-keycloak-dev-secret --region=eu-west-1 | jq -r .SecretString | sed 's/\\//g'
 2371  VAR1=$(aws secretsmanager get-secret-value --secret-id central-auth-keycloak-dev-secret --region=eu-west-1 | jq -r .SecretString | sed 's/\\//g' | jq -r .admin_user)
 2372  VAR1=$(aws secretsmanager get-secret-value --secret-id central-auth-keycloak-dev-secret --region=eu-west-1 | jq -r .SecretString | sed 's/\\//g' | jq -r .admin_pass)
 2373  echo $VAR1
 2374  ./aws-cloudform.sh --account central-auth --profile sl-central-auth --category 001-keycloak --stack 003-asg-devjdx.yml
 2375  cd seloger/github/sl_ops-aws-security
 2376  git commit -m "set secret mgr"
 2377  ssh -i ~/.ssh/seloger/central-auth-keycloak-devjdx.pem centos@10.105.5.212
 2378  git commit -m "speedup cloudinit"
 2379  git merge dev/jdx
 2380  git fetch && git checkout clean/removeIp
 2381  git fetch && git checkout clean/removeIP
 2382  git merge clean/removeIP
 2383  git fetch && git checkout feat/Add_Datadog
 2384  git merge feat/Add_Datadog
 2385  git commit -m "fixes"
 2386  mv sl_ops-aws-security sl_security-keycloak-aws-infra
 2387  vim sl_security-keycloak-aws-infra/.git/config
 2388  mv sl_docker-keycloak sl_security-keycloak-docker
 2389  vim sl_security-keycloak-docker/.git/config
 2390  git branch -d clean/removeIP
 2391  git branch -d dev/gln
 2392  git branch -d dev/jdx
 2393  git branch -d feat/Add_Datadog
 2394  git branch -d feature/setup-keycloak
 2395  git commit -m "set env dev"
 2396  git commit -m "set dev circle pipeline"
 2397  git commit -m "docker env pattern"
 2398  vim sarace.sh
 2399  chmod +x sarace.sh
 2400  DOCKER_TAGNAME=latest-dev
 2401  export DOCKER_TAGNAME=latest-dev
 2402  ./sarace.sh
 2403  rm sarace.sh
 2404  git commit -m "update deploy ecr script"
 2405  git commit -m "dev/prod pattern"
 2406  rm -rf cfn/stacks/central/auth/003-iamaccess/ cfn/stacks/central/shared-services/003-iamaccess/ cfn/stacks/data/dev/003-iamaccess/ cfn/stacks/data/prod/003-iamaccess/ cfn/stacks/digital/nonprod/003-iamaccess/ cfn/stacks/digital/prod/003-iamaccess/
 2407  git commit -m "set security repos"
 2408  git commit -m "fix cfn_nag"
 2409  git commit -m "fix env var"
 2410  mv central-auth-keycloak-* ~/.ssh/seloger
 2411  rm central-auth-keycloak-devgln.pem central-auth-keycloak-devjdx.pem central-auth-keycloak.pem
 2412  sudo rm central-auth-keycloak-devgln.pem central-auth-keycloak-devjdx.pem central-auth-keycloak.pem
 2413  chmod 400 central-auth-keycloak-*
 2414  tree -a cfn
 2415  aws rds describe-db-engine-versions --engine aurora-postgresql --query "DBEngineVersions[].EngineVersion"
 2416  man ssh
 2417  git checkout -b feature/add-postgres
 2418  git push --set-upstream origin feature/add-postgres
 2419  cd seloger/github/sl_aws-base-infra
 2420  git checkout -b feature/remove-custom-rscs-centralauth
 2421  git commit -m 'remove custom rsc'
 2422  git push --set-upstream origin feature/remove-custom-rscs-centralauth
 2423  git merge feature/add-postgres
 2424  git commit -m "naming fix"
 2425  aws rds describe-db-engine-versions --engine aurora-postgresql --query 'DBEngineVersions[?contains(SupportedEngineModes,`provisioned`)]'
 2426  aws rds describe-db-engine-versions --engine aurora-postgresql --query 'DBEngineVersions[?contains(SupportedEngineModes,`provisioned`)].EngineVersion'
 2427  aws rds describe-db-engine-versions --engine aurora-postgresql --query 'DBEngineVersions[?contains(SupportedEngineModes,`provisioned`)].DBParameterGroupFamily'
 2428  cd seloger/github/sl_security-keycloak-aws-infra/
 2429  git checkout feature/add-postgres
 2430  git gp
 2431  git checkout FETCH_HEAD
 2432  git fetch && git checkout change/security-group-asg-elb
 2433  git commit -m "temporize"
 2434  git merge change/security-group-asg-elb
 2435  git commit -m "handle conflicts"
 2436  git checkout -b feature/full-iac-ok
 2437  InvalidParameterCombination
 2438  git push --set-upstream origin feature/full-iac-ok
 2439  git branch -d feature/remove-custom-rscs-centralauth
 2440  git branch -d change/security-group-asg-elb
 2441  \n\naws rds describe-db-engine-versions --engine aurora-postgresql --query 'DBEngineVersions[?contains(SupportedEngineModes,`provisioned`)].EngineVersion'\n\n
 2442  aws rds describe-db-engine-versions --engine aurora-postgresql --query 'DBEngineVersions[?contains(SupportedEngineModes,`provisioned`)]'\n\n
 2443  git commit -m "set instances types"
 2444  psql -h central-auth-keycloak-dev-postgres-cf-r-dbcluster-x6enxe3esq6w.cluster-cgzfsakdrrpm.eu-west-1.rds.amazonaws.com -p 5432 -U postgre -d postgres -W
 2445  git commit -m "add route53 for postgres"
 2446  echo -n | openssl s_client -connect ad.users.poliris.net:636 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' > ldapserver.pem
 2447  cat ldapserver.pem
 2448  nslookup teamcity.seloger.com
 2449  keytool -import -alias ad.users.poliris.net -keystore truststore.jks -file ldapserver.pem
 2450  cat truststore.jks
 2451  vim truststore.jks
 2452  vim pCloudDrive/docs/wescale/todo.txt
 2453  sudo dpkg -i rememberthemilk_1.1.13_amd64.deb
 2454  rm rememberthemilk_1.1.13_amd64.deb
 2455  git checkout feature/full-iac-ok
 2456  mv ~/Téléchargements/ldapserver.pem .
 2457  git commit -m "add truststore"
 2458  ssh -p 64535 34.228.254.90\n\n
 2459  ./aws-cloudform.sh --account central-shared-services --profile sl-central-shared-services --cfn-nag
 2460  cfn_nag --version
 2461  aws secretsmanager get-secret-value --secret-id central-auth-keycloak-${Env}-secret --region=eu-west-1 | jq -r .SecretString | sed 's/\\//g' | jq -r .admin_user
 2462  aws secretsmanager get-secret-value --secret-id central-auth-keycloak-dev-secret --region=eu-west-1 | jq -r .SecretString | sed 's/\\//g' | jq -r .admin_user
 2463  aws secretsmanager get-secret-value --secret-id central-auth-keycloak-dev-secret --region=eu-west-1 | jq -r .SecretString | sed 's/\\//g' | jq -r .admin_pass
 2464  keytool -import -alias ad.users.poliris.net -keystore ./src/opt/artefacts/truststore.jks -file ./src/opt/artefacts/ldapserver.pem
 2465  $(aws ecr get-login --no-include-email --region eu-west-1)
 2466  hadolint Dockerfile
 2467  docker run -d -e KEYCLOAK_USER=admin -e KEYCLOAK_PASSWORD=admin -p 80:8080 -p 443:8443 --name keycloak \\n            673277413506.dkr.ecr.eu-west-1.amazonaws.com/seloger/docker-keycloak:latest-dev
 2468  touch src/opt/artefacts/quel-boulot
 2469  docker run -d -e KEYCLOAK_USER=admin -e KEYCLOAK_PASSWORD=admin -p 80:8080 -p 443:8443 --name keycloak keycloak
 2470  docker logs -f keycloak
 2471  git commit -m "like before"
 2472  git commit -m "like before, with artefact"
 2473  git commit -m "add conf"
 2474  ls -la ./src/opt/artefacts
 2475  cat ./src/opt/jboss/artefacts/truststore.jks
 2476  git commit -m "should work"
 2477  docker build -t keycloak .
 2478  docker run -it -e KEYCLOAK_USER=admin -e KEYCLOAK_PASSWORD=admin -p 80:8080 -p 443:8443 --name keycloak keycloak
 2479  docker exec -it keycloak bash
 2480  nslookup ad.users.poliris.net
 2481  ping ad.users.poliris.net
 2482  sudo dpkg -i code_1.37.0-1565227985_amd64.deb
 2483  rm code_1.37.0-1565227985_amd64.deb
 2484  mv ~/Téléchargements/realm-export.json src/opt/jboss/artefacts
 2485  git commit -m "importe realm"
 2486  git commit -m "comment json because persisted on postgres"
 2487  git commit -m "set deploy with postgres"
 2488  ssh -i ~/.ssh/seloger/central-auth-keycloak-dev.pem centos@10.105.5.128
 2489  ssh -i ~/.ssh/seloger/central-auth-keycloak-dev.pem centos@10.105.5.115
 2490  ssh -i ~/.ssh/seloger/central-auth-keycloak-dev.pem centos@10.105.6.15
 2491  vim plop.sh
 2492  bash plop.sh
 2493  ssh -i ~/.ssh/seloger/central-auth-keycloak-dev.pem centos@10.105.5.93
 2494  git commit -m "fix userdata"
 2495  git merge feature/full-iac-ok
 2496  git branch -d feature/add-postgres
 2497  git branch -d feature/feature/full-iac-ok
 2498  git branch -d feature/full-iac-ok
 2499  history | grep sh
 2500  ssh -i ~/.ssh/seloger/central-auth-keycloak-dev.pem centos@10.105.4.111
 2501  git commit -m "add keepalive"
 2502  ssh -i ~/.ssh/seloger/central-auth-keycloak-dev.pem centos@10.105.4.29
 2503  ps aux | grep -i drive
 2504  cd .SynologyDrive
 2505  cd data
 2506  curl cheat.sh/unzip
 2507  unzip notes.zip note/
 2508  man unzip
 2509  unzip notes.zip -d notes/
 2510  rm source/notes.json
 2511  grep -nri vincent .
 2512  vim thoughts.txt
 2513  vim ./201908 thoughts.txt
 2514  vim ./201908\ thoughts.txt
 2515  grep -nri nathan .
 2516  vim ./201707\ thoughts.txt
 2517  watch -n1 'ps aux | grep -i drive'
 2518  sudo k3s-uninstall.sh
 2519  nslookup google.fr
 2520  ssh jdx@jdx-syno
 2521  ssh jdx@192.168.1.26 -p 2222
 2522  sudo vim /etc/hosts
 2523  ssh-copy-id -i ~/.ssh/id_rsa.pub jdx@jdx-syno-local -p 2222
 2524  ssh jdx@jdx-syno-local -p 2222 -v
 2525  ssh -i ~/.ssh/id_rsa jdx@jdx-syno-local -p 2222 -v
 2526  ssh -i ~/.ssh/id_rsa jdx@jdx-syno-local -p 2222
 2527  ssh -i ~/.ssh/id_rsa jdx@jdx-syno-local -p 2223
 2528  telnet
 2529  ssh-keygen -f "/home/jdx/.ssh/known_hosts" -R "[jdx-syno-local]:2222"
 2530  sh-keygen -f "/home/jdx/.ssh/known_hosts" -R "[jdx-syno-local]:2222"
 2531  rsync --help
 2532  ssh jdx@jdx-syno -p 2222
 2533  ssh-keygen -f "/home/jdx/.ssh/known_hosts" -R "[jdx-syno-local]:2223"
 2534  ssh jdx@jdx-syno-local -p 2222
 2535  nc -ct jdx-syno-local 23
 2536  ssh-copy-id -i ~/.ssh/id_rsa.pub -p 2223 jdx@jdx-syno-local
 2537  vim /home/jdx/.ssh/known_hosts
 2538  ls -la ~/.ssh
 2539  cd ~/.ssh
 2540  ssh -i ~/.ssh/seloger/central-auth-keycloak-dev.pem jdx@jdx-syno -p 2223
 2541  ping 10.7.34.75
 2542  git checkout -b feature/add-waf
 2543  git push --set-upstream origin feature/add-waf
 2544  cd pCloudDrive/docs
 2545  grep -nri "ps aux" .
 2546  grep -nri "dev/null" .
 2547  vim ./docs/ws-seloger/notes/tips.txt
 2548  vim get-aws-scripts.sh
 2549  grep -nri while get-aws-scripts.sh
 2550  grep -nri whle get-aws-scripts.sh
 2551  if grep -nri whle get-aws-scripts.sh; then echo "cool"; fi
 2552  if grep -nri whle get-aws-scripts.sh -nri while get-aws-scripts.sh; then echo "cool"; fi
 2553  man grep
 2554  if grep -nriL whle get-aws-scripts.sh; then echo "cool"; fi
 2555  if grep -nriL whle get-aws-scripts.sh; then echo "cool" >> test; fi
 2556  if grep -nriL while get-aws-scripts.sh; then echo "cool"; fi
 2557  if grep -nri while get-aws-scripts.sh; then echo "cool"; fi
 2558  if grep -nri while get-aws-scripts.sh; then echo "cool"; else echo "pas cool"; fi
 2559  if grep -nriL while get-aws-scripts.sh; then echo "cool"; else echo "pas cool"; fi
 2560  if grep -nriL whle get-aws-scripts.sh; then echo "cool"; else echo "pas cool"; fi
 2561  git commit -m "keep alive reinforcement and some cool apps"
 2562  ssh -i ~/.ssh/seloger/central-auth-keycloak-dev.pem centos@10.105.6.81
 2563  git commit -m "avoid exit uselessly"
 2564  git checkout -b feature/add-redundancy
 2565  git push --set-upstream origin feature/add-redundancy
 2566  cd seloger/github/sl_security-keycloak-docker
 2567  git commit -m "add new clis for keycloak"
 2568  git commit -m 'add standalone-ha'
 2569  rsync -h
 2570  vimbackup-jdx-wsc-laptop.sh
 2571  vim backup-jdx-wsc-laptop.sh
 2572  cd dev/scripts/
 2573  cat backup-jdx-wsc-laptop.sh
 2574  ./backup-jdx-wsc-laptop.sh
 2575  sudo pkill -f rsync
 2576  ps aux | grep rsync
 2577  vim /home/jdx/dev/scripts/backup-jdx-wsc-laptop.sh
 2578  cd /home/jdx/dev/scripts/
 2579  vim backup-jdx-wsc-laptop.log
 2580  vim /etc/init.d/anacron
 2581  tail -f dev/scripts/backup-jdx-wsc-laptop.log
 2582  watch uptime
 2583  tail -f ~/dev/scripts/backup-jdx-wsc-laptop.log
 2584  anacron -f
 2585  git checkout -b feature/set-caas-rights
 2586  git push --set-upstream origin feature/set-caas-rights
 2587  git commit -m "set laas rights"
 2588  vim /var/mail
 2589  git commit -m "delimiter s3"
 2590  git commit -m "add kinesis"
 2591  cd ~/.ssh/seloger
 2592  cat central-auth-keycloak-dev.pem
 2593  cat central-auth-keycloak-prod.pem
 2594  git branch -d feature/set-caas-rights
 2595  ssh -i ~/.ssh/seloger/central-auth-keycloak-dev.pem centos@10.105.6.65
 2596  git commit -m "set 2 instance and ntp"
 2597  ssh -i ~/.ssh/seloger/central-auth-keycloak-dev.pem centos@10.105.4.74
 2598  bash ~/dev/scripts/backup-jdx-wsc-laptop.sh
 2599  git commit -m "add labels"
 2600  echo $CURRENT_IPS[0]
 2601  echo $CURRENT_IPS | cut -d" " -f1
 2602  echo $CURRENT_IPS | cut -d" " -f2
 2603  echo $(hostname -I) | cut -d" " -f2
 2604  echo $($(hostname -I) | cut -d" " -f2)
 2605  TOTO=$(hostname -I) | cut -d" " -f2);echo $TOTO
 2606  TOTO=($(hostname -I) | cut -d" " -f2));echo $TOTO
 2607  TOTO=$($(hostname -I) | cut -d" " -f2));echo $TOTO
 2608  TOTO=`$(hostname -I) | cut -d" " -f2`;echo $TOTO
 2609  TOTO=$(hostname -I) | cut -d" " -f2;echo $TOTO
 2610  export CURRENT_IPS=$(hostname -I)
 2611  export CURRENT_IPS=$(hostname -I | cut -d" " -f1)
 2612  echo $CURRENT_IPS
 2613  hostname -I
 2614  export CURRENT_IP=$(hostname -I | cut -d" " -f1)
 2615  echo $CURRENT_IP
 2616  git commit -m "update userdata"
 2617  git commit -m "add stickyness"
 2618  pws
 2619  git checkout feature/add-redundancy
 2620  ssh -i ~/.ssh/seloger/central-auth-keycloak-dev.pem centos@10.105.4.177
 2621  ssh -i ~/.ssh/seloger/central-auth-keycloak-dev.pem centos@10.105.6.76
 2622  docker run -d --name datadog-agent \\n           -e DD_API_KEY=daa3667ab9d474efff98c35a00e5fccb \\n           -e DD_LOGS_ENABLED=true \\n           -e DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL=true \\n           -e DD_AC_EXCLUDE="name:datadog-agent" \\n           -v /var/run/docker.sock:/var/run/docker.sock:ro \\n           -v /proc/:/host/proc/:ro \\n           -v /opt/datadog-agent/run:/opt/datadog-agent/run:rw \\n           -v /sys/fs/cgroup/:/host/sys/fs/cgroup:ro \\n           datadog/agent:latest
 2623  \n\ndocker run -it --name python python:3.7.3-slim sh\n\n
 2624  docker logs -f datadog-agent
 2625  git commit -m "add datadog"
 2626  nslookup central-ALB-1QC5EA2M3XHP3-1214462348.eu-west-1.elb.amazonaws.com
 2627  git commit -m "allow scale up"
 2628  git merge feature/add-redundancy
 2629  git branch -d feature/add-redundancy
 2630  docker stop -t0 python
 2631  docker stop -t0 datadog-agent
 2632  docker rm python
 2633  docker rm datadog-agent
 2634  docker system prune -f
 2635  cat ~/dev/scripts/backup-jdx-wsc-laptop.sh
 2636  cat ~/dev/scripts/backup-jdx-wsc-laptop.log
 2637  sudo dpkg -i synology-cloud-station-backup-4437.x86_64.deb
 2638  cat dev/scripts/backup-jdx-wsc-laptop.
 2639  cat dev/scripts/backup-jdx-wsc-laptop.sh
 2640  rm *
 2641  ssh jdx@jdx-syno -p 2223
 2642  ps aux | grep -i cloud-station
 2643  ps aux | grep -i cloud-ui
 2644  ps aux | grep cloud
 2645  ps aux | grep -i cloud
 2646  apt search cloud-station
 2647  apt remove -y synology-cloud-station-backup --purge
 2648  sudo apt remove -y synology-cloud-station-backup --purge
 2649  sudo dpkg -i synology-drive-client-11050.x86_64.deb
 2650  git fetch && git checkout feature/add_rights_for_project_servicecatalog
 2651  ssh -i ~/.ssh/seloger/central-auth-keycloak-dev.pem centos@10.105.6.35
 2652  ssh -p 64535 54.87.45.103\n\n
 2653  git commit -m "add ports for infinispan"
 2654  git checkout -b feature/add-postgres-serverless
 2655  git push --set-upstream origin feature/add-postgres-serverless
 2656  ssh -i ~/.ssh/seloger/central-auth-keycloak-dev.pem centos@10.105.5.19
 2657  git commit -m "postgres client v10"
 2658  cat ~/.bashrc
 2659  cat ~/pCloudDrive/docs/jdx/notes/tips.txt
 2660  vim ~/dev/scripts/backup-jdx-wsc-laptop.sh
 2661  chmod +x backup-jdx-wsc-laptop.sh
 2662  mv backup-jdx-wsc-laptop.sh rsync-local-pc.sh
 2663  mv rsync-local-pc.sh rsync-to-nas.sh
 2664  vim pCloudDrive/dev/slides/2018-devoxx-nomad/media_training.txt
 2665  rm backup-jdx-wsc-laptop.log
 2666  cat rsync-to-nas.log
 2667  man rsync
 2668  ping gateways.storage.gra7.cloud.ovh.net
 2669  scp synology-cloud-station-backup-4437.x86_64.deb pca@gateways.storage.gra7.cloud.ovh.net/jdx-syno-ds218play
 2670  scp synology-cloud-station-backup-4437.x86_64.deb pca@gateways.storage.gra7.cloud.ovh.net/
 2671  scp synology-cloud-station-backup-4437.x86_64.deb pca@gateways.storage.gra7.cloud.ovh.net/bkp
 2672  scp synology-cloud-station-backup-4437.x86_64.deb pca@gateways.storage.gra7.cloud.ovh.net/bkp/
 2673  scp synology-cloud-station-backup-4437.x86_64.deb pca@gateways.storage.gra7.cloud.ovh.net/jdx-syno-ds218play/
 2674  scp synology-cloud-station-backup-4437.x86_64.deb pca@gateways.storage.gra7.cloud.ovh.net/jdx-syno-ds218play/archive.deb
 2675  nslookup gateways.storage.gra7.cloud.ovh.net
 2676  rsync -av synology-cloud-station-backup-4437.x86_64.deb pca@gateways.storage.gra7.cloud.ovh.net/jdx-syno-ds218play/bkp/synology-drive-client-11050.x86_64.deb
 2677  scp synology-cloud-station-backup-4437.x86_64.deb pca@gateways.storage.gra7.cloud.ovh.net/jdx-syno-ds218play/bkp/archive.deb
 2678  rsync -av synology-cloud-station-backup-4437.x86_64.deb pca@gateways.storage.gra7.cloud.ovh.net/jdx-syno-ds218play
 2679  rsync -av synology-cloud-station-backup-4437.x86_64.deb pca@gateways.storage.gra7.cloud.ovh.net/jdx-syno-ds218play/bkp
 2680  rsync -av synology-cloud-station-backup-4437.x86_64.deb pca@gateways.storage.gra7.cloud.ovh.net/jdx-syno-ds218play/bkp/
 2681  rsync -av synology-cloud-station-backup-4437.x86_64.deb pca@gateways.storage.gra7.cloud.ovh.netjdx-syno-ds218play:out.deb
 2682  rsync -av synology-cloud-station-backup-4437.x86_64.deb pca@gateways.storage.gra7.cloud.ovh.net/jdx-syno-ds218play:out.deb
 2683  rsync -av synology-cloud-station-backup-4437.x86_64.deb pca@gateways.storage.gra7.cloud.ovh.netjdx-syno-ds218play/out.deb
 2684  scp pca@gateways.storage.gra7.cloud.ovh.net/jdx-syno-ds218play/bkp/synology-drive-client-11050.x86_64.deb .
 2685  scp pca@gateways.storage.gra7.cloud.ovh.net:jdx-syno-ds218play/bkp/synology-drive-client-11050.x86_64.deb .
 2686  scp pca@gateways.storage.gra7.cloud.ovh.net:jdx-syno-ds218play/bkp/synology-drive-client-11050.x86_64.deb in.deb
 2687  scp pca@gateways.storage.gra7.cloud.ovh.net:jdx-syno-ds218play/synology-drive-client-11050.x86_64.deb in.deb
 2688  mkdir in
 2689  cd in
 2690  scp pca@gateways.storage.gra7.cloud.ovh.net:jdx-syno-ds218play/ .
 2691  yum search sspass
 2692  apt search sspass
 2693  apt search sshpass
 2694  l | grep ssh
 2695  scp -r sshpass-1.06 jdx@jdx-syno-local:~/downloads
 2696  scp -r sshpass-1.06 jdx@jdx-syno-local:~/downloads -p2223
 2697  scp -r sshpass-1.06 jdx@jdx-syno-local:~/downloads -p 2223
 2698  scp -R -p 2223 sshpass-1.06 jdx@jdx-syno-local:~/downloads 
 2699  scp -r -p 2223 sshpass-1.06 jdx@jdx-syno-local:~/downloads -v
 2700  scp -r -p 2223 sshpass-1.06 jdx@jdx-syno-local:~/downloads
 2701  scp -r -p 2223 sshpass-1.06/ jdx@jdx-syno-local:~/downloads
 2702  scp -r -p 2223 sshpass-1.06/ jdx@jdx-syno-local:downloads/
 2703  scp -r -P 2223 sshpass-1.06/ jdx@jdx-syno-local:downloads/
 2704  scp test pca@gateways.storage.gra7.cloud.ovh.net:jdx-syno-ds218play/
 2705  l | grep test
 2706  vim te
 2707  scp test pca@gateways.storage.gra7.cloud.ovh.net:jdx-syno-ds218play/test
 2708  scp test pca@gateways.storage.gra7.cloud.ovh.net:jdx-syno-ds218play/bkp/test
 2709  scp test pca@gateways.storage.gra7.cloud.ovh.net:jdx-syno-ds218play/bkp/\n4549631252844562.E8yMb53AarWc.masqkRR3RGCcsc5Ah2NtDqczsVCzeqk2\n
 2710  scp test pca@gateways.storage.gra7.cloud.ovh.net:jdx-syno-ds218play/bkp/
 2711  mkdir testdir
 2712  mv test testdir
 2713  cp testdir/test testdir/test2
 2714  rsync --delete -rtlHp --progress testdir/ pca@gateways.storage.gra7.cloud.ovh.net:jdx-syno-ds218play/bkp/
 2715  4549631252844562.E8yMb53AarWc.masqkRR3RGCcsc5Ah2NtDqczsVCzeqk2 | rsync --delete -rtlHp --progress testdir/ pca@gateways.storage.gra7.cloud.ovh.net:jdx-syno-ds218play/bkp/
 2716  echo "4549631252844562.E8yMb53AarWc.masqkRR3RGCcsc5Ah2NtDqczsVCzeqk2" | rsync --delete -rtlHp --progress testdir/ pca@gateways.storage.gra7.cloud.ovh.net:jdx-syno-ds218play/bkp/
 2717  yes
 2718  cat ~/dev/scripts/rsync-to-nas.log
 2719  traceroute -q1 google.com | xclip -sel clip
 2720  traceroute -q1 google.com
 2721  traceroute-mapper google.com
 2722  ssh jdx@jdx-syno-local -p 2223
 2723  vim dev/scripts/rsync-to-nas.sh
 2724  vim pCloudDrive/docs/jdx/notes/tips.txt
 2725  sudo dpkg -i Todoist_1.17.0_amd64.deb
 2726  aws configure --profile jdxlabs
 2727  ssh -i ~/.ssh/jlabs-pp-eu-west-1.pem ec2-user@63.35.193.57
 2728  ssh -i ~/.ssh/seloger/central-auth-keycloak-dev.pem centos@10.105.4.66
 2729  ssh -i ~/.ssh/seloger/central-auth-keycloak-dev.pem centos@10.105.6.9
 2730  cd ../sl_aws-base-infra
 2731  git commit -m "cloudformation aurora serverless"
 2732  git commit -m "fix condition"
 2733  cat ~/pCloudDrive/docs/ws-seloger/notes/todo.txt
 2734  head -n200 ~/pCloudDrive/docs/ws-seloger/notes/todo.txt
 2735  git commit -m "merge master to develop"
 2736  git checkout -b feature/up-lambda-version
 2737  git commit -m "update lambda version"
 2738  git push --set-upstream origin feature/up-lambda-version
 2739  cd seloger/github/sl_security-keycloak-aws-infra
 2740  git commit -m "fix scaling conf"
 2741  ./aws-cloudform.sh --account central-auth --profile sl-central-auth --category 001-keycloak-dev --stack 001-postgres-serverless.yml
 2742  git commit -m "serverless up"
 2743  docker run -d \\n    -e KEYCLOAK_USER=admin \\n    -e KEYCLOAK_PASSWORD="3uu~aL:6d3c+//f" \\n    -p57600:57600 -p7600:7600 -p 443:8443 \\n    --name keycloak \\n    -e JDBC_PARAMS='connectTimeout=30' \\n    -e DB_VENDOR=postgres \\n    -e DB_ADDR="kc-dev-aurora-serverless-test.cluster-cgzfsakdrrpm.eu-west-1.rds.amazonaws.com" \\n    -e DB_PORT=5432 \\n    -e DB_USER=postgre \\n    -e DB_PASSWORD="?KM)z6TDZep2P(r3" \\n    -e DB_DATABASE=keycloak \\n    -e JGROUPS_DISCOVERY_EXTERNAL_IP=10.105.6.149 \\n    -e KEYCLOAK_LOGLEVEL=INFO \\n    --label organization=seloger \\n    --label environment=dev \\n    --label application=keycloak \\n    --label team=security \\n    --label dataClassification=confidential \\n    --label taggingVersion=1.0.0 \\n    --label createdBy=circleci \\n    --label createdOn=2019-08-13T00:00:00 \\n    673277413506.dkr.ecr.eu-west-1.amazonaws.com/seloger/docker-keycloak:latest-dev
 2744  ssh-keygen -f "/home/jdx/.ssh/known_hosts" -R "10.105.5.12"
 2745  rm ~/pCloudDrive/docs/ws-seloger/notes/:
 2746  l ~/pCloudDrive/docs/ws-seloger/notes/
 2747  tail -n120 ~/pCloudDrive/docs/ws-seloger/notes/task-notes/SEC-105_keycloak.txt
 2748  man scp
 2749  scp -i ~/.ssh/seloger/central-auth-keycloak-dev.pem centos@10.105.5.12:2019-08-23_dump_keycloak-dev.tar .
 2750  git commit -m "set pause time at autoscaling"
 2751  git checkout feature/add-postgres-serverless
 2752  git merge feature/add-postgres-serverless
 2753  cd ../sl_security-keycloak-docker
 2754  ssh -i ~/.ssh/seloger/central-auth-keycloak-dev.pem centos@10.105.4.106
 2755  ssh -i ~/.ssh/seloger/central-auth-keycloak-dev.pem centos@10.105.4.33
 2756  git branch -d feature/add-postgres-serverless
 2757  git checkout -b feature/fix-infinispan
 2758  git push --set-upstream origin feature/fix-infinispan
 2759  ssh -i ~/.ssh/seloger/central-auth-keycloak-dev.pem centos@10.105.5.12
 2760  git commit -m "take a break with infinispan"
 2761  ./aws-cloudform.sh --account central-auth --profile sl-central-auth --category 001-keycloak-dev --stack 002-asg.yml
 2762  rm dev/tmp/notes_keycloak.txt
 2763  cd .sec/seloger/
 2764  ./forti-vpn
 2765  aws configure --profile testpb
 2766  aws sts assume-role --role-arn arn:aws:iam::220766614489:role/testpb
 2767  export AWS_SECRET_ACCESS_KEY=/1FLRz5tGf9B1kLxQnkHt2f6STYvoOFV7/Dma8AL
 2768  export AWS_SESSION_TOKEN=FQoGZXIvYXdzEK7//////////wEaDK8ynNhfKgRSMYlL6iLoAQhXKttZOxsdNoLxh46KeI3RSs5B4OuyX1XWwkBSOFjTGptmynlRiCZnoBY8SD+Z6v4cWoovDlYnyd/twWysIznQsV+zZPseV8uqBZxJaT2MuODD5RTQ8j/N+6j7dxhFz7P4H2K8JrXpZ6o5x4fu3GFl3bpp8Pr9hq4TbGId6W9IBUt2yp8H5ezn6fuZyHSDCi0twPjA4IoUK5HPK43yJExuHyjgOC2QWE5XZyAROnuSDL7JJgKYmnB2l6aw+1Quf7F+cRGQ3uN/djg6NbV5tLZkuFo73vlSKIe1Jn3DHEPQQrjHqP2jd20oo7CP6wU=
 2769  aws lambda help
 2770  export AWS_ACCESS_KEY_ID=ASIATGZVXGPMRIML5CFK
 2771  export AWS_ACCESS_KEY_ID=ASIATGZVXGPMWQ6RA7MH
 2772  export AWS_SECRET_ACCESS_KEY=Dyg56lF51AWMM4PdtaBzR+K+c/GQO4LRji8kUDtO
 2773  export AWS_SESSION_TOKEN=FQoGZXIvYXdzELD//////////wEaDKoreay4CGWCzct1bSLoAWScXdrIW2ud2O7YzY/TX7KHxBh9a2qlimyastlszACyvumsSCkCJTXbsd5KfzVKJ08SqB8lZG8VRHgZ+zQlSzmZfJotGsHe0zvY0x6J5lngGpzygXgsnjdqrnu8nGMfpKuR9Hat+rDXLnPNEVNNDYvu7iho7p0BwxnUk0QEkm+C0N1gB0+vzsg2m643JYFT5DpKpt4JlsAV5py8DZMvY0RUjTbeagJo7esROXMk5/iE8zRUr0IMt+Wj+nkfkrEUFtgygk8++sy2r3za+7TOuij6cWR3Ep0Huy5lrPrdpa4k3HTB+UQ2v7Qo09uP6wU=
 2774  cd dev/www/flat/test_lambda_boundary
 2775  aws cloudformation create-stack --stack-name testpb-lambda --template-body file://./template.yml
 2776  vim script.py
 2777  python script.py
 2778  aws cloudformation update-stack --stack-name testpb-lambda --template-body file://./template.yml --capabilities "CAPABILITY_IAM"
 2779  export AWS_ACCESS_KEY_ID=ASIATGZVXGPM6X73QFIS
 2780  export AWS_SECRET_ACCESS_KEY=ldDgxP1aK+EcrvZN6VzJQhk2g+IJj265HexOoTAE
 2781  export AWS_SESSION_TOKEN=FQoGZXIvYXdzELH//////////wEaDMVTnFvIFlaEejckiSLoAf1Qf4NVDDE3pIFKnl1oor78eT03q7sjbiJvPZQY4IsPOYpppNR+D7tKL8Lx1mKbbrX6ErUh5q/vmrTgihZVgrWRFmDcyaKPLrePzoGIlWNicXI+CCua7KeeYRqXdJRz+g88sg4uFnC4W8VWhwvr9gBlLT1wVikhKnRVUgUIdtYZyzWdWlQBO03bFfqJAfqEvk4ahvk7Cu2aLjEnGINvKWl6bT7SHs5snFsnvEj+fk9wqHqr817YNBSV8nmIKmH6+yEz0gpGAkNKyWf00YM3fRJYGdOjkuAOANtV3CxzY+/0hOaexTx5rncotIGQ6wU=
 2782  aws cloudformation create-stack --stack-name testpb-lambda --template-body file://./template.yml --capabilities "CAPABILITY_IAM"
 2783  export AWS_PROFILE=testpb
 2784  aws sts assume-role --role-arn arn:aws:iam::220766614489:role/testpb --role-session-name osef
 2785  export AWS_ACCESS_KEY_ID=ASIATGZVXGPMYN3L57ZY
 2786  export AWS_SECRET_ACCESS_KEY=Xj90urLSDPE/3mNYLmabO5Y53yML8mJdqWpA5T+F
 2787  export AWS_SESSION_TOKEN=FQoGZXIvYXdzELL//////////wEaDGcNwpLy6XtAerYokSLoAXDVIC0dSxKziKQheHdFZanpu12z68h8BMzeA99GgOFS4SfgBKEqZBHbfRJU4IaDFWuTqWeI04Y5MbZT/oXDVk7AM92oeQQR/eD4wsgh2aPSfrjGmfRNT5hQ0TH79M+PmKU2VPCZv//I+I1glV28WkbuvJ64KEX9TBZi6jdZ2M5EOV9zGYRh+1l2uWse6EljLhzgoVqqqcCs/rp2MFF+ago9Bk6SGTgR9bnm9CKfmhTzAnRkZd9pkonm/peQYbAj0cPWP/d2rmRJfkDbIuxsFfMCKy0b38znAYlfnZTFETOY34QJYaaG9xEoq5+Q6wU=
 2788  aws cloudformation create-stack --stack-name testpb-lambda --template-body file://./template.yml --capabilities "CAPABILITY_NAMED_IAM"
 2789  aws waf-regional help
 2790  aws waf-regional list-web-acls
 2791  curl https://keycloak-dev.auth.groupeseloger.tools/
 2792  git commit -m "add waf blacklist"
 2793  git commit -m "set the path rule for the waf"
 2794  git checkout feature/add-waf
 2795  git merge feature/add-waf
 2796  git branch -d feature/add-waf
 2797  git checkout -b feature/alb-rule-protect
 2798  git push --set-upstream origin feature/alb-rule-protect
 2799  curl https://keycloak-dev.auth.groupeseloger.tools
 2800  git commit -m "set 2 instances"
 2801  git commit -m "just a test"
 2802  ./aws-cloudform.sh --account central-auth --profile sl-central-auth --category 001-keycloak-dev --stack 002-asg.yml --skip-build
 2803  git checkout -b feature/iac-user-access
 2804  git push --set-upstream origin feature/iac-user-access
 2805  vim pCloudDrive/docs/jdx/notes/todo.txt
 2806  rm -rf ./.config/goa-1.0/accounts.conf
 2807  rm -rf ./.config/evolution
 2808  rm -rf ./.local/share/evolution
 2809  vim pCloudDrive/docs/ws-seloger/notes/todo.txt
 2810  git fetch && git checkout feature/add-iam-GetRole-laas
 2811  cd pCloudDrive/dev
 2812  cd dev/backups
 2813  cd 2019-wsc-mac
 2814  cd dev
 2815  rm -r progs/google-cloud-sdk
 2816  find . -name ".git" -type d -exec rm -rf {} \;
 2817  rm -r tmp/cdk-aws
 2818  find . -name ".DS_Store" -type f -exec rm -f {} \;
 2819  find . -name "*node_modules*" -type d
 2820  find . -name "node_modules" -type d -exec rm -rf {} \;
 2821  touch pCloudDrive/docs/jdx/prjs-immo/TODO
 2822  ssh -p 64536 3.83.251.160\n
 2823  git branch -d feature/fix-rights-adama
 2824  git branch -d feature/IAM-dynatrce
 2825  git branch -d feature/add-conditions
 2826  git branch -d feature/add-iam-GetRole-laas
 2827  git branch -d feature/update-laas
 2828  git branch -d feature/up-lambda-version
 2829  git branch -d feature/add_rights_for_project_servicecatalog
 2830  git branch -d feature/add-octopus-keyrotator
 2831  git checkout feature/add-permission-boundaries
 2832  git branch -d feature/add-permission-boundaries
 2833  git branch -D feature/add-permission-boundaries
 2834  git fetch && git checkout feature/add-human-users
 2835  git checkout feature/add-human-users
 2836  cd ../sl_security-keycloak-aws-infra
 2837  git branch -d
 2838  git branch -d feature/fix-infinispan
 2839  git branch -d feature/iac-user-access
 2840  git checkout feature/alb-rule-protect
 2841  git checkout -b feature/core-iam-rights
 2842  git push --set-upstream origin feature/core-iam-rights
 2843  git checkout -b develop
 2844  git push --set-upstream origin develop
 2845  git commit -m "set users skeletton"
 2846  git commit -m "handle iam users separately"
 2847  git branch -d https://github.com/axel-springer-kugawana/sl_security-aws-iam-users
 2848  git branch -d feature/add-human-users
 2849  git commit -m "fix groupname"
 2850  git commit -m "create users"
 2851  vim pCloudDrive/docs/companies/wescale/notes/todo.txt
 2852  vim pCloudDrive/docs/companies/wescale/todo.txt
 2853  im /etc/hosts
 2854  ssh-keygen -f "/home/jdx/.ssh/known_hosts" -R "192.168.1.57"
 2855  ssh recalbox@192.168.1.57
 2856  ssh-copy-id -i ~/.ssh/id_rsa.pub root@192.168.1.57
 2857  sudo mkdir -p /media/jdx/recalbox6
 2858  sudo sshfs -o allow_other root@192.168.1.57:/recalbox/share /media/jdx/recalbox6
 2859  cd /media/jdx/recalbox6/roms/gba
 2860  unzip scraper_linux_amd64.zip
 2861  mv scraper ~/.local/bin
 2862  scraper
 2863  rm scraper_linux_amd64.zip
 2864  rm LICENSE.txt
 2865  cd ../snes
 2866  cd ../nes
 2867  cd ../megadrive
 2868  scraper -console_src ss -append
 2869  sudo fusermount -u /media/jdx/recalbox6
 2870  l /media/jdx/recalbox6/roms/
 2871  cd ../scripts
 2872  cat rsync-to-nas.
 2873  cat rsync-to-nas.sh
 2874  cat /etc/host
 2875  cat /etc/hosts
 2876  ssh root@192.168.1.57
 2877  ssh jdx-admin@jdx-syno-local -p 2223
 2878  apt search libpam-google-authenticator
 2879  oathtool --totp --base32 $TOTP_KEY_ROOT_JDEVOUCOUX
 2880  export AWS_PROFILE=aws-jdwescale
 2881  export AWS_PROFILE=jdxlabs-jerome
 2882  vim pCloudDrive/docs/notes/todo.txt
 2883  vim pCloudDrive/docs/companies/ws-seloger/notes/todo.txt
 2884  vim pCloudDrive/notes/_old/todo-jdxlabs.txt
 2885  cd seloger/github/sl_security-aws-iam-users
 2886  ./aws-cloudform.sh --account digital-nonprod --category 001-iamuserstools --stack 001-boundaries.yml
 2887  ./aws-cloudform.sh --account digital-nonprod --profile sl-digital-nonprod --category 001-iamuserstools --stack 001-boundaries.yml
 2888  git commit -m "add deeloper boundary"
 2889  cd seloger/github
 2890  git commit -m "set permissions boundary for bd dev"
 2891  cd seloger/github/sl_ops-aws-iam
 2892  git checkout -b feature/update-caas-rights
 2893  git push --set-upstream origin feature/update-caas-rights
 2894  git commit -m "update s3 rights for bd"
 2895  apt search sublime-merge
 2896  cd github
 2897  git clone git@github.com:jdxlabs/jdxlabs-website.git
 2898  git clone git@github.com:jdxlabs/jdxlabs-website-infra.git
 2899  mkdir external
 2900  ln -s ~/pCloudDrive/codebase codebase
 2901  cd codebase
 2902  cd recipes-infra
 2903  mkdir terraform
 2904  python3
 2905  pip install --uprgrade troposphere
 2906  pip install troposphere
 2907  cd dev/www/external
 2908  git clone git@github.com:cloudtools/troposphere.git
 2909  grep -nri "class Tags(AWSHelperFn):" .
 2910  cd ./.local/lib/python3.7/site-packages/troposphere/
 2911  pip install --upgrade troposphere
 2912  pip remove --user troposphere
 2913  pip uninstall --user troposphere
 2914  pip uninstall troposphere
 2915  pip version
 2916  pip --version
 2917  vim .pypirc
 2918  l | grep pip
 2919  vim .pip
 2920  vim .pip/pip.conf
 2921  pip install --user --upgrade pip
 2922  pip install --upgrade --user troposphere
 2923  vim ~/.local/lib/python3.7/site-packages/troposphere/iam.py
 2924  git commit -m "it works"
 2925  git commit -m "fix deploy"
 2926  pip install --user troposphere
 2927  ./aws-cloudform.sh --account digital-nonprod --profile sl-digital-nonprod --cfn-nag
 2928  git commit -m "cfn-nag update"
 2929  git commit -m "remove central auth rscs"
 2930  git commit -m "set boundary"
 2931  aws configure --profile test-osef
 2932  mkdir lambda_create
 2933  cd test_iam_rights
 2934  export AWS_PROFILE=testosef
 2935  export AWS_PROFILE=test-osef
 2936  ./s3_put_notif.py
 2937  chmod +x s3_put_notif.py
 2938  python ./s3_put_notif.py
 2939  ./generate-cfn-users.sh && ./aws-cloudform.sh --account central-auth --profile sl-central-auth
 2940  cd .sec/seloger
 2941  cd forti-vpn
 2942  git commit -m "features [skip ci]"
 2943  git checkout -b feature/refacto-rights
 2944  git push --set-upstream origin feature/refacto-rights
 2945  git commit -m "add bd rights"
 2946  ./aws-cloudform.sh 
 2947  git commit -m "update s3 for bd"
 2948  git commit -m "add boundary for bd"
 2949  git commit -m "update idp name"
 2950  git branch -d develop
 2951  git commit -m "set features instead develop"
 2952  git checkout -b feature/create-pattern-with-apps
 2953  git push --set-upstream origin feature/create-pattern-with-apps
 2954  cat ~/.kube/config
 2955  touch tasks/wescale/2019-2020_goals.txt
 2956  git commit -m "link the role to managed policy, for bd only"
 2957  ./generate-cfn.sh  && ./aws-cloudform.sh --account digital-nonprod --profile sl-digital-nonprod
 2958  git checkout features
 2959  ./generate-cfn-users.sh --clean
 2960  git commit -m "fix generate script to work with central auth"
 2961  git commit -m "update bd rights for poc"
 2962  ./generate-cfn.sh  && ./aws-cloudform.sh --account digital-nonprod --profile sl-digital-nonprod --category 001-tools
 2963  ./generate-cfn.sh  && ./aws-cloudform.sh --account digital-nonprod --profile sl-digital-nonprod --category 002-iamaccess --stack 008-bellesdemeures.yml
 2964  python scripts/iam-users-tools/v1/print_keycloak_users_to_link.py
 2965  python scripts/iam-users-tools/v1/print_keycloak_users.py
 2966  python scripts/iam-users-tools/v1/print_keycloak_users_links.py
 2967  git commit -m "add script to get resources to generate on keycloak"
 2968  ./generate-cfn.sh  && ./aws-cloudform.sh --account digital-nonprod --profile sl-digital-nonprod --cfn-nag | grep Fail
 2969  /aws-cloudform.sh --account digital-nonprod --profile sl-digital-nonprod --cfn-nag | grep Fail
 2970  ./generate-cfn.sh  && ./aws-cloudform.sh --account digital-nonprod --profile sl-digital-nonprod --test
 2971  infra-builder-aws -infra-builder-gcp infra-builder-azure infra-builder-scaleway
 2972  ./infra-builder-aws.sh
 2973  ./infra-builder-gcp.sh
 2974  ./infra-builder-scaleway.sh
 2975  ./infra-builder-aws.sh --help
 2976  grep -nri flash .
 2977  vim ./tasks/jdxlabs/tips.txt
 2978  cp README.md README.md.bkp
 2979  cp README.md Workshop01-Terraform
 2980  cp README.md Workshop02-Ansible-Terraform
 2981  cp README.md Workshop03-Bastion
 2982  cp README.md Workshop04-ElasticSearch
 2983  cp README.md Workshop05
 2984  cp README.md Workshop05-Consul
 2985  cp README.md Workshop06-Prometheus
 2986  cp README.md Workshop07-Docker
 2987  cp README.md Workshop08-Nomad
 2988  cp README.md Workshop09-Vault
 2989  cp README.md Workshop10-Graylog
 2990  git commit -m "separate instructions by workshops"
 2991  pip install --user ansible
 2992  terraform 0.12upgrade terraform/main/main.tf
 2993  terraform 0.12upgrade terraform/main/
 2994  terraform 0.12upgrade --yes
 2995  terraform 0.12upgrade --yes ./terraform
 2996  terraform 0.12upgrade --yes ./terraform/main
 2997  terraform 0.12upgrade -force -yes ./terraform
 2998  ansible-playbook plays/build.yml -e layer_name=main\n
 2999  cat env-ssh.cfg
 3000  cat ~/.ssh/sandbox-aws-jd
 3001  ssh-keygen 
 3002  ping 
 3003  ssh -i ~/.ssh/sandbox-aws-jd admin@54.194.93.76
 3004  vim ~/.ssh/sandbox-aws-jd
 3005  vim ~/.ssh/sandbox-aws-jd.pub
 3006  cat ~/.ssh/sandbox-aws-jd.pub
 3007  ping 54.194.93.76
 3008  ping 34.242.219.106
 3009  ssh -i ~/.ssh/sandbox-aws-jd
 3010  ssh -i ~/.ssh/sandbox-aws-jd admin@34.242.219.106
 3011  ansible-playbook plays/build.yml -e layer_name=main
 3012  ansible-playbook plays/destroy.yml -e layer_name=main
 3013  rm -rf devops-workshops
 3014  git clone git@github.com:jdxlabs/devops-workshops.git
 3015  pip
 3016  ansible -version
 3017  ansible version
 3018  pip install --user virtualenv\n
 3019  cp ~/.local/bin/terraform011 ./bin/terraform
 3020  ./bin/terraform --version
 3021  pip install ansible=2.4.6
 3022  pip install ansible==2.4.6
 3023  pip -V
 3024  ./venv/bin/ansible --version
 3025  git clone git@github.com:axel-springer-kugawana/sl_ops-workstation.git
 3026  aws --version
 3027  docker --version
 3028  chmod +x ./workstation/launch.sh
 3029  WST_NAME=wst-devops-workshop
 3030  docker build -t $WST_NAME -f ./worsktation/Dockerfile ./worsktation/
 3031  docker build -t $WST_NAME -f ./workstation/Dockerfile .
 3032  docker build -t $WST_NAME -f ./workstation/Dockerfile ./workstation
 3033  pip3 install -r requirements.txt
 3034  bash --version
 3035  vim ~/.aws/credentials 
 3036  vim ~/.aws/config
 3037  git commit -m "provide workstation to reuse the code with the good versions of the tools, even a long time after"
 3038  ssh -F env-ssh.cfg admin@nodejs-server-0
 3039  cd devops-workshops
 3040  cd Workshop02-Ansible-Terraform
 3041  vim terraform/main/main.tf
 3042  head -n50 ~/pCloudDrive/notes/todo.txt
 3043  cd jdxlabs-website-infra
 3044  rm -rf terraform
 3045  git clone git@github.com:jdxlabs/jlabs_base-infra.git
 3046  git clone git@github.com:jdxlabs/jlabs_docker-python3.git
 3047  git clone git@github.com:jdxlabs/jlabs_sample-api.git
 3048  cd jlabs_base-infra
 3049  cd config
 3050  git pull
 3051  git submodule sync
 3052  git submodule --help
 3053  git submodule init
 3054  git submodule status
 3055  git submodule update
 3056  make tf-plan-aws-pp
 3057  make tf-plan-aws-pp LAYER=002-asg
 3058  make tf-apply-aws-pp LAYER=002-asg
 3059  ssh -i ~/.ssh/jlabs-pp-eu-west-1.pem admin@34.240.75.136
 3060  cat ~/pCloudDrive/notes/tasks/wescale/2019-09_droneinfra-structure_v2.txt
 3061  cat test
 3062  cd jlabs_sample-api
 3063  git checkout feature/init
 3064  git merge feature/init
 3065  git branch -d feature/init
 3066  git checkout -b feature/make-it-work
 3067  git push --set-upstream origin feature/make-it-work
 3068  git branch -D feature/make-it-work
 3069  rm -rf providers/gcp
 3070  tree providers/gcp
 3071  tree providers/aws
 3072  sudo ./helpers/terraform/clean_modules.sh
 3073  make
 3074  make 
 3075  make tf-plan-aws-pp LAYER=001-vpc
 3076  make tf-destroy-aws-pp LAYER=002-asg
 3077  make tf-destroy-aws-pp LAYER=001-vpc
 3078  unzip terraform_0.12.8_linux_amd64.zip
 3079  mv terraform ~/.local/bin
 3080  rm terraform_0.12.8_linux_amd64.zip
 3081  rm 417753-Oprah-Winfrey-Quote-What-you-focus-on-expands-and-when-you-focus.jpg
 3082  find . -iname '*rsa*'
 3083  cd .ss
 3084  cd .ssh
 3085  rm jlabs-pp-*
 3086  sudo rm jlabs-pp-*
 3087  ssh-keygen
 3088  ./infra-builder-terraform.sh --team jdwsc --env dev --provider aws --awsRegion eu-west-1 --tfAction plan --layer 002-asg
 3089  ./infra-builder-terraform.sh --team jdwsc --env dev --provider aws --awsRegion eu-west-1 --tfAction destroy --layer 002-asg
 3090  ./infra-builder-terraform.sh --team jdwsc --env dev --provider aws --awsRegion eu-west-1 --tfAction destroy --layer 001-vpc
 3091  git commit -m "make it work"
 3092  git commit -m "set builder script"
 3093  git commit -m "update terraform"
 3094  git commit -m "generic infos"
 3095  cd ../devops-workshops
 3096  docker stop -t0 wst-devops-workshop && docker rm wst-devops-workshop
 3097  gitk workstation/Dockerfile
 3098  docker exec -it 99ebc907b937 bash
 3099  ./workstation/launch.sh
 3100  docker stop -t0 wst-drone-base && docker rm wst-drone-base
 3101  git commit -m "workstation up"
 3102  cat ./../../../../configs/jdwescaledrone/dev//env.tfvars
 3103  cat ./../../../../configs/jdwescaledrone/dev/env.tfvars
 3104  cat ./../../../configs/jdwescaledrone/dev/env.tfvars
 3105  cat ./../../configs/jdwescaledrone/dev/env.tfvars
 3106  cd ../.../../
 3107  cd ../../../
 3108  ./helpers/terraform/clean_modules.sh
 3109  cd terraform/bootstrap/aws
 3110  terraform plan -var=group=jdwescaledrone -var=env=dev -var=region=eu-west-1 -state=troma.tfstate
 3111  terraform plan -var=group=jdwescaledrone -var=env=dev -var=region=eu-west-1 -state=bootstrap-aws-eu-west-1.tfstate
 3112  terraform plan -var=group="jdwescaledrone" -var=env="dev" -var=region="eu-west-1" -state="bootstrap-aws-eu-west-1.tfstate"
 3113  terraform plan -var=group="jdwescaledrone" -var=env="dev" -var=region="eu-west-1"
 3114  terraform plan -var=region="eu-west-1"
 3115  terraform plan -var=region=eu-west-1 -var=env=dev -var=group=jdwescaledrone
 3116  terraform plan -var=region=eu-west-1 -var=env=dev
 3117  terraform plan -var=region=eu-west-1
 3118  terraform plan -var=env=dev -var=region=eu-west-1
 3119  terraform plan -var=env=dev -var=group=group -var=region=eu-west-1
 3120  gitk README.md
 3121  rm -rf .terrafor
 3122  terraform apply -var=group=jdwescaledrone -var=env=dev -var=region=eu-west-1 -state=bootstrap-aws-eu-west-1.tfstate
 3123  ./infra-bootstrap.sh --provider aws --account jdwescaledrone-dev --plan
 3124  ./infra-bootstrap.sh --provider aws --account jdwescaledrone-dev
 3125  git commit -m "make bootstrap"
 3126  ./infra-bootstrap.sh
 3127  ./infra-bootstrap.sh --help
 3128  ./infra-bootstrap.sh --provider aws --account jdwescaledrone-dev --help
 3129  git commit -m "add help param"
 3130  cd terraform/layers/001-main-aws/001-vpc
 3131  cat ./../../../configs/jdwescaledrone/dev/terraform/env.tfvars
 3132  cat ./../../../../configs/jdwescaledrone/dev/terraform/env.tfvars
 3133  git commit -m "terraform ok"
 3134  ssh -i ~/.ssh/jdwscdrone admin@63.32.100.109
 3135  ./infra-builder-terraform.sh --account jdwescaledrone-dev --layer 002-asg --apply
 3136  nslookup http://drone.jdwescaledrone-dev.aws.jdxlabs.com/
 3137  git commit -m "userdata"
 3138  cd pCloudDrive/notes/tasks/wescale/_
 3139  cd pCloudDrive/notes/tasks/wescale/
 3140  touch 2019-07_retours_aurelien_drone.txt
 3141  cd .kube
 3142  cat config
 3143  cp config config.bkp
 3144  vim config
 3145  kubectl -n default port-forward my-release-drone-server-74dc466ddd-nvczg 8000:80
 3146  kubectl -n default port-forward my-release-drone-server-58b7fcd678-b2r2k  8000:80\n
 3147  cat jdwscdrone.pub
 3148  cat id_rsa.pub
 3149  vim ~/.ssh/jdwscdrone.pub
 3150  ssh -i ~/.ssh/jdwscdrone admin@34.244.229.181
 3151  nslookup drone.jdwescaledrone-dev.aws.jdxlabs.com
 3152  dig drone.jdwescaledrone-dev.aws.jdxlabs.com
 3153  ssh -p 64535 18.207.223.214
 3154  git checkout feature/core-iam-rights
 3155  git branch -D feature/core-iam-rights
 3156  git checkout -b feature/automate-kc-users
 3157  git push --set-upstream origin feature/automate-kc-users
 3158  git commit -m "remove s3 ci because linked by managed policy"
 3159  git commit -m "set lux iam rights for instance role"
 3160  git checkout feature/refacto-rights
 3161  git commit -m "this rights have to be restricted"
 3162  git branch -D feature/refacto-rights
 3163  git branch -D feature/update-caas-rights
 3164  git checkout -b feature/fix-ci-rights
 3165  git push --set-upstream origin feature/fix-ci-rights
 3166  git commit -m "set ci rights for everyone"
 3167  git branch -d feature/fix-ci-rights
 3168  grep -nri kcadm .
 3169  git clone git@github.com:keycloak/keycloak.git
 3170  cd keycloak/
 3171  find . -iname '*kcadm*'
 3172  find . -iname 'kcadm.sh'
 3173  ./integration/client-cli/admin-cli/src/main/bin/kcadm.sh 
 3174  cd integration/client-cli/admin-cli/src/main/bin
 3175  java
 3176  grep -nri "kcadm" .
 3177  grep -nri "kcadm.sh" .
 3178  ./scripts/iam-users-tools/v1/generate-cfn-users.py
 3179  python ./scripts/iam-users-tools/v1/generate-cfn-users.py
 3180  git commit -m "add comment"
 3181  git clone git@github.com:axel-springer-kugawana/li_lux-batch-indexation.git
 3182  cd li_lux-batch-indexation
 3183  tree cfn/stacks/digital/nonprod
 3184  /aws-cloudform.sh --account digital-nonprod --profile sl-digital-nonprod --test
 3185  ./aws-cloudform.sh --account digital-nonprod --profile sl-digital-nonprod
 3186  ssh -p 64537 34.224.85.72\n
 3187  l Musique
 3188  dig 34.244.229.181
 3189  traceroute 34.244.229.181
 3190  =
 3191  ping 34.244.229.181
 3192  ping 10.105.5.141
 3193  ssh -i ~/.ssh/seloger/central-auth-keycloak-dev.pem ec2-user@54.171.7.224
 3194  ssh centos@10.105.5.141
 3195  grep -nri bastion .
 3196  :w
 3197  ./scripts/iam-users-tools/v1/push-iam-users-inventory.sh
 3198  ./push-iam-users-inventory.sh
 3199  git commit -m "update ci"
 3200  ~/pCloudDrive/notes/tasks/seloger/2019-09_keycloak.txt
 3201  python3 scripts/iam-users-tools/v1/print_links_keycloak.py
 3202  vim ~/.tmux.conf
 3203  pkill -f tmuw
 3204  pkill -f tmux
 3205  nslookup rbwescaledrone-dev.rbwscaws.jdxlabs.com
 3206  nslookup jdwescaledrone-dev.jdwscaws.jdxlabs.com
 3207  nslookup drone.jdwescaledrone-dev.jdwscaws.jdxlabs.com
 3208  dig drone.jdwescaledrone-dev.jdwscaws.jdxlabs.com
 3209  dig jdwescaledrone-dev.jdwscaws.jdxlabs.com
 3210  dig rbwescaledrone-dev.rbwscaws.jdxlabs.com
 3211  curl http://drone.jdwescaledrone-dev.jdwscaws.jdxlabs.com/
 3212  ./infra-builder-terraform.sh --account jdwescaledrone-dev --layer 002-vpc --plan
 3213  vim ~/.ssh/config
 3214  cat ~/.ssh/jdwscdrone.pub
 3215  ls -la 
 3216  vim hosts.ini
 3217  cat ~/.ssh/jdwscdrone
 3218  vim /home/jdx/.ssh/jdwscdrone
 3219  ssh -i ~/.ssh/jdwscdrone admin@54.229.123.247
 3220  sudo kill -9 28706 29844
 3221  nslookup drone.rbwescaledrone-dev.rbwscaws.jdxlabs.com
 3222  dig drone.rbwescaledrone-dev.rbwscaws.jdxlabs.com
 3223  ssh-add ~/.ssh/jdwscdrone
 3224  ssh -i /home/jdx/.ssh/jdwscdrone admin@54.229.123.247
 3225  sha256sum ~/.ssh/jdwscdrone
 3226  sha256sum ~/.ssh/jdwscdrone.pub
 3227  kill -9 30659
 3228  ps aux | grep ssh-agent
 3229  eval $(ssh-agent)
 3230  ssh-add /home/jdx/.ssh/jdwscdrone
 3231  ssh-add -l
 3232  ssh admin@54.229.123.247 -v
 3233  vim /home/jdx/.ssh/config
 3234  cd drone-
 3235  git commit -m "add values.dist"
 3236  /home/jdx/dev/www/wescale/drone-base/ansible
 3237  /home/jdx/dev/www/wescale/
 3238  cd ../jdxlabs/jlabs_docker-python3
 3239  export DRONE_SERVER=http://63.32.100.109:31286
 3240  export DRONE_TOKEN=ZNidyiDh1ten46qwTL2at1mZC6IxTkc4
 3241  drone log help
 3242  drone log view help
 3243  drone log view jlabs_docker-python3
 3244  drone log view jdxlabs/jlabs_docker-python3
 3245  drone help
 3246  ssh -i /home/jdx/.ssh/jdwscdrone admin@34.244.229.181
 3247  cat ~/pCloudDrive/notes/tasks/wescale/2019-09_drone.txt
 3248  cd drone-aws-python3
 3249  git commit -m "init"
 3250  cd /home/jdx/dev/www/wescale/drone-base/ansible
 3251  git commit -m "tests"
 3252  aws list-instance-profiles
 3253  aws iam list-instance-profiles
 3254  aws iam list-instance-profiles > tmp
 3255  vim tmp
 3256  ssh -p 64537 18.208.219.213
 3257  ssh -p 64537 3.83.103.66\n
 3258  aws s3 ls s3://seloger-digital-nonprod-infra-bucket/
 3259  aws s3 cp s3://seloger-digital-nonprod-infra-bucket/laasApi.yml .
 3260  rm laasApi.yml
 3261  ps aux | grep ssh
 3262  ssh admin@0.0.0.0/0
 3263  ssh admin@63.32.100.109
 3264  ssh admin@54.229.123.247
 3265  cd keycloak/integration/client-cli/admin-cli/src/main/bin
 3266  ./kcadm.sh
 3267  git commit -m "update values config"
 3268  curl https://keycloak-dev.auth.groupeseloger.tools\n
 3269  curl https://keycloak-dev.auth.groupeseloger.tools/auth\n
 3270  curl https://keycloak-dev.auth.groupeseloger.tools/auth/\n
 3271  curl https://keycloak-dev.auth.groupeseloger.tools/auth/seloger\n
 3272  curl https://keycloak-dev.auth.groupeseloger.tools/auth/seloger/clients\n
 3273  curl https://keycloak-dev.auth.groupeseloger.tools/auth/auth/master/clients
 3274  curl https://keycloak-dev.auth.groupeseloger.tools/master/clients
 3275  curl https://keycloak-dev.auth.groupeseloger.tools/auth/master/clients
 3276  curl https://keycloak-dev.auth.groupeseloger.tools/api/master/clients
 3277  export KEYCLOAK_URL=https://keycloak-dev.auth.groupeseloger.tools
 3278  echo $KEYCLOAK_URL
 3279  export KEYCLOAK_REALM=seloger
 3280  curl -X GET "${KEYCLOAK_URL}/admin/realms/${KEYCLOAK_REALM}/users/${$USER_ID}" \\n-H "Accept: application/json" \\n-H "Authorization: Bearer $TKN" | jq .
 3281  curl -X GET "${KEYCLOAK_URL}/admin/realms/${KEYCLOAK_REALM}/users" \\n-H "Accept: application/json" \\n-H "Authorization: Bearer $TKN" | jq .
 3282  curl -X GET "${KEYCLOAK_URL}/admin/realms/${KEYCLOAK_REALM}/users" \\n-H "Accept: application/json" \\n-H "Authorization: Bearer $TKN"
 3283  cd recipes-infra/keycloak-python
 3284  touch test.py
 3285  pip3 install python-keycloak --user
 3286  curl \\n-d "client_id=admin-cli" \\n-d "username=admin" \\n-d "password=3uu~aL:6d3c+//f" \\n-d "grant_type=password" \\n"http://localhost:8180/auth/realms/master/protocol/openid-connect/token" | jq\n
 3287  curl \\n-d "client_id=admin-cli" \\n-d "username=admin" \\n-d "password=3uu~aL:6d3c+//f" \\n-d "grant_type=password" \\n"https://keycloak-dev.auth.groupeseloger.tools/auth/realms/master/protocol/openid-connect/token" | jq\n
 3288  cd ansible
 3289  curl \\n-d "client_id=admin-cli" \\n-d "username=admin" \\n-d "password=3uu~aL:6d3c+//f" \\n-d "grant_type=password" \\n"https://keycloak-dev.auth.groupeseloger.tools/auth/realms/master/protocol/openid-connect/token"
 3290  ssh admin@54.77.46.202
 3291  ansible-playbook site.yml
 3292  curl \\n-d "client_id=sarace" \\n-d "username=admin" \\n-d "password=3uu~aL:6d3c+//f" \\n-d "grant_type=password" \\n"https://keycloak-dev.auth.groupeseloger.tools/auth/realms/master/protocol/openid-connect/token"\n
 3293  curl \\n-d "client_id=sarace" \\n-d "username=api_user" \\n-d "password=toto42" \\n-d "grant_type=password" \\n"https://keycloak-dev.auth.groupeseloger.tools/auth/realms/master/protocol/openid-connect/token"\n
 3294  curl \\n-d "client_id=sarace" -d "client_secret=74e14f30-230b-44cc-8b31-c2ecb7beeb0f" \\n-d "username=api_user" \\n-d "password=toto42" \\n-d "grant_type=password" \\n"https://keycloak-dev.auth.groupeseloger.tools/auth/realms/master/protocol/openid-connect/token"\n
 3295  curl -X POST -k -H 'Content-Type: application/x-www-form-urlencoded' -i 'https://keycloak-dev.auth.groupeseloger.tools/auth/realms/master/protocol/openid-connect/token' --data 'grant_type=password&username=admin&password=3uu~aL%3A6d3c%2B%2F%2Ff&client_id=admin-cli'\n
 3296  export TKN=eyJhbGciOiJSUzUxMiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJhMUFIXzgwZTFqZlNiYk1TVEFMRlpLbjRuNzFvUmtEdG5YdkliY19WOTBVIn0.eyJqdGkiOiJjZjVjN2U1MC1jNmYzLTQwY2UtOTkzMC04YTQ2ZmVmMjE2YjMiLCJleHAiOjE1NjgzOTA1NzksIm5iZiI6MCwiaWF0IjoxNTY4MzkwNTE5LCJpc3MiOiJodHRwczovL2tleWNsb2FrLWRldi5hdXRoLmdyb3VwZXNlbG9nZXIudG9vbHMvYXV0aC9yZWFsbXMvbWFzdGVyIiwic3ViIjoiYzE0NDEzMzctYmZlNC00N2Y2LWJmNTItNzhkYmExNzFiZWE2IiwidHlwIjoiQmVhcmVyIiwiYXpwIjoiYWRtaW4tY2xpIiwiYXV0aF90aW1lIjowLCJzZXNzaW9uX3N0YXRlIjoiYzRiYjMzY2UtNjUxMC00OWVmLWFiZDYtYmJmMzg1ZmRmNDRhIiwiYWNyIjoiMSIsInNjb3BlIjoiZW1haWwgcHJvZmlsZSIsImVtYWlsX3ZlcmlmaWVkIjpmYWxzZSwicHJlZmVycmVkX3VzZXJuYW1lIjoiYXBpX3VzZXIifQ.oVEVpsiv3ndeJ0RXG0bQMFn_NlKLTQVtgb_Q99uP54xxtzvWvdYpUreWc3Yme3Lwmpdcqu7tSQxjY9n0vss7JibKP93UotEOoRXyQEGJW8qATTco5lNOjnOde5b-zZsVoijFFCR5Ho69wWtaAV0ex4SfkeTMczYCAF_-URfb4EhZ2zRO9gGR_Dmixaz3KkwvSPAG4hAoi2XP4a5LArPOfhQ-hGt-PAd41Q3w7O3pEFPx2PkNWblaZziUlTE42BVCvVncZ74e33xe4CStcgPWaHcKN6VVsCPryruQ0tL6KFTTvlZ0sTAK252tayRTvC3fbHnxyRK8KyWLrQydQaamJeY_TihzC2rY85Pw-tmzrlT_wGfI3v4ItHnKg6BnEzUQlPYrYnCIEmzzRTaOYu-9ZdWTH4KTKoB6G_KocDcAeq7niNVgmsxU-HvYDk_neiXwfXvxU5aRYpo_SQmHbvjELWLgKSlMY-qow9z1ISyz4rL9pRvVESjAiWSPNiMlcHuUI620d8T8V-i8sLjZ_31PAxhXNG346IoIIu-eFRPI5L7YOdAmrAzCl2D0bqLC8ViWtOTjiitfbpRoaWfvH9J8ViUiiRMyGsP8pDN5ZAFQSJ1Jhd-aTRiXDzCGiQ_TdjzEbjS52KFp_PMFFY3GLjLWkINmg3TIqumFKYiWDoz3O6k
 3297  ehco $TKN
 3298  echo $TKN
 3299  cd jlabs_docker-python3
 3300  vimt test
 3301  export TKN=eyJhbGciOiJSUzUxMiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJhMUFIXzgwZTFqZlNiYk1TVEFMRlpLbjRuNzFvUmtEdG5YdkliY19WOTBVIn0.eyJqdGkiOiI1MjAyNWM2NS03ZWQwLTQ5ZmYtOWQ3ZC04OWVjZDA4OGQyNzciLCJleHAiOjE1NjgzOTE1OTgsIm5iZiI6MCwiaWF0IjoxNTY4MzkxNTM4LCJpc3MiOiJodHRwczovL2tleWNsb2FrLWRldi5hdXRoLmdyb3VwZXNlbG9nZXIudG9vbHMvYXV0aC9yZWFsbXMvbWFzdGVyIiwic3ViIjoiYzE0NDEzMzctYmZlNC00N2Y2LWJmNTItNzhkYmExNzFiZWE2IiwidHlwIjoiQmVhcmVyIiwiYXpwIjoiYWRtaW4tY2xpIiwiYXV0aF90aW1lIjowLCJzZXNzaW9uX3N0YXRlIjoiMDUzOGRlZTAtMWNlYi00ZTgwLTg5ZjMtMTcyMjk1YjkzZmNjIiwiYWNyIjoiMSIsInNjb3BlIjoiZW1haWwgcHJvZmlsZSIsImVtYWlsX3ZlcmlmaWVkIjpmYWxzZSwicHJlZmVycmVkX3VzZXJuYW1lIjoiYXBpX3VzZXIifQ.Q6eYTrodnXb_iMf-TsPIXAiWvq5rz5WNtWWvgcc_98SbT_-zysMAg420Zm5YoktGtGG5o1LSfnLS8zXZ2O2cLMzUTyJ-QT86tIKZgSwzpfibhOz2ub2qUaYmw91iGE8R4piEUTwpVvl6wDU1NzxpDriRBivQZQsHckTk2CrQ08pbH57DM5u0RO2GHqkCO89QgjysNsE54lMOqEVgfb36bT-cxQ3s39rP8v95kbOvFNizWzSCxwIhsRm6bTTB2ZhYw3ncGvmciQ86XW00dAOcGzI0pmE0xIlPXpiZ5w_edwl472CXy35rwlkQ3tbdhFAxmtdfkt4rkcUi3goN-W0U3O8FQUvYoHNzOdm1EKjRTb2s0zczNq8kjuRH1mpK1XD5_TvSoBcET-72cJlxodFDN2gRlv91ML-BGM7oWkHSc3KQR1-egQyCEpD1mId_WGTxTMRj0Tvm280LYAlSj2WICJ3EUYFpIIP1o_fCohXZ70MxiOKWKs2L_KjqRXM69fYizwZG-eVCFLgoxiUHlmMcZmrbkUAbyG8L76WZyH-GmXrH6gJ19F05dtlasbjLdEEIOlGFiG_5PDNwManFFA9F8_6yBqrszyIWkZYRdLO46nlqpjhPmA2Mh9iyHSyOl9TD2PiflCS0c6EjFa8aSN9EYlg-FChpghmcLAt6CeZVnlo
 3302  curl -H "Authorization: bearer $TKN" https://keycloak-dev.auth.groupeseloger.tools/auth/master/clients
 3303  export TKN=eyJhbGciOiJSUzUxMiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJhMUFIXzgwZTFqZlNiYk1TVEFMRlpLbjRuNzFvUmtEdG5YdkliY19WOTBVIn0.eyJqdGkiOiJiNWY2YmMyYy1iMzFjLTRjYjAtYTgwNy05M2Y3YjFhYjMyY2IiLCJleHAiOjE1NjgzOTI1ODMsIm5iZiI6MCwiaWF0IjoxNTY4MzkyMjgzLCJpc3MiOiJodHRwczovL2tleWNsb2FrLWRldi5hdXRoLmdyb3VwZXNlbG9nZXIudG9vbHMvYXV0aC9yZWFsbXMvbWFzdGVyIiwic3ViIjoiYzE0NDEzMzctYmZlNC00N2Y2LWJmNTItNzhkYmExNzFiZWE2IiwidHlwIjoiQmVhcmVyIiwiYXpwIjoiYWRtaW4tY2xpIiwiYXV0aF90aW1lIjowLCJzZXNzaW9uX3N0YXRlIjoiZDI1NTIxYWUtNmE3ZC00NjZlLTg0YmItMjMxMDZiZmI5YTYwIiwiYWNyIjoiMSIsInNjb3BlIjoiZW1haWwgcHJvZmlsZSIsImVtYWlsX3ZlcmlmaWVkIjpmYWxzZSwicHJlZmVycmVkX3VzZXJuYW1lIjoiYXBpX3VzZXIifQ.cFIr6MQ0jkZ63FFLdC4cWXvV1FSejWBJPOvsIeC-4YKdRdEeRNrrEOqKLYg7jL0ShKLscJnW5KuhZqe-O1536D1qQJmcp2VJnArmkq6QplLjDYumJos_sIj7I0j2moPtBaTOZdvcFubcQmhQdz1rF4HCfr-g0fqP-V4Y5NIC8-E7cls0DxqwwPK4k4SpZVaXDT7S6c6lEg_rGtKFU_7jA1fCiGE83zvMHt2htwGSy0A-eSWxVXLpZXWfSk0eFd4TkQ63zcA5R-l8ulI4vGFh4RprnD_1CIM4MUkRfAaXdU2-RYseJ04Ybb0suWQdnNpFG8TACKRNz3jb3rgQYYMVNVURooYt1lkgBiRVmRVzwjDai1LbIOLE1xOQc7RFhrUbV5e1qf_yvWhkvx0BdYh29tQQRYfm0ZI2U515Kw9lpnLrso8cg_eNekJN6HVVSSuVCbKYo65nCVvRElZ21zV39Zatii1jk6hZKML-HkaDtlCgV1RwWK8ggNGjLxuMFrOeqOpP9_yh8O3t-n7s5qDFhffJRwo0hY3gKWdSir8X2G1M-A2N_5D3bqE1lgZapb9dQvTyioQ9lSatik0eaU16Ry5FBuStdQ5cMujnT_V-sesH_q6WQaGpsKen0J20kEGH1Mj4ZFX6-HDty_CqA3NowXKq89SrBeITVRs2ba01yUY
 3304  curl -H "Authorization: bearer $TKN" https://keycloak-dev.auth.groupeseloger.tools/auth/realms/master/clients
 3305  curl -H "Authorization: bearer $TKN" https://keycloak-dev.auth.groupeseloger.tools/auth/realms/master/protocol/openid-connect/userinfo
 3306  python test.py
 3307  cd learn-python3/01-basics
 3308  python 11-functions.py
 3309  git merge wip
 3310  git checkout wip
 3311  export $TKN=eyJhbGciOiJSUzUxMiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJhMUFIXzgwZTFqZlNiYk1TVEFMRlpLbjRuNzFvUmtEdG5YdkliY19WOTBVIn0.eyJqdGkiOiJmYzE0YjY0Yi0xZGY2LTRjNTYtOTRjZC01MTY0MTk3YTJjMGYiLCJleHAiOjE1NjgzOTUwMDIsIm5iZiI6MCwiaWF0IjoxNTY4Mzk0NzAyLCJpc3MiOiJodHRwczovL2tleWNsb2FrLWRldi5hdXRoLmdyb3VwZXNlbG9nZXIudG9vbHMvYXV0aC9yZWFsbXMvbWFzdGVyIiwic3ViIjoiYzE0NDEzMzctYmZlNC00N2Y2LWJmNTItNzhkYmExNzFiZWE2IiwidHlwIjoiQmVhcmVyIiwiYXpwIjoiYWRtaW4tY2xpIiwiYXV0aF90aW1lIjowLCJzZXNzaW9uX3N0YXRlIjoiMmIzNmMyYjctMjFkMi00MjI0LWJiNDMtODAxZTA4ZWI3ZTI5IiwiYWNyIjoiMSIsInNjb3BlIjoiZW1haWwgcHJvZmlsZSIsImVtYWlsX3ZlcmlmaWVkIjpmYWxzZSwicHJlZmVycmVkX3VzZXJuYW1lIjoiYXBpX3VzZXIifQ.IiLd-opCk6APeOEPBXclhsu398ais0t840nljUxk1ybnD3pY9gh349gpLJzOybnyiO41kc158ewP4T_F-MeGavHSBFxsR-O_NDbF2eM-Cquzlb7Lf3WgaztOcmgsk9CZe-jYMV3vfhHHZCtM8U4ZM-iUIwz1r7hzhAoP8M3efCdPow2JdaSQrN6lEy89WczGFOOedD4ZorGfmVBplP3Xr6E4EpjBgDFssDP5ADmcGEhqrXHP_apZq_3Np4WxKeSWL-AuOqOCrxzGhVOtCaGLB_03x--4xHnU6R7G8VCw-pXeJyEc1znbJI_XaXVGUE04wLRZfpyWDI8fEwgGqTkNFnVZ-9VU46EKyPeMAvnrJbeBPoO5sn6fz_7iJq80qv5mrvOR-YhKJXb5YUQVBxFLYgxJU5oztph0ZAG1Jef-cQ19QEIhrofsqP82uO715iSWrEgCf3pT5pxQuYUKjNWUt3455nGxZM62edpG1femXwoTTVw-xuuP1ACtWZpL3sH2oZJF5DzrmjHxY9UkmP5ZLTEFg2jZUt3kd3FJB_DN69TibQM4jBVvWBhpv760hjmG9ouS8BFrUgMFd5Mn7PL7wy-ebwaMpkc-PuasBuiqvZVqwO7imedONz-SXad53wK5gztQlYLdNcKUXyYnGkTxcYxlNYmEMfysLTq5UP_NCZ4
 3312  export TKN=eyJhbGciOiJSUzUxMiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJhMUFIXzgwZTFqZlNiYk1TVEFMRlpLbjRuNzFvUmtEdG5YdkliY19WOTBVIn0.eyJqdGkiOiJmYzE0YjY0Yi0xZGY2LTRjNTYtOTRjZC01MTY0MTk3YTJjMGYiLCJleHAiOjE1NjgzOTUwMDIsIm5iZiI6MCwiaWF0IjoxNTY4Mzk0NzAyLCJpc3MiOiJodHRwczovL2tleWNsb2FrLWRldi5hdXRoLmdyb3VwZXNlbG9nZXIudG9vbHMvYXV0aC9yZWFsbXMvbWFzdGVyIiwic3ViIjoiYzE0NDEzMzctYmZlNC00N2Y2LWJmNTItNzhkYmExNzFiZWE2IiwidHlwIjoiQmVhcmVyIiwiYXpwIjoiYWRtaW4tY2xpIiwiYXV0aF90aW1lIjowLCJzZXNzaW9uX3N0YXRlIjoiMmIzNmMyYjctMjFkMi00MjI0LWJiNDMtODAxZTA4ZWI3ZTI5IiwiYWNyIjoiMSIsInNjb3BlIjoiZW1haWwgcHJvZmlsZSIsImVtYWlsX3ZlcmlmaWVkIjpmYWxzZSwicHJlZmVycmVkX3VzZXJuYW1lIjoiYXBpX3VzZXIifQ.IiLd-opCk6APeOEPBXclhsu398ais0t840nljUxk1ybnD3pY9gh349gpLJzOybnyiO41kc158ewP4T_F-MeGavHSBFxsR-O_NDbF2eM-Cquzlb7Lf3WgaztOcmgsk9CZe-jYMV3vfhHHZCtM8U4ZM-iUIwz1r7hzhAoP8M3efCdPow2JdaSQrN6lEy89WczGFOOedD4ZorGfmVBplP3Xr6E4EpjBgDFssDP5ADmcGEhqrXHP_apZq_3Np4WxKeSWL-AuOqOCrxzGhVOtCaGLB_03x--4xHnU6R7G8VCw-pXeJyEc1znbJI_XaXVGUE04wLRZfpyWDI8fEwgGqTkNFnVZ-9VU46EKyPeMAvnrJbeBPoO5sn6fz_7iJq80qv5mrvOR-YhKJXb5YUQVBxFLYgxJU5oztph0ZAG1Jef-cQ19QEIhrofsqP82uO715iSWrEgCf3pT5pxQuYUKjNWUt3455nGxZM62edpG1femXwoTTVw-xuuP1ACtWZpL3sH2oZJF5DzrmjHxY9UkmP5ZLTEFg2jZUt3kd3FJB_DN69TibQM4jBVvWBhpv760hjmG9ouS8BFrUgMFd5Mn7PL7wy-ebwaMpkc-PuasBuiqvZVqwO7imedONz-SXad53wK5gztQlYLdNcKUXyYnGkTxcYxlNYmEMfysLTq5UP_NCZ4
 3313  curl -X POST -k -H 'Accept: application/json' -H 'Authorization: Bearer $TKN -H 'Content-Type: application/json' -i 'https://keycloak-dev.auth.groupeseloger.tools/auth/admin/realms/master/users' --data '{"username":"toto2"}'
 3314  curl -X POST -k -H 'Accept: application/json' -H 'Authorization: Bearer "$TKN" -H 'Content-Type: application/json' -i 'https://keycloak-dev.auth.groupeseloger.tools/auth/admin/realms/master/users' --data '{"username":"toto2"}'
 3315  man curl
 3316  sudo apt install -y orca
 3317  sudo kill -9 438
 3318  sudo apt update && sudo apt -y upgrade
 3319  sudo apt -y autoremove
 3320  rm -rf nail_photos*
 3321  # Add/attach client role to a user :\n./kcadm.sh add-roles -r seloger --uusername jerome.devoucoux --cclientid urn:amazon:webservices --rolename arn:aws:iam::220766614489:role/digital-nonprod-users-accessbdbilling-iam-role,arn:aws:iam::220766614489:saml-provider/seloger-digital-nonprod-keycloak\n\n# Detach client role to a user :\n./kcadm.sh remove-roles -r seloger --uusername jerome.devoucoux --cclientid urn:amazon:webservices --rolename arn:aws:iam::220766614489:role/digital-nonprod-users-accessbdbilling-iam-role,arn:aws:iam::220766614489:saml-provider/seloger-digital-nonprod-keycloak\n\n# Add/attach client role to a user :\n./kcadm.sh add-roles -r seloger --uusername jerome.devoucoux --cclientid urn:amazon:webservices --rolename arn:aws:iam::220766614489:role/digital-nonprod-users-accessbdbilling-iam-role,arn:aws:iam::220766614489:saml-provider/seloger-digital-nonprod-keycloak\n\n# Detach client role to a user :\n./kcadm.sh remove-roles -r seloger --uusername jerome.devoucoux --cclientid urn:amazon:webservices --rolename arn:aws:iam::220766614489:role/digital-nonprod-users-accessbdbilling-iam-role,arn:aws:iam::220766614489:saml-provider/seloger-digital-nonprod-keycloak
 3322  vim users
 3323  mv users users.json
 3324  vim index.html
 3325  grep -nri arg .
 3326  grep -nri argv . --exclude venv
 3327  git checkout feature/create-pattern-with-apps
 3328  git merge feature/create-pattern-with-apps
 3329  rm -rf sl_security-aws-iam-users
 3330  git clone git@github.com:axel-springer-kugawana/sl_security-aws-iam-users.git
 3331  git checkout -b features/sync-kc-users-roles
 3332  git push --set-upstream origin features/sync-kc-users-roles
 3333  git add scripts/iam-users-tools/v1/sync_kc_users_roles.py
 3334  git clone sl_security-aws-sts
 3335  git clone git@github.com:axel-springer-kugawana/sl_security-aws-sts.git
 3336  cd sl_security-
 3337  git restore --staged scripts/iam-users-tools/v1/print_links_keycloak.py
 3338  git checkout scripts/iam-users-tools/v1/print_links_keycloak.py
 3339  pip install itertools --user
 3340  pip install itertools
 3341  git checkout -b feature/update-bd-test
 3342  git commit -m "update bd test"
 3343  git push --set-upstream origin feature/update-bd-test
 3344  git branch -d feature/update-bd-test
 3345  python scripts/iam-users-tools/v1/print_links_keycloak.py
 3346  vim configs/iam-users-inventory/params.yml
 3347  git checkout -b feature/add-notaction
 3348  git push --set-upstream origin feature/add-notaction
 3349  git commit -m "add notaction in policies"
 3350  python scripts/iam-users-tools/v1/print_links_keycloak.py 
 3351  git commit -m "make simulation for kc sync"
 3352  python scripts/iam-users-tools/v1/sync_kc_users_roles.py
 3353  git commit -m "get source config"
 3354  git clone git@github.com:axel-springer-kugawana/sl_security-keycloak-adminlib.git
 3355  cd sl_security-keycloak-a
 3356  cd sl_security-keycloak-adminlib
 3357  vim configuration/__init__.py
 3358  python keycloak-api.py
 3359  git commit -m "add findByName for roles"
 3360  tree configuration
 3361  git rm configuration/__init__.py
 3362  git commit -m "protect config file"
 3363  cd sl_security-aws-sts
 3364  chmod +x ./sync-kc.sh
 3365  git commit -m "make sync pattern"
 3366  git commit -m ""git push
 3367  git commit -m "make folders"
 3368  git branch
 3369  git rev-parse --symbolic-full-name --abbrev-ref HEAD
 3370  git ls-remote | grep "refs/features/sync-kc-users-roles"
 3371  git ls-remote | grep "refs/features/sync-kc-users-roles" | cur -f1
 3372  git ls-remote | grep "refs/features/sync-kc-users-roles" | cut -f1
 3373  git ls-remote --silent
 3374  git ls-remote --quiet | grep "refs/master"
 3375  git ls-remote --quiet | grep "refs/master" | cut -f1
 3376  git ls-remote | grep "refs/master" | cut -f1
 3377  var=$(git ls-remote | grep "refs/master" | cut -f1)
 3378  var=$(git ls-remote --quiet | grep "refs/master" | cut -f1)
 3379  export var=$(git ls-remote --quiet | grep "refs/master" | cut -f1)
 3380  branch=$(git rev-parse --symbolic-full-name --abbrev-ref HEAD)
 3381  echo $branch
 3382  gitRef="heads/$branch"
 3383  echo $gitRef
 3384  latestRevision=$(git ls-remote --quiet | grep "refs/$gitRef" | cut -f1)
 3385  git ls-remote --quiet | grep "refs/$gitRef" | cut -f1
 3386  git ls-remote --quiet | grep "refs/$gitRef"
 3387  git ls-remote --quiet
 3388  [200~git rev-parse --symbolic-full-name --abbrev-ref HEAD~
 3389  git rev-parse --symbolic-full-name --abbrev-ref HEAD~
 3390  git ls-remote
 3391  git ls-remote --tags
 3392  git ls-remote --help
 3393  git log --pretty=oneline | grep make | cut -fl
 3394  git log --oneline | nl -v0 | sed 's/^ \+/&HEAD~/'
 3395  git ls-files
 3396  git log --pretty=oneline | grep make | cut -f2-
 3397  git log --pretty=oneline | grep "make folder" | cut -f1
 3398  git log --pretty=oneline | grep make | cut -f1
 3399  git log --pretty=oneline | cut -f0
 3400  git log --pretty=oneline | cut -f1
 3401  git log --pretty=oneline --no-decorate,
 3402  git log --pretty=oneline --no-decorate
 3403  git log --pretty=oneline --no-decorate --source
 3404  git log --pretty=oneline --decorate=full
 3405  git log --pretty=oneline --decorate=no
 3406  git log --pretty=oneline --decorate=short
 3407  git log --pretty=oneline --no-decorate 
 3408  git log --pretty=oneline | cut -b1
 3409  git log --pretty=oneline | cut -b10
 3410  git log --pretty=oneline | cut -d " "
 3411  git log --pretty=oneline | cut -d ","
 3412  git log --pretty=oneline | cut -d ','
 3413  git log --pretty=oneline --name-status
 3414  git show --summary\n
 3415  git log -1 --stat
 3416  git rev-parse HEAD\n
 3417  git log | head -n 1 \n
 3418  git log --reflog\n
 3419  git log --oneline --all --graph --decorate  $(git reflog | awk '{print $1}')
 3420  history | grep cut
 3421  git log --pretty=oneline | cut -b0,40
 3422  git log --pretty=oneline | cut -40
 3423  git log --pretty=oneline | cut -b40
 3424  cd /home/jdx/dev/www/seloger/sl_security-aws-iam-users
 3425  man cut
 3426  git log --pretty=oneline | cut -b0-40
 3427  git log --pretty=oneline | cut -b1-40
 3428  git log --pretty=oneline | cut -d' '
 3429  git log --pretty=oneline | cut -d' ' -f1
 3430  var=8c976b7b77d19d7b8230ccd1ac98ab36912c4309\n8bcfc7c3a973023021da4c3c60d19abb88467a54\n4405de24d0e83dbdda0accb986747f5bc287df4e\nac1c509f460077f1d765993d48b52d0a58b1ecee\n3d233895b46b77caa8eb45de3452d59af6641556\n0d1d222da81af8f6e33af41bbb945f0ddfec7b6e\nc7a4d51db6e9497e8c0429c23128565a86cbf8ef\n748d6974779aca7989c8bbb526f94fb3b7cda6a6\nabea80db7e8f8c0329868558f291b3109a21e02b\nb92c86ba5a04cb3f716ae404a66bcffdcc699757\n2ac70b74c81afc9b01c2618f29999500ba620006\naeace2595c649b8da1ac7dcc341283ddcb68fbc8\n4f9dab37458c9ba46ec6dfdbac167f9de37d4a42\n5b8d26c0733ae89b6e71f3c8e73cc245ed4e9d32\n6c4a4c3840c7b2a00b3668403c8a9c49548a3874\n360b1f84d8ca8d7bf2e6274c61a713febb67de4a\n902af4e82928e9a72642ae9a96a6d32e7d19f967\n81c0e7d7fc454fb87a5d6bf64bac729855d2203e\n9db0f1de4784bb3c030d6e9463ecde8c57d39112
 3431  var="8c976b7b77d19d7b8230ccd1ac98ab36912c4309\n8bcfc7c3a973023021da4c3c60d19abb88467a54\n4405de24d0e83dbdda0accb986747f5bc287df4e\nac1c509f460077f1d765993d48b52d0a58b1ecee\n3d233895b46b77caa8eb45de3452d59af6641556\n0d1d222da81af8f6e33af41bbb945f0ddfec7b6e\nc7a4d51db6e9497e8c0429c23128565a86cbf8ef\n748d6974779aca7989c8bbb526f94fb3b7cda6a6\nabea80db7e8f8c0329868558f291b3109a21e02b\nb92c86ba5a04cb3f716ae404a66bcffdcc699757\n2ac70b74c81afc9b01c2618f29999500ba620006\naeace2595c649b8da1ac7dcc341283ddcb68fbc8\n4f9dab37458c9ba46ec6dfdbac167f9de37d4a42\n5b8d26c0733ae89b6e71f3c8e73cc245ed4e9d32\n6c4a4c3840c7b2a00b3668403c8a9c49548a3874\n360b1f84d8ca8d7bf2e6274c61a713febb67de4a\n902af4e82928e9a72642ae9a96a6d32e7d19f967\n81c0e7d7fc454fb87a5d6bf64bac729855d2203e\n9db0f1de4784bb3c030d6e9463ecde8c57d39112"
 3432  echo $var
 3433  echo $var | sed -n '2 p'
 3434  echo $var | sed -n '20 p'
 3435  echo $var | sed -n '19 p'
 3436  echo $var | sed -n '1 p'
 3437  git log --pretty=oneline
 3438  git log features/sync-kc-users-roles --pretty=oneline
 3439  git log master --pretty=oneline
 3440  OA
 3441  git diff --name-only 9273c393ba633dba233c602b002b482b4c46cdc2 8c976b7b77d19d7b8230ccd1ac98ab36912c4309
 3442  git diff --name-only 9273c393ba633dba233c602b002b482b4c46cdc2 9db0f1de4784bb3c030d6e9463ecde8c57d39112
 3443  git diff --name-only 9273c393ba633dba233c602b002b482b4c46cdc2 9db0f1de4784bb3c030d6e9463ecde8c57d39112 | grep configs/iam-users-inventory
 3444  git diff --name-only 9273c393ba633dba233c602b002b482b4c46cdc2 9db0f1de4784bb3c030d6e9463ecde8c57d39112 | grep configs/iam-users-inventory/users-groups
 3445  aws put-parameter help
 3446  aws ssm put-parameter help
 3447  aws ssm get-parameter --name /lastRevValidated/sl_security-aws-iam-users/features/sync-kc-users-roles | jq
 3448  aws ssm get-parameter --name /lastRevValidated/sl_security-aws-iam-users/features/sync-kc-users-roles | jq.Value
 3449  aws ssm get-parameter --name /lastRevValidated/sl_security-aws-iam-users/features/sync-kc-users-roles | jq -r .*Value
 3450  aws ssm get-parameter --name /lastRevValidated/sl_security-aws-iam-users/features/sync-kc-users-roles | jq -r .Value
 3451  aws ssm get-parameter --name /lastRevValidated/sl_security-aws-iam-users/features/sync-kc-users-roles | jq -r .Parameter.Value
 3452  aws ssm get-parameter --name /lastRevValidated/sl_security-aws-iam-users/features/sync-kc-users-roles
 3453  aws ssm help
 3454  aws ssm get-parameter --name /lastRevValidated/sl_security-aws-iam-users/features/sync-kc-users-roles || echo "balek"
 3455  aws ssm get-parameter --name /lastRevValidated/sl_security-aws-iam-users/features/sync-kc-users-roles || true
 3456  python3 date
 3457  python3 print(date)
 3458  python3 print("pass")
 3459  python print("pass")
 3460  git commit -m "bash script ok to get files to modify"
 3461  git commit -m "set logger"
 3462  git commit -m "get clean groups"
 3463  git commit -m "stop there"
 3464  python3 ./scripts/sync-kc/v1/delete.py
 3465  l scripts/sync-kc/v1
 3466  git commit -m "add delete file action"
 3467  d
 3468  git commit -m "simulate delete"
 3469  git log features/sync-kc-users-roles -n 200--pretty=oneline
 3470  git log features/sync-kc-users-roles -n 200 --pretty=oneline
 3471  man cut 
 3472  lastRevisions='24db67db3e36e05eb5fdbd61046745805696d778\n996c93d3b079b566fcc734a2de206b2f7d746adf\n045abcbdcc16c2f8f6c6a0d9845d3d19a957585c\n6779be825e4714d433c1c43450f320285941a977\ncac3ebc09aee7d57e7d8c094619a0b1ef77940c1\n1cae197365d9ffb3159defdf482d368dd42a1ca6\n26ef22c82afcde1681cb2ce00d961c2477716a44\n7737603805b757bc650c0b3a141368dbb3fde6db\n9273c393ba633dba233c602b002b482b4c46cdc2\n8c976b7b77d19d7b8230ccd1ac98ab36912c4309\n8bcfc7c3a973023021da4c3c60d19abb88467a54\n4405de24d0e83dbdda0accb986747f5bc287df4e\nac1c509f460077f1d765993d48b52d0a58b1ecee\n3d233895b46b77caa8eb45de3452d59af6641556\n0d1d222da81af8f6e33af41bbb945f0ddfec7b6e\nc7a4d51db6e9497e8c0429c23128565a86cbf8ef\n748d6974779aca7989c8bbb526f94fb3b7cda6a6\nabea80db7e8f8c0329868558f291b3109a21e02b\nb92c86ba5a04cb3f716ae404a66bcffdcc699757\n2ac70b74c81afc9b01c2618f29999500ba620006\naeace2595c649b8da1ac7dcc341283ddcb68fbc8\n4f9dab37458c9ba46ec6dfdbac167f9de37d4a42\n5b8d26c0733ae89b6e71f3c8e73cc245ed4e9d32\n6c4a4c3840c7b2a00b3668403c8a9c49548a3874\n360b1f84d8ca8d7bf2e6274c61a713febb67de4a\n902af4e82928e9a72642ae9a96a6d32e7d19f967\n81c0e7d7fc454fb87a5d6bf64bac729855d2203e\n9db0f1de4784bb3c030d6e9463ecde8c57d39112'
 3473  echo $astRevisions
 3474  echo $lastRevisions
 3475  echo $lastRevisions | cut -d' ' -f1
 3476  man tail
 3477  echo 24db67db3e36e05eb5fdbd61046745805696d778 996c93d3b079b566fcc734a2de206b2f7d746adf 045abcbdcc16c2f8f6c6a0d9845d3d19a957585c 6779be825e4714d433c1c43450f320285941a977 cac3ebc09aee7d57e7d8c094619a0b1ef77940c1 1cae197365d9ffb3159defdf482d368dd42a1ca6 26ef22c82afcde1681cb2ce00d961c2477716a44 7737603805b757bc650c0b3a141368dbb3fde6db 9273c393ba633dba233c602b002b482b4c46cdc2 8c976b7b77d19d7b8230ccd1ac98ab36912c4309 8bcfc7c3a973023021da4c3c60d19abb88467a54 4405de24d0e83dbdda0accb986747f5bc287df4e ac1c509f460077f1d765993d48b52d0a58b1ecee 3d233895b46b77caa8eb45de3452d59af6641556 0d1d222da81af8f6e33af41bbb945f0ddfec7b6e c7a4d51db6e9497e8c0429c23128565a86cbf8ef 748d6974779aca7989c8bbb526f94fb3b7cda6a6 abea80db7e8f8c0329868558f291b3109a21e02b b92c86ba5a04cb3f716ae404a66bcffdcc699757 2ac70b74c81afc9b01c2618f29999500ba620006 aeace2595c649b8da1ac7dcc341283ddcb68fbc8 4f9dab37458c9ba46ec6dfdbac167f9de37d4a42 5b8d26c0733ae89b6e71f3c8e73cc245ed4e9d32 6c4a4c3840c7b2a00b3668403c8a9c49548a3874 360b1f84d8ca8d7bf2e6274c61a713febb67de4a 902af4e82928e9a72642ae9a96a6d32e7d19f967 81c0e7d7fc454fb87a5d6bf64bac729855d2203e 9db0f1de4784bb3c030d6e9463ecde8c57d39112
 3478  echo 24db67db3e36e05eb5fdbd61046745805696d778 996c93d3b079b566fcc734a2de206b2f7d746adf 045abcbdcc16c2f8f6c6a0d9845d3d19a957585c 6779be825e4714d433c1c43450f320285941a977 cac3ebc09aee7d57e7d8c094619a0b1ef77940c1 1cae197365d9ffb3159defdf482d368dd42a1ca6 26ef22c82afcde1681cb2ce00d961c2477716a44 7737603805b757bc650c0b3a141368dbb3fde6db 9273c393ba633dba233c602b002b482b4c46cdc2 8c976b7b77d19d7b8230ccd1ac98ab36912c4309 8bcfc7c3a973023021da4c3c60d19abb88467a54 4405de24d0e83dbdda0accb986747f5bc287df4e ac1c509f460077f1d765993d48b52d0a58b1ecee 3d233895b46b77caa8eb45de3452d59af6641556 0d1d222da81af8f6e33af41bbb945f0ddfec7b6e c7a4d51db6e9497e8c0429c23128565a86cbf8ef 748d6974779aca7989c8bbb526f94fb3b7cda6a6 abea80db7e8f8c0329868558f291b3109a21e02b b92c86ba5a04cb3f716ae404a66bcffdcc699757 2ac70b74c81afc9b01c2618f29999500ba620006 aeace2595c649b8da1ac7dcc341283ddcb68fbc8 4f9dab37458c9ba46ec6dfdbac167f9de37d4a42 5b8d26c0733ae89b6e71f3c8e73cc245ed4e9d32 6c4a4c3840c7b2a00b3668403c8a9c49548a3874 360b1f84d8ca8d7bf2e6274c61a713febb67de4a 902af4e82928e9a72642ae9a96a6d32e7d19f967 81c0e7d7fc454fb87a5d6bf64bac729855d2203e 9db0f1de4784bb3c030d6e9463ecde8c57d39112 | tail -l1
 3479  echo 24db67db3e36e05eb5fdbd61046745805696d778 996c93d3b079b566fcc734a2de206b2f7d746adf 045abcbdcc16c2f8f6c6a0d9845d3d19a957585c 6779be825e4714d433c1c43450f320285941a977 cac3ebc09aee7d57e7d8c094619a0b1ef77940c1 1cae197365d9ffb3159defdf482d368dd42a1ca6 26ef22c82afcde1681cb2ce00d961c2477716a44 7737603805b757bc650c0b3a141368dbb3fde6db 9273c393ba633dba233c602b002b482b4c46cdc2 8c976b7b77d19d7b8230ccd1ac98ab36912c4309 8bcfc7c3a973023021da4c3c60d19abb88467a54 4405de24d0e83dbdda0accb986747f5bc287df4e ac1c509f460077f1d765993d48b52d0a58b1ecee 3d233895b46b77caa8eb45de3452d59af6641556 0d1d222da81af8f6e33af41bbb945f0ddfec7b6e c7a4d51db6e9497e8c0429c23128565a86cbf8ef 748d6974779aca7989c8bbb526f94fb3b7cda6a6 abea80db7e8f8c0329868558f291b3109a21e02b b92c86ba5a04cb3f716ae404a66bcffdcc699757 2ac70b74c81afc9b01c2618f29999500ba620006 aeace2595c649b8da1ac7dcc341283ddcb68fbc8 4f9dab37458c9ba46ec6dfdbac167f9de37d4a42 5b8d26c0733ae89b6e71f3c8e73cc245ed4e9d32 6c4a4c3840c7b2a00b3668403c8a9c49548a3874 360b1f84d8ca8d7bf2e6274c61a713febb67de4a 902af4e82928e9a72642ae9a96a6d32e7d19f967 81c0e7d7fc454fb87a5d6bf64bac729855d2203e 9db0f1de4784bb3c030d6e9463ecde8c57d39112 | tail -l 1
 3480  man awk
 3481  echo 24db67db3e36e05eb5fdbd61046745805696d778 996c93d3b079b566fcc734a2de206b2f7d746adf 045abcbdcc16c2f8f6c6a0d9845d3d19a957585c 6779be825e4714d433c1c43450f320285941a977 cac3ebc09aee7d57e7d8c094619a0b1ef77940c1 1cae197365d9ffb3159defdf482d368dd42a1ca6 26ef22c82afcde1681cb2ce00d961c2477716a44 7737603805b757bc650c0b3a141368dbb3fde6db 9273c393ba633dba233c602b002b482b4c46cdc2 8c976b7b77d19d7b8230ccd1ac98ab36912c4309 8bcfc7c3a973023021da4c3c60d19abb88467a54 4405de24d0e83dbdda0accb986747f5bc287df4e ac1c509f460077f1d765993d48b52d0a58b1ecee 3d233895b46b77caa8eb45de3452d59af6641556 0d1d222da81af8f6e33af41bbb945f0ddfec7b6e c7a4d51db6e9497e8c0429c23128565a86cbf8ef 748d6974779aca7989c8bbb526f94fb3b7cda6a6 abea80db7e8f8c0329868558f291b3109a21e02b b92c86ba5a04cb3f716ae404a66bcffdcc699757 2ac70b74c81afc9b01c2618f29999500ba620006 aeace2595c649b8da1ac7dcc341283ddcb68fbc8 4f9dab37458c9ba46ec6dfdbac167f9de37d4a42 5b8d26c0733ae89b6e71f3c8e73cc245ed4e9d32 6c4a4c3840c7b2a00b3668403c8a9c49548a3874 360b1f84d8ca8d7bf2e6274c61a713febb67de4a 902af4e82928e9a72642ae9a96a6d32e7d19f967 81c0e7d7fc454fb87a5d6bf64bac729855d2203e 9db0f1de4784bb3c030d6e9463ecde8c57d39112 | cut -d' ' -f0-
 3482  echo 24db67db3e36e05eb5fdbd61046745805696d778 996c93d3b079b566fcc734a2de206b2f7d746adf 045abcbdcc16c2f8f6c6a0d9845d3d19a957585c 6779be825e4714d433c1c43450f320285941a977 cac3ebc09aee7d57e7d8c094619a0b1ef77940c1 1cae197365d9ffb3159defdf482d368dd42a1ca6 26ef22c82afcde1681cb2ce00d961c2477716a44 7737603805b757bc650c0b3a141368dbb3fde6db 9273c393ba633dba233c602b002b482b4c46cdc2 8c976b7b77d19d7b8230ccd1ac98ab36912c4309 8bcfc7c3a973023021da4c3c60d19abb88467a54 4405de24d0e83dbdda0accb986747f5bc287df4e ac1c509f460077f1d765993d48b52d0a58b1ecee 3d233895b46b77caa8eb45de3452d59af6641556 0d1d222da81af8f6e33af41bbb945f0ddfec7b6e c7a4d51db6e9497e8c0429c23128565a86cbf8ef 748d6974779aca7989c8bbb526f94fb3b7cda6a6 abea80db7e8f8c0329868558f291b3109a21e02b b92c86ba5a04cb3f716ae404a66bcffdcc699757 2ac70b74c81afc9b01c2618f29999500ba620006 aeace2595c649b8da1ac7dcc341283ddcb68fbc8 4f9dab37458c9ba46ec6dfdbac167f9de37d4a42 5b8d26c0733ae89b6e71f3c8e73cc245ed4e9d32 6c4a4c3840c7b2a00b3668403c8a9c49548a3874 360b1f84d8ca8d7bf2e6274c61a713febb67de4a 902af4e82928e9a72642ae9a96a6d32e7d19f967 81c0e7d7fc454fb87a5d6bf64bac729855d2203e 9db0f1de4784bb3c030d6e9463ecde8c57d39112 | cut -d' ' -f1-
 3483  echo 24db67db3e36e05eb5fdbd61046745805696d778 996c93d3b079b566fcc734a2de206b2f7d746adf 045abcbdcc16c2f8f6c6a0d9845d3d19a957585c 6779be825e4714d433c1c43450f320285941a977 cac3ebc09aee7d57e7d8c094619a0b1ef77940c1 1cae197365d9ffb3159defdf482d368dd42a1ca6 26ef22c82afcde1681cb2ce00d961c2477716a44 7737603805b757bc650c0b3a141368dbb3fde6db 9273c393ba633dba233c602b002b482b4c46cdc2 8c976b7b77d19d7b8230ccd1ac98ab36912c4309 8bcfc7c3a973023021da4c3c60d19abb88467a54 4405de24d0e83dbdda0accb986747f5bc287df4e ac1c509f460077f1d765993d48b52d0a58b1ecee 3d233895b46b77caa8eb45de3452d59af6641556 0d1d222da81af8f6e33af41bbb945f0ddfec7b6e c7a4d51db6e9497e8c0429c23128565a86cbf8ef 748d6974779aca7989c8bbb526f94fb3b7cda6a6 abea80db7e8f8c0329868558f291b3109a21e02b b92c86ba5a04cb3f716ae404a66bcffdcc699757 2ac70b74c81afc9b01c2618f29999500ba620006 aeace2595c649b8da1ac7dcc341283ddcb68fbc8 4f9dab37458c9ba46ec6dfdbac167f9de37d4a42 5b8d26c0733ae89b6e71f3c8e73cc245ed4e9d32 6c4a4c3840c7b2a00b3668403c8a9c49548a3874 360b1f84d8ca8d7bf2e6274c61a713febb67de4a 902af4e82928e9a72642ae9a96a6d32e7d19f967 81c0e7d7fc454fb87a5d6bf64bac729855d2203e 9db0f1de4784bb3c030d6e9463ecde8c57d39112 | cut -d' ' -f 1-
 3484  echo 24db67db3e36e05eb5fdbd61046745805696d778 996c93d3b079b566fcc734a2de206b2f7d746adf 045abcbdcc16c2f8f6c6a0d9845d3d19a957585c 6779be825e4714d433c1c43450f320285941a977 cac3ebc09aee7d57e7d8c094619a0b1ef77940c1 1cae197365d9ffb3159defdf482d368dd42a1ca6 26ef22c82afcde1681cb2ce00d961c2477716a44 7737603805b757bc650c0b3a141368dbb3fde6db 9273c393ba633dba233c602b002b482b4c46cdc2 8c976b7b77d19d7b8230ccd1ac98ab36912c4309 8bcfc7c3a973023021da4c3c60d19abb88467a54 4405de24d0e83dbdda0accb986747f5bc287df4e ac1c509f460077f1d765993d48b52d0a58b1ecee 3d233895b46b77caa8eb45de3452d59af6641556 0d1d222da81af8f6e33af41bbb945f0ddfec7b6e c7a4d51db6e9497e8c0429c23128565a86cbf8ef 748d6974779aca7989c8bbb526f94fb3b7cda6a6 abea80db7e8f8c0329868558f291b3109a21e02b b92c86ba5a04cb3f716ae404a66bcffdcc699757 2ac70b74c81afc9b01c2618f29999500ba620006 aeace2595c649b8da1ac7dcc341283ddcb68fbc8 4f9dab37458c9ba46ec6dfdbac167f9de37d4a42 5b8d26c0733ae89b6e71f3c8e73cc245ed4e9d32 6c4a4c3840c7b2a00b3668403c8a9c49548a3874 360b1f84d8ca8d7bf2e6274c61a713febb67de4a 902af4e82928e9a72642ae9a96a6d32e7d19f967 81c0e7d7fc454fb87a5d6bf64bac729855d2203e 9db0f1de4784bb3c030d6e9463ecde8c57d39112 | cut -d' ' -f1
 3485  echo 24db67db3e36e05eb5fdbd61046745805696d778 996c93d3b079b566fcc734a2de206b2f7d746adf 045abcbdcc16c2f8f6c6a0d9845d3d19a957585c 6779be825e4714d433c1c43450f320285941a977 cac3ebc09aee7d57e7d8c094619a0b1ef77940c1 1cae197365d9ffb3159defdf482d368dd42a1ca6 26ef22c82afcde1681cb2ce00d961c2477716a44 7737603805b757bc650c0b3a141368dbb3fde6db 9273c393ba633dba233c602b002b482b4c46cdc2 8c976b7b77d19d7b8230ccd1ac98ab36912c4309 8bcfc7c3a973023021da4c3c60d19abb88467a54 4405de24d0e83dbdda0accb986747f5bc287df4e ac1c509f460077f1d765993d48b52d0a58b1ecee 3d233895b46b77caa8eb45de3452d59af6641556 0d1d222da81af8f6e33af41bbb945f0ddfec7b6e c7a4d51db6e9497e8c0429c23128565a86cbf8ef 748d6974779aca7989c8bbb526f94fb3b7cda6a6 abea80db7e8f8c0329868558f291b3109a21e02b b92c86ba5a04cb3f716ae404a66bcffdcc699757 2ac70b74c81afc9b01c2618f29999500ba620006 aeace2595c649b8da1ac7dcc341283ddcb68fbc8 4f9dab37458c9ba46ec6dfdbac167f9de37d4a42 5b8d26c0733ae89b6e71f3c8e73cc245ed4e9d32 6c4a4c3840c7b2a00b3668403c8a9c49548a3874 360b1f84d8ca8d7bf2e6274c61a713febb67de4a 902af4e82928e9a72642ae9a96a6d32e7d19f967 81c0e7d7fc454fb87a5d6bf64bac729855d2203e 9db0f1de4784bb3c030d6e9463ecde8c57d39112 | awk '{print $NF}'
 3486  git commit -m "get last commits even if the number differs"
 3487  git ls-files --deleted
 3488  git diff --name-only f0185d97308fd1894a01e3ba6dd4939cf47a97c8 9db0f1de4784bb3c030d6e9463ecde8c57d39112
 3489  git diff help
 3490  git diff --name-only f0185d97308fd1894a01e3ba6dd4939cf47a97c8 9db0f1de4784bb3c030d6e9463ecde8c57d39112 | grep configs/iam-users-inventory/users-groups
 3491  git log --all --pretty=format: --name-only --diff-filter=D
 3492  git log help
 3493  git log --diff-filter=D --summary
 3494  git log --diff-filter=D --summary | grep delete
 3495  git log --diff-filter=D --summary | grep "delete mode"
 3496  git log --diff-filter=D | grep "delete mode"
 3497  git log --diff-filter=D
 3498  git diff f0185d97308fd1894a01e3ba6dd4939cf47a97c8 9db0f1de4784bb3c030d6e9463ecde8c57d39112
 3499  git log --diff-filter=D --summary f0185d97308fd1894a01e3ba6dd4939cf47a97c8 9db0f1de4784bb3c030d6e9463ecde8c57d39112 | grep "delete mode"
 3500  git log --diff-filter=D --summary f0185d97308fd1894a01e3ba6dd4939cf47a97c8 9db0f1de4784bb3c030d6e9463ecde8c57d39112 | grep "delete mode" | grep "configs/iam-users-inventory/users-groups"
 3501  git log --diff-filter=D --summary f0185d97308fd1894a01e3ba6dd4939cf47a97c8 9db0f1de4784bb3c030d6e9463ecde8c57d39112 | grep "delete mode" | grep "configs/iam-users-inventory/users-groups" | cut -d' ' -f4
 3502  git log --diff-filter=D --summary f0185d97308fd1894a01e3ba6dd4939cf47a97c8 9db0f1de4784bb3c030d6e9463ecde8c57d39112 | grep "delete mode" | grep "configs/iam-users-inventory/users-groups" | cut -d' ' -f5
 3503  git log --diff-filter=D --summary f0185d97308fd1894a01e3ba6dd4939cf47a97c8 9db0f1de4784bb3c030d6e9463ecde8c57d39112 | grep 'delete mode' | grep 'configs/iam-users-inventory/users-groups' | cut -d' ' -f5
 3504  git commit -m "get groups to delete"
 3505  gdgd
 3506  git checkout scripts/sync-kc/v1/add-update.py
 3507  git commit -m "clean trailing spaces"
 3508  git commit -m "make logs"
 3509  python3 ./scripts/sync-kc/v1/add-update.py
 3510  python3 ./scripts/sync-kc/v1/add-update.py configs/iam-users-inventory/users-groups/bdadmin.yml\nconfigs/iam-users-inventory/users-groups/bdbilling.yml\nconfigs/iam-users-inventory/users-groups/bddev.yml d50c95b38c4cbee169d72d21ff3c525cdc4724cc
 3511  python3 ./scripts/sync-kc/v1/add-update.py configs/iam-users-inventory/users-groups/bdadmin.yml\nconfigs/iam-users-inventory/users-groups/bdbilling.yml\nconfigs/iam-users-inventory/users-groups/bddev.yml d50c95b38c4cbee169d72d21ff3c525cdc4724cc
 3512  git commit -m "set add-update script"
 3513  git commit -m "remove sync-kc script"
 3514  cat .yamllint
 3515  git commit -m "add delete command"
 3516  git commit -m "logs"
 3517  git commit -m "delete roles associated to the group"
 3518  git commit -m "get params in secrets"
 3519  git commit -m "add stamp and include in circle"
 3520  git fetch && git checkout features
 3521  git checkout master 
 3522  git checkout features/sync-kc-users-roles
 3523  git checkout -b feature/notresource
 3524  git push --set-upstream origin feature/notresource
 3525  git commit -m "add notresource element"
 3526  ggst
 3527  git checkout my-gcp
 3528  mv kubernetes-formation kubernetes-formation_forked
 3529  l kubernetes-formation
 3530  cd kubernetes-formation
 3531  apt search iceweasel
 3532  git branch -d feature/notresource
 3533  ssh -p 64535 34.238.243.7
 3534  touch dafuck
 3535  aws s3 cp dafuck s3://seloger-central-shared-services-infra-bucket/
 3536  rm dafuck
 3537  git commit -m "set py3 img"
 3538  touch toto
 3539  aws s3 cp toto s3://seloger-central-shared-services-infra-bucket/
 3540  aws s3 ls s3://seloger-central-shared-services-infra-bucket/toto
 3541  aws s3 cp s3://seloger-central-shared-services-infra-bucket/toto toto2
 3542  ssh -p 64535 3.95.163.138\n
 3543  ssh -p 64535 54.221.59.251\n\n
 3544  cd ../sl_ops-aws-iam
 3545  git commit -m "handle recovery in lambda keyrotator"
 3546  ./aws-cloudform.sh --account central-shared-services --profile central-shared-services-ci --test
 3547  ./aws-cloudform.sh --account central-shared-services --profile sl-central-shared-services-ci --test
 3548  ./aws-cloudform.sh --account central-shared-services --profile sl-central-shared-services --test
 3549  git clone git@github.com:axel-springer-kugawana/li_ops-lineuf-aws.git
 3550  git branch -d feature/add-notaction
 3551  git checkout -b feature/transverse-update-for-boundaries
 3552  git push --set-upstream origin feature/transverse-update-for-boundaries
 3553  git commit -m "managed policies for everybody"
 3554  cd li_ops-lineuf-aws
 3555  git commit -m "is app"
 3556  ssh -p 64536 54.152.119.199\n\n
 3557  ssh -p 64535 107.23.205.42\n*
 3558  ssh -p 64538 3.80.56.140\n\n
 3559  export AWS_PROFILE=sl-digital-nonprod
 3560  aws s3 cp s3://seloger-central-shared-services-infra-bucket/scripts/aws-clouddrop/v2/aws-clouddrop.sh aws-clouddrop.sh
 3561  rm aws-clouddrop.sh
 3562  git commit -m "fix yaml indent"
 3563  git commit -m "fix lineuf"
 3564  ./aws-cloudform.sh --account digital-nonprod --profile sl-digital-nonprod --test
 3565  git checkout feature/transverse-update-for-boundaries
 3566  git commit -m "import lineuf modifications"
 3567  cd ../sl_security-aws-iam-users
 3568  l
 3569  gst
 3570  gb
 3571  git branch -d features/sync-kc-users-roles
 3572  git log
 3573  pwd
 3574  cd sl_docker-awscli
 3575  gp
 3576  vim Dockerfile
 3577  pip3 install --upgrade --user requests
 3578  gst
 3579  gd
 3580  git add .
 3581  git commit -m "add requests lib"
 3582  git push
 3583  gst
 3584  gb
 3585  gst
 3586  gd
 3587  git add .
 3588  git commit -m "use base docker awscli"
 3589  git push
 3590  gst
 3591  gd
 3592  git add .
 3593  git commit -m "add boto3"
 3594  git push
 3595  gst
 3596  git checkout master
 3597  gp
 3598  git log
 3599  apt search gnome3
 3600  vim pCloudDrive/notes/todo.txt
 3601  cd sl_ops-aws-iam
 3602  l
 3603  vim scripts/iam-tools/v1/generate-cfn.py
 3604  ssh -p 64536 54.152.144.101
 3605  gst
 3606  gp
 3607  git log
 3608  gst
 3609  ./generate-cfn.sh
 3610  export AWS_PROFILE=sl-central-auth
 3611  ./aws-cloudform.sh --account central-auth --profile sl-central-auth --test
 3612  ./aws-cloudform.sh --account central-auth --profile sl-central-auth
 3613  ./aws-cloudform.sh --account central-auth --profile sl-central-auth --category 002-iamaccess --stack 021-security.yml
 3614  cd sl_security-aws-iam-users
 3615  gp
 3616  gst
 3617  gd
 3618  git add .
 3619  git commit -m "update security rights"
 3620  git push
 3621  export AWS_PROFILE=sl-central-auth
 3622  ./generate-cfn-users.sh
 3623  ./sync-kc.sh
 3624  vim sync-kc.sh
 3625  ./sync-kc.sh
 3626  aws ssm get-parameter --name /lastRevValidated/sl_security-aws-iam-users/master
 3627  gst
 3628  gd
 3629  greset
 3630  gst
 3631  gp
 3632  gst
 3633  gp
 3634  gst
 3635  gd
 3636  git add .
 3637  git commit -m "add security tech repo"
 3638  git push
 3639  gst
 3640  cd sl_security-keycloak-aws-infra
 3641  gst
 3642  git checkout master
 3643  gp
 3644  gst
 3645  gd
 3646  git add .
 3647  git commit -m "unactive waf path rule for circle"
 3648  git push
 3649  gst
 3650  cd ..
 3651  l
 3652  mv sl_ops-aws-iam sl_security-aws-iam-tech
 3653  cd sl_security-aws-iam-tech
 3654  l
 3655  vim .git/config
 3656  gp
 3657  gst
 3658  gb
 3659  git branch -d feature/transverse-update-for-boundaries
 3660  gst
 3661  ./generate-cfn.sh
 3662  ./push-iam-inventory.sh
 3663  export AWS_PROFILE=sl-central-auth
 3664  ./push-iam-inventory.sh
 3665  ./push-key-rotator.sh
 3666  gst
 3667  cd ..
 3668  gst
 3669  cd ..
 3670  l
 3671  cd sl_security-keycloak-aws-infra
 3672  gst
 3673  gp
 3674  gst
 3675  gp
 3676  gst
 3677  gp
 3678  cd ../
 3679  l
 3680  git clone git@github.com:axel-springer-kugawana/sl_aws-data-base-infra.git
 3681  git clone git@github.com:axel-springer-kugawana/sl_data-aws-base-infra.git
 3682  cd sl_security-keycloak-aws-infra
 3683  gst
 3684  gp
 3685  gst
 3686  gp
 3687  gb
 3688  git branch -d feature/alb-rule-protect
 3689  gb
 3690  git branch -d feature/automate-kc-users
 3691  gb
 3692  gst
 3693  g
 3694  gp
 3695  gst
 3696  git checkout -b feature/ecs
 3697  git push
 3698  git push --set-upstream origin feature/ecs
 3699  gst
 3700  gp
 3701  diff -bur cfn/templates/ecs/v2 cfn/templates/ecs/v3
 3702  cd dev/www/seloger
 3703  grep -nri ecs/v3 .
 3704  cat ./sl_aws-base-infra/build/cfn/templates/ecs/v3/main.yml
 3705  vim ./sl_aws-base-infra/build/cfn/templates/ecs/v3/main.yml
 3706  vim ./sl_data-aws-base-infra/cfn/templates/ecs/v2/main.yml
 3707  export AWS_PROFILE=sl-central-auth
 3708  ./aws-cloudform.sh --account central-auth --profile sl-central-auth --test
 3709  gst
 3710  git add .
 3711  git commit -m "init ecs"
 3712  git push
 3713  export AWS_PROFILE=sl-central-auth
 3714  ./aws-cloudform.sh --account central-auth --profile sl-central-auth
 3715  ./aws-cloudform.sh --account central-auth --profile sl-central-auth --test
 3716  ./aws-cloudform.sh --account central-auth --profile sl-central-auth --cfn-nag | grep Fail
 3717  gst
 3718  ./aws-cloudform.sh --account central-auth --profile sl-central-auth --cfn-nag | grep Fail
 3719  ./aws-cloudform.sh --account central-auth --profile sl-central-auth --test
 3720  ./aws-cloudform.sh --account central-auth --profile sl-central-auth
 3721  gcloud
 3722  ./aws-cloudform.sh --account central-auth --profile sl-central-auth --cfn-nag | grep Fail
 3723  gst
 3724  gd
 3725  git add .
 3726  git commit -m "fix"
 3727  git push
 3728  ./aws-cloudform.sh --account central-auth --profile sl-central-auth
 3729  cd sl_security-keycloak-docker
 3730  gp
 3731  l
 3732  pwd
 3733  gst
 3734  gp
 3735  git checkout -b feature/ecs
 3736  git push
 3737  git checkout master
 3738  git branch -d feature/ecs
 3739  gp
 3740  mkdir .aws
 3741  touch .aws/ecs.yml
 3742  gst
 3743  gd
 3744  gst
 3745  gd
 3746  gst
 3747  gd
 3748  l
 3749  vim scripts/balek.sh
 3750  chmod +x ./scripts/
 3751  l
 3752  ./scripts/balek.sh
 3753  bash ./scripts/balek.sh
 3754  gst
 3755  l
 3756  pwd
 3757  gst
 3758  gd
 3759  gst
 3760  gd
 3761  cd kubernetes-formation/kubernetes-ressources/terraform
 3762  l ~/.ssh/
 3763  l ~/.ssh/seloger
 3764  gst
 3765  gd
 3766  ./aws-cloudform.sh --account central-auth --profile sl-central-auth
 3767  ./aws-cloudform.sh --account central-auth --profile sl-central-auth --test
 3768  ./aws-cloudform.sh --account central-auth --profile sl-central-auth --cfn-nag | grep Fail
 3769  ./aws-cloudform.sh --account central-auth --profile sl-central-auth
 3770  l .ssh/seloger
 3771  ssh -i ~/.ssh/seloger/central-auth-keycloak-dev.pem centos@10.105.4.223
 3772  ssh -i ~/.ssh/seloger/central-auth-keycloak-dev.pem ec2-user@10.105.4.223
 3773  tmux
 3774  ssh -i ~/.ssh/seloger/central-auth-keycloak-dev.pem ec2-user@10.105.4.223
 3775  ssh -i ~/.ssh/seloger/central-auth-keycloak-dev.pem ec2-user@10.105.5.234
 3776  gst
 3777  gd
 3778  git add .
 3779  git commit -m "fix ecs"
 3780  git push
 3781  gst
 3782  vim pCloudDrive/notes/todo.txt
 3783  l
 3784  cd sl_security-aws-iam-tech
 3785  l
 3786  gst
 3787  gp
 3788  git log
 3789  cd ..
 3790  cd sl_security-keycloak-aws-infra
 3791  gst
 3792  gd
 3793  git add .
 3794  git commit -m "set one instance"
 3795  git push
 3796  ./aws-cloudform.sh --account central-auth --profile sl-central-auth
 3797  cd sl_security-keycloak-docker
 3798  pwd
 3799  gst
 3800  gd
 3801  git add .
 3802  gst
 3803  git commit -m "set new deploy pattern"
 3804  gst
 3805  git push
 3806  ssh -i ~/.ssh/seloger/central-auth-keycloak-dev.pem ec2-user@10.105.4.223
 3807  gst
 3808  ./aws-cloudform.sh --account central-auth --profile sl-central-auth --category 001-keycloak-dev
 3809  gst
 3810  gd
 3811  gst
 3812  gd
 3813  git add .
 3814  git commit -m "activate https redirector"
 3815  git push
 3816  gst
 3817  git checkout -b feature/ecs
 3818  git checkout -b features
 3819  gst
 3820  git push
 3821  git push --set-upstream origin features
 3822  git checkout feature/ecs
 3823  gst
 3824  gp
 3825  gst
 3826  cd pCloudDrive/notes
 3827  l
 3828  rm :w
 3829  l
 3830  cd tasks
 3831  l
 3832  cd seloger
 3833  l
 3834  pwd
 3835  touch 2019-09_keycloak-ecs.txt
 3836  vim 2019-09_
 3837  vim 2019-09_keycloak-ecs.txt
 3838  pwd
 3839  gst
 3840  ssh -p 64535 3.84.153.140\n
 3841  gst
 3842  gd
 3843  git add .
 3844  git commit -m "retry"
 3845  git push
 3846  gst
 3847  gd
 3848  git add .
 3849  git commit -m "fix secret key"
 3850  git push
 3851  gst
 3852  l
 3853  gst
 3854  pwd
 3855  l
 3856  gst
 3857  gd
 3858  git add .
 3859  gst
 3860  gd
 3861  git add .
 3862  git commit -m "set env vars"
 3863  git push
 3864  gst
 3865  cd Téléchargements
 3866  vim 002-asg.yml
 3867  l
 3868  export AWS_PROFILE=sl-central-auth
 3869  export CONTAINER_NAME=keycloak
 3870  aws s3 cp s3://seloger-central-shared-services-infra-bucket/scripts/ecr/v1/build.sh - | bash
 3871  export AWS_ORG=seloger
 3872  export AWS_ACCOUNT_ID=673277413506
 3873  aws s3 cp s3://seloger-central-shared-services-infra-bucket/scripts/ecr/v1/build.sh - | bash
 3874  vim ~/.zshrc
 3875  . ~/.zshrc
 3876  echo $CLUSTER_NAME
 3877  ssh -p 64535 34.203.193.101\n\n
 3878  . ~/.zshrc
 3879  echo $AWS_CONTEXT
 3880  . ~/.zshrc
 3881  echo $AWS_CONTEXT
 3882  sh ./scripts/ecr/v1/build.sh
 3883  gst
 3884  docker ps
 3885  docker images
 3886  gst
 3887  git checkout scripts/ecr/v1/push.sh
 3888  gst
 3889  vim ~/.zshrc
 3890  gst
 3891  gd
 3892  gst
 3893  . ~/.zshrc
 3894  bash ./scripts/ecr/v1/build.sh
 3895  bash ./scripts/ecr/v1/push.sh
 3896  export AWS_PROFILE=sl-central-auth
 3897  bash ./scripts/ecr/v1/push.sh
 3898  gst
 3899  git checkout scripts/ecr/v1/ecr_lifecycle.json.j2
 3900  git checkout scripts/ecr/v1/ecr_permissions.json.j2
 3901  bash ./scripts/ecr/v1/push.sh
 3902  gst
 3903  bash ./scripts/ecs/v1/deploy-env.sh
 3904  gst
 3905  gd
 3906  bash ./scripts/ecs/v1/deploy-env.sh
 3907  export CIRCLE_SHA1=253e9fd9376977633f7450549c3fdafe52fe69d9
 3908  bash ./scripts/ecs/v1/deploy-env.sh
 3909  $$$
 3910  bash ./scripts/ecr/v1/push.sh
 3911  bash ./scripts/ecs/v1/deploy-env.sh
 3912  gst
 3913  gd
 3914  greset
 3915  gst
 3916  gp
 3917  git checkout master
 3918  gp
 3919  gst
 3920  gb
 3921  gst
 3922  greset
 3923  gst
 3924  git log
 3925  git reset --hard 95ab4af8fa2f32449cfa75545353086cdbdcfba2
 3926  gst
 3927  git push -f origin 95ab4af8fa2f32449cfa75545353086cdbdcfba2:master
 3928  git status
 3929  git log
 3930  git add .
 3931  git commit -m "remove docker layer caching"
 3932  gst
 3933  git push
 3934  gst
 3935  gp
 3936  ssh -p 64543 35.175.149.195\n\n
 3937  tree
 3938  touch test
 3939  gst
 3940  rm test
 3941  gst
 3942  git log
 3943  touch test
 3944  git add .
 3945  git commit -m "test"
 3946  git push
 3947  gst
 3948  gd
 3949  gst
 3950  gd
 3951  gst
 3952  gd
 3953  git add .
 3954  rm test
 3955  gst
 3956  git add .
 3957  git commit -m "update pipeline"
 3958  git push
 3959  gst
 3960  gp
 3961  git log
 3962  gst
 3963  l
 3964  ssh -p 64537 3.86.190.206
 3965  l
 3966  history | git re
 3967  history | grep "git re"
 3968  history
 3969  git reset --hard 95ab4af8fa2f32449cfa75545353086cdbdcfba2
 3970  git push -f origin 95ab4af8fa2f32449cfa75545353086cdbdcfba2:master
 3971  git push
 3972  gst
 3973  git add .
 3974  git commit -m "remove trailing spaces"
 3975  git push
 3976  gst
 3977  cat ~/.ssh/seloger/central-auth-keycloak-dev.pem
 3978  cat ~/.ssh/seloger/central-auth-keycloak-prod.pem
 3979  tmux
 3980  ssh -i ~/.ssh/seloger/central-auth-keycloak-dev.pem ec2-user@10.105.5.141
 3981  ssh -i ~/.ssh/seloger/central-auth-keycloak-dev.pem centos@10.105.5.141
 3982  l
 3983  git clone git@github.com:axel-springer-kugawana/sl_docker-cfn-nag.git
 3984  cd sl_docker-cfn-nag
 3985  gst
 3986  gd
 3987  docker build -t cfn-nag .
 3988  gst
 3989  gd
 3990  git add .
 3991  git commit -m "allow debug"
 3992  gst
 3993  git push
 3994  gst
 3995  vim pCloudDrive/notes/todo.txt
 3996  grep -nri sAMAccountName .
 3997  grep -nr sAMAccountName .
 3998  htop
 3999  apt search waylanf
 4000  apt search wayland
 4001  gst
 4002  cd ..
 4003  tcpdump
 4004  apt search tcpdump
 4005  sudo apt install -y tcpdump
 4006  tcpdump
 4007  _tcpdump 
 4008  apt search tcpdump
 4009  apt search nmap
 4010  cd sl_security-aws-in
 4011  cd sl_security-keycloak-aws-infra
 4012  gp
 4013  gst
 4014  git checkout -b feature/build-prod-env
 4015  git push
 4016  git push --set-upstream origin feature/build-prod-env
 4017  gst
 4018  git checkout master
 4019  git checkout feature/build-prod-env
 4020  export AWS_PROFILE=sl-central-auth
 4021  aws s3 ls
 4022  export AWS_PROFILE=sl-central-auth
 4023  aws s3 ls
 4024  git add .
 4025  git commit -m "init prod"
 4026  git push
 4027  gst
 4028  ./aws-cloudform.sh --account central-auth --profile sl-central-auth --category 002-keycloak-prod
 4029  tmux
 4030  ps aux | grep tmux
 4031  bash
 4032  vim pCloudDrive/notes/todo.txt
 4033  ssh -i ~/.ssh/seloger/central-auth-keycloak-prod.pem centos@10.105.6.247
 4034  cd .sec/seloger/forti-vpn
 4035  l
 4036  screenfetch
 4037  ./launch-forticli.sh
 4038  ssh -i ~/.ssh/seloger/central-auth-keycloak-prod.pem centos@10.105.6.247
 4039  l
 4040  pwd
 4041  python3 01-basics/10-dictionaries.py
 4042  python3 01-basics/11-functions.py
 4043  gst
 4044  ssh -i ~/.ssh/seloger/central-auth-keycloak-prod.pem centos@10.105.6.247
 4045  pwd
 4046  l
 4047  ./aws-cloudform.sh --account central-auth --profile sl-central-auth --category 002-keycloak-prod --stack 001-postgres-serverless.yml
 4048  gst
 4049  gd
 4050  gst
 4051  gd
 4052  gst
 4053  git add .
 4054  git commit -m "udpate for automation"
 4055  git push
 4056  ./aws-cloudform.sh --account central-auth --profile sl-central-auth --category 002-keycloak-prod --stack 002-asg.yml
 4057  ssh -i ~/.ssh/seloger/central-auth-keycloak-dev.pem centos@10.105.6.198
 4058  ./launch-forticli.sh
 4059  ssh -i ~/.ssh/seloger/central-auth-keycloak-dev.pem centos@10.105.6.198
 4060  ssh-keygen -f "/home/jdx/.ssh/known_hosts" -R "10.105.6.198"
 4061  ssh -i ~/.ssh/seloger/central-auth-keycloak-dev.pem centos@10.105.6.198
 4062  ssh -i ~/.ssh/seloger/central-auth-keycloak-prod.pem centos@10.105.6.198
 4063  cd pCloudDrive
 4064  l
 4065  grep -nri pgsql .
 4066  cd notes
 4067  grep -nri pgsql .
 4068  grep -nri pg .
 4069  ssh -i ~/.ssh/seloger/central-auth-keycloak-prod.pem centos@10.105.6.198
 4070  ssh -i ~/.ssh/seloger/central-auth-keycloak-prod.pem centos@10.105.6.247
 4071  ssh -i ~/.ssh/seloger/central-auth-keycloak-prod.pem centos@10.105.6.198
 4072  grep -nri psql .
 4073  ssh -i ~/.ssh/seloger/central-auth-keycloak-prod.pem centos@10.105.6.198
 4074  ./launch-forticli.sh
 4075  l
 4076  ssh -i ~/.ssh/seloger/central-auth-keycloak-prod.pem centos@10.105.6.198
 4077  docker stop -t0 keycloak
 4078  ssh -i ~/.ssh/seloger/central-auth-keycloak-prod.pem centos@10.105.6.198
 4079  l
 4080  cd src/opt/jboss/artefacts
 4081  l
 4082  ./init_key.sh
 4083  chmod +x .
 4084  l
 4085  gst
 4086  ./init_key.sh
 4087  chmod +x ./*
 4088  gst
 4089  greset
 4090  gst
 4091  chmod +x ./*.sh
 4092  gst
 4093  ./init_key.sh
 4094  gst
 4095  rm key.pem
 4096  gst
 4097  ./init_key.sh
 4098  gst
 4099  rm certificate.pem key.pem seloger.p12
 4100  gst
 4101  openssl req -newkey rsa:4096 -nodes -keyout key.pem -x509 -days 3650 -out certificate.pem
 4102  l
 4103  gst
 4104  openssl pkcs12 -export -in certificate.pem -inkey key.pem -name "seloger-realm" -out seloger.p12
 4105  gst
 4106  rm seloger
 4107  rm seloger.p12
 4108  gst
 4109  rm certificate.pem key.pem
 4110  l
 4111  gst
 4112  ./init_key.sh openssl req -newkey rsa:4096 -nodes -keyout key.pem -x509 -days 3650 -out certificate.pem
 4113  gst
 4114  rm key.pem
 4115  openssl req -newkey rsa:4096 -nodes -keyout key.pem -x509 -days 3650 -out certificate.pem
 4116  openssl pkcs12 -export -in certificate.pem -inkey key.pem -name "seloger-realm" -out seloger.p12
 4117  PASS="9U4s5pFA"
 4118  echo $PASS
 4119  keytool -importkeystore -deststorepass $PASS -destkeystore $CONFDIR/realm-seloger.jks -srckeystore seloger.p12 -srcstoretype PKCS12
 4120  sudo keytool -importkeystore -deststorepass $PASS -destkeystore $CONFDIR/realm-seloger.jks -srckeystore seloger.p12 -srcstoretype PKCS12
 4121  gst
 4122  CONFDIR="/opt/jboss/artefacts"
 4123  keytool -importkeystore -deststorepass $PASS -destkeystore $CONFDIR/realm-seloger.jks -srckeystore seloger.p12 -srcstoretype PKCS12
 4124  touch /opt/jboss/artefacts/realm-seloger.jks
 4125  keytool -importkeystore -deststorepass $PASS -destkeystore ./realm-seloger.jks -srckeystore seloger.p12 -srcstoretype PKCS12
 4126  l
 4127  gst
 4128  rm certificate.pem key.pem seloger.p12
 4129  gst
 4130  vim realm-seloger.jks
 4131  git add .
 4132  git commit -m "add realm sl"
 4133  git push
 4134  gst
 4135  gp
 4136  gst
 4137  l
 4138  docker build -t kc_test .
 4139  cd ..
 4140  docker build -t kc_test .
 4141  gst
 4142  gd
 4143  gst
 4144  gd
 4145  gst
 4146  gd
 4147  git add .
 4148  git commit -m "init keycloak at start"
 4149  git push
 4150  gst
 4151  man exec
 4152  gst
 4153  gd
 4154  git add .
 4155  git commit -m "other way to init"
 4156  git push
 4157  apt search freemind
 4158  apt search freeplane
 4159  apt search mindmaster
 4160  sudo apt install freeplane
 4161  cd Téléchargements
 4162  sudo dpkg -i mindmaster-7-amd64.deb
 4163  sudo -i
 4164  ssh -i ~/.ssh/seloger/central-auth-keycloak-prod.pem centos@10.105.6.198
 4165  docker build -t kc_test .
 4166  cat ~/pCloudDrive/notes/tasks/seloger/2019-09_keycloak.txt
 4167  docker run -d \                                                                                                                                                                  \n            -e KEYCLOAK_USER=admin \                                                                                                                                             \n            -e KEYCLOAK_PASSWORD=N5LeJpZj5aAD2N9s \                                                                                                                              \n            -p 443:8443 \                                                                                                                                                        \n            -p 57600:57600 \                                                                                                                                                     \n            -p 7600:7600 \                                                                                                                                                       \n            --name keycloak \                                                                                                                                                    \n            -e JDBC_PARAMS='connectTimeout=30' \                                                                                                                                 \n            -e DB_VENDOR=postgres \                                                                                                                                              \n            -e DB_ADDR=keycloakdbsvlessprod.auth.groupeseloger.tools \                                                                                                           \n            -e DB_PORT=5432 \                                                                                                                                                    \n            -e DB_USER=postgre \                                                                                                                                                 \n            -e DB_PASSWORD=peqwp34QbzUqJ98u \                                                                                                                                    \n            -e DB_DATABASE=keycloak \                                                                                                                                            \n            -e JGROUPS_DISCOVERY_EXTERNAL_IP=10.105.6.198 \                                                                                                                      \n            -e KEYCLOAK_LOGLEVEL=INFO \                                                                                                                                          \n            --label organization=seloger \                                                                                                                                       \n            --label environment=prod \                                                                                                                                           \n            --label application=keycloak \                                                                                                                                       \n            --label team=security \                                                                                                                                              \n            --label dataClassification=confidential \                                                                                                                            \n            --label taggingVersion=1.0.0 \                                                                                                                                       \n            --label createdBy=circleci \                                                                                                                                         \n            --label createdOn=2019-08-13T00:00:00 \                                                                                                                              \n            673277413506.dkr.ecr.eu-west-1.amazonaws.com/seloger/docker-keycloak:latest-prod
 4168  docker run -d \\n            -e KEYCLOAK_USER=admin \\n            -e KEYCLOAK_PASSWORD=N5LeJpZj5aAD2N9s \\n            -p 443:8443 \\n            -p 57600:57600 \\n            -p 7600:7600 \\n            --name keycloak \\n            -e JDBC_PARAMS='connectTimeout=30' \\n            -e DB_VENDOR=postgres \\n            -e DB_ADDR=keycloakdbsvlessprod.auth.groupeseloger.tools \\n            -e DB_PORT=5432 \\n            -e DB_USER=postgre \\n            -e DB_PASSWORD=peqwp34QbzUqJ98u \\n            -e DB_DATABASE=keycloak \\n            -e JGROUPS_DISCOVERY_EXTERNAL_IP=10.105.6.198 \\n            -e KEYCLOAK_LOGLEVEL=INFO \\n            --label organization=seloger \\n            --label environment=prod \\n            --label application=keycloak \\n            --label team=security \\n            --label dataClassification=confidential \\n            --label taggingVersion=1.0.0 \\n            --label createdBy=circleci \\n            --label createdOn=2019-08-13T00:00:00 \\n            kc_test
 4169  docker ps
 4170  docker stop -t0 kc_test && docker rm kc_test
 4171  docker ps -a
 4172  docker stop -t0 kc_test && docker rm kc_test
 4173  docker stop -t0 kc_test
 4174  docker ps
 4175  docker stop -t0 keycloak && docker rm keycloak
 4176  docker build -t kc_test .
 4177  docker run -d \\n            -e KEYCLOAK_USER=admin \\n            -e KEYCLOAK_PASSWORD=N5LeJpZj5aAD2N9s \\n            -p 443:8443 \\n            -p 57600:57600 \\n            -p 7600:7600 \\n            --name keycloak \\n            -e JDBC_PARAMS='connectTimeout=30' \\n            -e DB_VENDOR=postgres \\n            -e DB_ADDR=keycloakdbsvlessprod.auth.groupeseloger.tools \\n            -e DB_PORT=5432 \\n            -e DB_USER=postgre \\n            -e DB_PASSWORD=peqwp34QbzUqJ98u \\n            -e DB_DATABASE=keycloak \\n            -e JGROUPS_DISCOVERY_EXTERNAL_IP=10.105.6.198 \\n            -e KEYCLOAK_LOGLEVEL=INFO \\n            --label organization=seloger \\n            --label environment=prod \\n            --label application=keycloak \\n            --label team=security \\n            --label dataClassification=confidential \\n            --label taggingVersion=1.0.0 \\n            --label createdBy=circleci \\n            --label createdOn=2019-08-13T00:00:00 \\n            kc_test
 4178  docker ps
 4179  docker logs keycloak
 4180  ./launch-forticli.sh
 4181  vim pCloudDrive/notes/todo.txt
 4182  docker build -t kc_test .
 4183  docker ps
 4184  docker run -d \\n            -e KEYCLOAK_USER=admin \\n            -e KEYCLOAK_PASSWORD=N5LeJpZj5aAD2N9s \\n            -p 443:8443 \\n            -p 57600:57600 \\n            -p 7600:7600 \\n            --name keycloak \\n            -e JDBC_PARAMS='connectTimeout=30' \\n            -e DB_VENDOR=postgres \\n            -e DB_ADDR=keycloakdbsvlessprod.auth.groupeseloger.tools \\n            -e DB_PORT=5432 \\n            -e DB_USER=postgre \\n            -e DB_PASSWORD=peqwp34QbzUqJ98u \\n            -e DB_DATABASE=keycloak \\n            -e JGROUPS_DISCOVERY_EXTERNAL_IP=10.105.6.198 \\n            -e KEYCLOAK_LOGLEVEL=INFO \\n            --label organization=seloger \\n            --label environment=prod \\n            --label application=keycloak \\n            --label team=security \\n            --label dataClassification=confidential \\n            --label taggingVersion=1.0.0 \\n            --label createdBy=circleci \\n            --label createdOn=2019-08-13T00:00:00 \\n            kc_test
 4185  docker stop -t0 keycloak && docker rm keycloak
 4186  docker run -d \\n            -e KEYCLOAK_USER=admin \\n            -e KEYCLOAK_PASSWORD=N5LeJpZj5aAD2N9s \\n            -p 443:8443 \\n            -p 57600:57600 \\n            -p 7600:7600 \\n            --name keycloak \\n            -e JDBC_PARAMS='connectTimeout=30' \\n            -e DB_VENDOR=postgres \\n            -e DB_ADDR=keycloakdbsvlessprod.auth.groupeseloger.tools \\n            -e DB_PORT=5432 \\n            -e DB_USER=postgre \\n            -e DB_PASSWORD=peqwp34QbzUqJ98u \\n            -e DB_DATABASE=keycloak \\n            -e JGROUPS_DISCOVERY_EXTERNAL_IP=10.105.6.198 \\n            -e KEYCLOAK_LOGLEVEL=INFO \\n            --label organization=seloger \\n            --label environment=prod \\n            --label application=keycloak \\n            --label team=security \\n            --label dataClassification=confidential \\n            --label taggingVersion=1.0.0 \\n            --label createdBy=circleci \\n            --label createdOn=2019-08-13T00:00:00 \\n            kc_test
 4187  docker ps
 4188  docker exec -it f058b6fd50dd "/opt/jboss/artefacts/init_keycloak.sh  2>&1 | tee -a /opt/jboss/artefacts/init_keycloak.log"
 4189  docker exec -it f058b6fd50dd /opt/jboss/artefacts/init_keycloak.sh
 4190  gst
 4191  gd
 4192  docker exec -it f058b6fd50dd echo toto
 4193  docker exec -it f058b6fd50dd echo toto 2>&1 | tee -a ./init.log
 4194  ls
 4195  vim init.log
 4196  docker ps
 4197  docker exec -it keycloak echo toto 2>&1 | tee -a ./init.log
 4198  docker exec -it keycloak "echo toto" 2>&1 | tee -a ./init.log
 4199  docker exec -it keycloak 'echo toto' 2>&1 | tee -a ./init.log
 4200  docker ps
 4201  docker exec -it keycloak sh
 4202  docker exec -it keycloak ./test.sh 2>&1 | tee -a ./init.log
 4203  docker exec -it keycloak bash ./test.sh 2>&1 | tee -a ./init.log
 4204  cat init.log
 4205  gst
 4206  gd
 4207  git add .
 4208  git commit -m "set internal db name"
 4209  git add .
 4210  gst
 4211  gd
 4212  git add .
 4213  git commit -m "init from the host"
 4214  git push
 4215  gst
 4216  git commit -m "set init script"
 4217  git push
 4218  gst
 4219  ./aws-cloudform.sh --account central-auth --profile sl-central-auth --category 002-keycloak-prod --stack 002-asg.yml
 4220  ssh -i ~/.ssh/seloger/central-auth-keycloak-prod.pem centos@10.105.5.155
 4221  vim pCloudDrive/notes/todo.txt
 4222  sudo apt update && sudo apt -y upgrade && sudo apt -y autoremove
 4223  apt search terminator
 4224  sudo apt install terminator
 4225  l
 4226  vim pCloudDrive/notes/todo.txt
 4227  tmux
 4228  :q
 4229  l
 4230  cat ~/pCloudDrive/notes/tasks/seloger/2019-09_keycloak.txt
 4231  pwd
 4232  cd .sec/seloger/forti-vpn
 4233  ./launch-forticli.sh
 4234  vi
 4235  l
 4236  htop
 4237  vim pCloudDrive/notes/todo.txt
 4238  l
 4239  pwd
 4240  htop
 4241  l
 4242  htop
 4243  cd
 4244  htop
 4245  sudo apt remove -y terminator --purge
 4246  sudo apt install terminator
 4247  l
 4248  vim pCloudDrive/notes/todo.txt
 4249  l
 4250  ps aux
 4251  htop
 4252  ssh -i ~/.ssh/seloger/central-auth-keycloak-prod.pem centos@10.105.5.155
 4253  vim ~/.zshrc
 4254  exit
 4255  l
 4256  pwd
 4257  l
 4258  htop
 4259  vim ~/.zshrc
 4260  vim pCloudDrive/notes/todo.txt
 4261  ping google.fr
 4262  sudo apt update && sudo apt -y upgrade && sudo apt -y autoremove
 4263  vim pCloudDrive/notes/todo.txt
 4264  sudo apt update && sudo apt -y upgrade && sudo apt -y autoremove
 4265  tree
 4266  git log
 4267  gitk J1/exercice-1/Dockerfile
 4268  gst
 4269  gp
 4270  cd J1
 4271  l
 4272  cd exercice-1
 4273  tree
 4274  docker run -d --name redis redis
 4275  ping google.fr
 4276  docker run -d --name redis redis
 4277  docker ps
 4278  docker build -t myrepo/nodeapp .
 4279  docker run -d --name nodeapp --link redis -p 8000:8080 myrepo/nodeapp
 4280  docker ps
 4281  cd pCloudDrive/work/formations
 4282  l
 4283  touch notes_conducteur.txt
 4284  cd ../../J2/Deployment/Exercice1
 4285  l
 4286  gcloud init
 4287  aws s3 ls
 4288  gcloud compute instances list
 4289  gcloud container clusters list
 4290  gcloud init
 4291  gcloud compute instances list
 4292  gcloud container clusters list
 4293  \ngcloud container clusters get-credentials training-cluster-0 --zone europe-west1-b --project wsc-kubernetes-training-1\n
 4294  kubectl get all
 4295  kubectl get po
 4296  tree
 4297  l
 4298  cat .circleci/config.yml
 4299  l
 4300  tree cfn
 4301  tree cfn -L1
 4302  tree cfn -N1
 4303  export AWS_PROFILE=sl-central-auth
 4304  ./generate-cfn.sh --clean
 4305  ./generate-cfn.sh
 4306  kubectl get all
 4307  kubectl apply -f hello-v1.yml
 4308  gst
 4309  gd
 4310  kubectl get po
 4311  kubectl scale deployment hello-dep --replicas=3
 4312  kubectl get po
 4313  kubectl apply -f hello-v2.yml
 4314  kubectl get po
 4315  gst
 4316  gd
 4317  git add .
 4318  git commit -m "fix"
 4319  gst
 4320  git push
 4321  gst
 4322  gp
 4323  gst
 4324  git checkout master
 4325  gp
 4326  git log
 4327  git checkout feature/build-prod-env
 4328  gst
 4329  l
 4330  export AWS_PROFILE=sl-central-auth
 4331  aws s3 ls
 4332  tmux
 4333  ssh -i ~/.ssh/seloger/central-auth-keycloak-prod.pem centos@10.105.5.155
 4334  nslookup https://keycloak-dev.auth.groupeseloger.tools
 4335  nslookup https://keycloak-dev.auth.groupeseloger.tools/
 4336  nslookup keycloak-dev.auth.groupeseloger.tools
 4337  nslookup keycloak-prod.auth.groupeseloger.tools
 4338  dig keycloak-dev.auth.groupeseloger.tools
 4339  dig keycloak-prod.auth.groupeseloger.tools
 4340  export AWS_PROFILE=sl-central-auth
 4341  ./aws-cloudform.sh --account central-auth --profile sl-central-auth --category 002-keycloak-prod --stack 002-asg.yml
 4342  ssh -i ~/.ssh/seloger/central-auth-keycloak-prod.pem centos@10.105.4.38
 4343  ssh -i ~/.ssh/seloger/central-auth-keycloak-prod.pem centos@10.105.5.155
 4344  ssh -i ~/.ssh/seloger/central-auth-keycloak-prod.pem centos@10.105.4.38
 4345  gst
 4346  gd
 4347  git add .
 4348  git commit -m "unleash logs"
 4349  gst
 4350  git push
 4351  gst
 4352  ./aws-cloudform.sh --account central-auth --profile sl-central-auth --category 002-keycloak-prod --stack 002-asg.yml
 4353  ssh -i ~/.ssh/seloger/central-auth-keycloak-prod.pem centos@10.105.4.155
 4354  ssh-keygen -f "/home/jdx/.ssh/known_hosts" -R "10.105.4.155"
 4355  ssh -i ~/.ssh/seloger/central-auth-keycloak-prod.pem centos@10.105.4.155
 4356  ssh -i ~/.ssh/seloger/central-auth-keycloak-prod.pem centos@10.105.4.38
 4357  ssh -i ~/.ssh/seloger/central-auth-keycloak-prod.pem centos@10.105.4.155
 4358  cat ~/pCloudDrive/notes/tasks/seloger/2019-09_keycloak-full-auto.txt
 4359  gst
 4360  gd
 4361  gst
 4362  gd
 4363  cd src/opt/jboss/artefacts
 4364  ls
 4365  rm realm-seloger.jks
 4366  pwd
 4367  ls -la
 4368  grep -nri truststore.jks
 4369  l
 4370  ls -la
 4371  docker build -t test_kc .
 4372  pwd
 4373  docker images
 4374  docker run -it --name test_kc test_kc
 4375  docker run -it --name test_kc test_kc bash
 4376  docker rm test_kc
 4377  docker run -it --name test_kc test_kc bash
 4378  docker run -d --name test_kc test_kc 
 4379  docker rm test_kc
 4380  docker run -d --name test_kc test_kc 
 4381  docker ps
 4382  docker exec -it bash
 4383  docker exec -it ac23d96f6f0f bash
 4384  docker stop -t0 test_kc
 4385  docker rm test_kc
 4386  docker ps
 4387  docker stats
 4388  docker ps
 4389  screenfetch
 4390  pwd
 4391  gst
 4392  git add .
 4393  gst
 4394  pwd
 4395  cd src/opt/jboss/artefacts
 4396  ls -la
 4397  pwd
 4398  openssl req -newkey rsa:4096 -nodes -keyout realm-seloger_key.pem -x509 -days 3650 -out realm-seloger_certificate.pem
 4399  gst
 4400  openssl pkcs12 -export -in realm-seloger_certificate.pem -inkey realm-seloger_key.pem -name "seloger-realm" -out realm-seloger.p12
 4401  keytool -importkeystore -deststorepass 24jdUgFn -destkeystore realm-seloger.jks -srckeystore realm-seloger.p12 -srcstoretype PKCS12
 4402  ls -la
 4403  gst
 4404  gd
 4405  git add .
 4406  git commit -m "init new keystore"
 4407  gst
 4408  git push
 4409  pwd
 4410  gst
 4411  ls -la
 4412  pwd
 4413  gst
 4414  git log
 4415  pwd
 4416  gst
 4417  pwd
 4418  git log
 4419  gst
 4420  $kcadm_cmd create components
 4421  cd dev/www/seloger
 4422  git clone git@github.com:axel-springer-kugawana/sl_ops-dns-migration-route53.git
 4423  cd Téléchargements
 4424  sudo dpkg -i discord-0.0.9.deb
 4425  ps aux | grep disc
 4426  watch 'ps aux | grep disc'
 4427  sudo pkill -f discord
 4428  l
 4429  ssh -i ~/.ssh/seloger/central-auth-keycloak-prod.pem centos@10.105.4.155
 4430  git log
 4431  gst
 4432  $kcadm_cmd create components -r SeLoger -s name=java-keystore -s providerId=java-keystore -s providerType=org.keycloak.keys.KeyProvider -s parentId=${REALM_ID} \\n    -s 'config.priority=["101"]' -s 'config.enabled=["true"]' -s 'config.active=["true"]' -s 'config.keystore=["/opt/jboss/artefacts/realm-seloger.jks"]' \\n    -s 'config.keystorePassword=["24jdUgFn"]' -s 'config.keyPassword=["9U4s5pFA"]' -s 'config.keyAlias=["seloger-realm"]'
 4433  gp
 4434  gst
 4435  gd
 4436  greset
 4437  gp
 4438  gst
 4439  cd ..
 4440  cd artefacts
 4441  pwd
 4442  ls
 4443  ls -la
 4444  rm realm-seloger*
 4445  ls -la
 4446  l
 4447  gst
 4448  gd seloger-ldap.json
 4449  gd init_keycloak.sh
 4450  git add .
 4451  gst
 4452  git commit -m "update key"
 4453  git push
 4454  gst
 4455  gd
 4456  git add .
 4457  git commit -m "generate config file"
 4458  git push
 4459  gst
 4460  gd
 4461  git add .
 4462  git commit -m "fix gen"
 4463  git push
 4464  gst
 4465  gd
 4466  git add .
 4467  git commit -m "add bind creds"
 4468  git push
 4469  gst
 4470  gd
 4471  git add .
 4472  git commit -m "set dir for gen file"
 4473  git push
 4474  gst
 4475  openssl req -newkey rsa:4096 -nodes -keyout realm-seloger_key.pem -x509 -days 3650 -out realm-seloger_certificate.pem
 4476  openssl pkcs12 -export -in realm-seloger_certificate.pem -inkey realm-seloger_key.pem -name "seloger-realm" -out realm-seloger.p12
 4477  keytool -importkeystore -deststorepass $PASS_KEYSTORE -destkeystore realm-seloger.jks -srckeystore realm-seloger.p12 -srcstoretype PKCS12
 4478  keytool -importkeystore -deststorepass securitylock -destkeystore realm-seloger.jks -srckeystore realm-seloger.p12 -srcstoretype PKCS12
 4479  gst
 4480  git add .
 4481  gst
 4482  git commit -m "add missing keystore key"
 4483  git push
 4484  gst
 4485  git log
 4486  source /home/jdx/dev/www/seloger/sl_security-aws-iam-users/venv/bin/activate
 4487  gp
 4488  export AWS_PROFILE=sl-central-auth
 4489  ./generate-cfn-users.sh
 4490  source /home/jdx/dev/www/seloger/sl_security-aws-iam-users/venv/bin/activate
 4491  rm -r venv
 4492  ./generate-cfn-users.sh
 4493  export AWS_PROFILE=sl-central-auth
 4494  ./sync-kc.sh
 4495  git log master -n 20000 --pretty=oneline | cut -d' ' -f1
 4496  git log
 4497  git log master -n 20000 --pretty=oneline | cut -d' ' -f1
 4498  ./sync-kc.sh
 4499  ./sync-kc.sh --full
 4500  ./sync-kc.sh --force
 4501  export AWS_PROFILE=sl-central-auth
 4502  ./sync-kc.sh --force
 4503  ./sync-kc.sh --full --force
 4504  git log --help
 4505  ./sync-kc.sh --full --force
 4506  git rev-list --max-parents=0 HEAD
 4507  ./sync-kc.sh --full --force
 4508  gst
 4509  gd
 4510  gst
 4511  gd
 4512  ./sync-kc.sh
 4513  ./sync-kc.sh --env dev
 4514  ./sync-kc.sh --env dev --force
 4515  ./sync-kc.sh --env dev2 --force
 4516  ./sync-kc.sh --env dev2 --force --no-stamp
 4517  ./sync-kc.sh --env dev2 --force
 4518  ./sync-kc.sh --env dev --force
 4519  ./sync-kc.sh --env dev --force --no-stamp
 4520  ./sync-kc.sh --env dev --force --full --no-stamp
 4521  ./sync-kc.sh --help
 4522  gst
 4523  gd
 4524  aws s3 ls
 4525  ./sync-kc.sh --env prod --full --force --no-stamp
 4526  gst
 4527  gd
 4528  git add .
 4529  gst
 4530  git commit -m "add parameters and handle environments for sync"
 4531  git push
 4532  gst
 4533  ./sync-kc.sh --env prod --full --force --no-stamp
 4534  ./sync-kc.sh --env prod
 4535  gst
 4536  gd
 4537  ./sync-kc.sh --env prod --full --force --no-stamp
 4538  screenfetch
 4539  ./sync-kc.sh --env prod --full --force --no-stamp
 4540  ssh -p 64535 3.86.246.86\n
 4541  ssh -p 64535 54.152.33.228\n
 4542  tmux
 4543  ssh -p 64535 54.152.33.228
 4544  vim ~/.aws/credentials
 4545  aws configure --profile test-balek
 4546  aws s3 s
 4547  aws s3 ls
 4548  export AWS_PROFILE=test-balek
 4549  aws s3 ls
 4550  aws sts assume-role --region eu-west-1 --role-arn arn:aws:iam::936992537267:role/central-shared-services-accessluxresidences-iam-role --duration-seconds 3600 --role-session-name assumption-test-balek-42
 4551  gst
 4552  vim .gitignore
 4553  ./generate-cfn.sh
 4554  gst
 4555  gd
 4556  greset
 4557  gst
 4558  rm -r .vscode
 4559  gp
 4560  sudo apt update && sudo apt -y upgrade && sudo apt -y autoremove
 4561  sudo apt --fix-broken install
 4562  sudo apt update && sudo apt -y upgrade && sudo apt -y autoremove
 4563  cd .sec/seloger/forti-vpn
 4564  ./launch-forticli.sh
 4565  gst
 4566  gd
 4567  ssh -i ~/.ssh/seloger/central-auth-keycloak-prod.pem centos@10.105.4.155
 4568  export AWS_PROFILE=sl-central-auth
 4569  ./sync-kc.sh --env prod --full --force --no-stamp
 4570  gst
 4571  ./sync-kc.sh --env prod --full --force --no-stamp
 4572  curl -X POST \\n  https://keycloak-dev.auth.groupeseloger.tools%0A/auth/realms/master/protocol/openid-connect/token \\n  -H 'Accept: */*' \\n  -H 'Accept-Encoding: gzip, deflate' \\n  -H 'Cache-Control: no-cache' \\n  -H 'Connection: keep-alive' \\n  -H 'Content-Length: 82' \\n  -H 'Content-Type: application/x-www-form-urlencoded' \\n  -H 'Cookie: AWSALB=5RDrBQ5opqyv4W4qXj0qiPypFwL9NxG5EZNxsbz5lGefZY1UbrsM0YtaeOtjRWI+oWFb6ZSeEp2v3sVFzyu5hrIH7e+voSwB3IjUeMPyPhMiwKb8Kw2hobbTDO3K' \\n  -H 'Host: keycloak-dev.auth.groupeseloger.tools' \\n  -H 'Postman-Token: 650a6bd6-7c9e-4004-947c-43ee9c98547f,16083276-ba79-488a-a124-687e769ec177' \\n  -H 'User-Agent: PostmanRuntime/7.17.1' \\n  -H 'cache-control: no-cache' \\n  -d 'grant_type=password&username=api_user&password=MidnightOil2007&client_id=admin-cli'
 4573  curl -X POST \\n  https://keycloak-dev.auth.groupeseloger.tools/auth/realms/master/protocol/openid-connect/token \\n  -H 'Accept: */*' \\n  -H 'Accept-Encoding: gzip, deflate' \\n  -H 'Cache-Control: no-cache' \\n  -H 'Connection: keep-alive' \\n  -H 'Content-Length: 82' \\n  -H 'Content-Type: application/x-www-form-urlencoded' \\n  -H 'Cookie: AWSALB=5RDrBQ5opqyv4W4qXj0qiPypFwL9NxG5EZNxsbz5lGefZY1UbrsM0YtaeOtjRWI+oWFb6ZSeEp2v3sVFzyu5hrIH7e+voSwB3IjUeMPyPhMiwKb8Kw2hobbTDO3K' \\n  -H 'Host: keycloak-dev.auth.groupeseloger.tools' \\n  -H 'Postman-Token: 650a6bd6-7c9e-4004-947c-43ee9c98547f,16083276-ba79-488a-a124-687e769ec177' \\n  -H 'User-Agent: PostmanRuntime/7.17.1' \\n  -H 'cache-control: no-cache' \\n  -d 'grant_type=password&username=api_user&password=MidnightOil2007&client_id=admin-cli'
 4574  curl -X GET \\n  https://keycloak-dev.auth.groupeseloger.tools/auth/admin/realms/SeLoger/clients \\n  -H 'Accept: application/json' \\n  -H 'Accept-Encoding: gzip, deflate' \\n  -H 'Authorization: Bearer eyJhbGciOiJSUzUxMiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJhMUFIXzgwZTFqZlNiYk1TVEFMRlpLbjRuNzFvUmtEdG5YdkliY19WOTBVIn0.eyJqdGkiOiJkYWNhNWUyNi0zMzczLTRiYTQtYTRkMy01ODgwMDNhMTcxODAiLCJleHAiOjE1NzAwMDg1MDAsIm5iZiI6MCwiaWF0IjoxNTcwMDA0OTAwLCJpc3MiOiJodHRwczovL2tleWNsb2FrLWRldi5hdXRoLmdyb3VwZXNlbG9nZXIudG9vbHMvYXV0aC9yZWFsbXMvbWFzdGVyIiwic3ViIjoiYzE0NDEzMzctYmZlNC00N2Y2LWJmNTItNzhkYmExNzFiZWE2IiwidHlwIjoiQmVhcmVyIiwiYXpwIjoiYWRtaW4tY2xpIiwiYXV0aF90aW1lIjowLCJzZXNzaW9uX3N0YXRlIjoiYTY1ODc4YjQtNjNiNi00MzZmLWIzMTMtNzAzNDViY2ViMzMwIiwiYWNyIjoiMSIsInNjb3BlIjoiZW1haWwgcHJvZmlsZSIsImVtYWlsX3ZlcmlmaWVkIjpmYWxzZSwicHJlZmVycmVkX3VzZXJuYW1lIjoiYXBpX3VzZXIifQ.ZjoTTvpie_Gm6dH8avoeN-UEoDn2U-fA5oaD842TJujejlNE-dwXiHEdX-xczEMjeiumQIMXrE5l8bZu6H5XrjFTU4XJEGLn9Y5hpZ0h2h5HTRzv12UFsO2Tm6Ya-WSh9T4IZCvfQqhsVZx_EiBYAt1ykzaaWsoxFRl0K5R8RbbPufon6U4TQVDMCiFStjphVuq6fVnvGChlmPUThIpBObZ89bdJxLLpKr8I7Nnly50JdGniowPx10KzLwanikYKxxb8j65hmDALnuWvz9NWmVbGfDb7j3tqY-K8gNskh1KNDx-jVZnd0upCbpdWWFWQazNSWfeH4WfrPwjXOvCwc8kWP5fgmpEg4qwUSUH6DZqClxbxtP9Xpk_4E6fO1gdEDg7qLBPxOs5Jr3JOoGNpc8mHh0o3nJpPzpcC9wiChtjZSwd6Nsz-dHLhoVwOWUyXx83ETIrTBwYgVPs7NTTgin40vMP3d6NVVP-JoJ-KecDXno8xznnhiJXDyjQxKG09lzXVToNCtuO7Jceb5GV_naQKjdS5hO_fO8JVSLhxSI-dL2uesO_CEclcLxIbZauSc7nytQQ4nqVr6KNeeb1C46g1Mm4jC6uVMcJVps310BkbrCuLL559aEISPAOtb3r5x4GfoiN8sAdkxxx_Knwen3Hq41oN5wlNNvjfQa_fDP4' \\n  -H 'Cache-Control: no-cache' \\n  -H 'Connection: keep-alive' \\n  -H 'Content-Type: application/json' \\n  -H 'Cookie: AWSALB=Q3GH77VM2BpLxHOSzWkYqmrxApNGhaJLP9bvAkJARdaEvQXmyM718uyWHsMYIz0N8zk+FSlXaByzSulIn5dIqES04LGJjr5vFfjuMoQ2GFk0RF9/OuJhjnEza6Bb' \\n  -H 'Host: keycloak-dev.auth.groupeseloger.tools' \\n  -H 'Postman-Token: 61f81894-db4f-4e1f-ae50-770da93df000,591c5e21-b05e-484a-b3aa-6af24616e4fe' \\n  -H 'User-Agent: PostmanRuntime/7.17.1' \\n  -H 'cache-control: no-cache'
 4575  gst
 4576  aws s3 ls
 4577  ./sync-kc.sh --env prod --full --force --no-stamp
 4578  cd dev/www/seloger
 4579  ./sync-kc.sh --env prod --full --force --no-stamp
 4580  aws s3 ls
 4581  ./sync-kc.sh --env prod --full --force --no-stamp
 4582  grep -nr SeLoger .
 4583  apt search openssl
 4584  ping google.fr
 4585  sudo $(history -p \!\!)
 4586  grep -nr SeLoger .
 4587  ./launch-forticli.sh
 4588  ssh -i ~/.ssh/seloger/central-auth-keycloak-prod.pem centos@10.105.4.155
 4589  ./sync-kc.sh --env prod --full --force --no-stamp
 4590  gst
 4591  gd
 4592  ./sync-kc.sh --env prod --full --force --no-stamp
 4593  ./launch-forticli.sh
 4594  ssh -i ~/.ssh/seloger/central-auth-keycloak-prod.pem centos@10.105.4.155
 4595  aws s3 ls
 4596  ./sync-kc.sh --env prod --full --force --no-stamp
 4597  vim ~/.zshrc
 4598  [{'id': 'e4f06761-75ef-4fd8-bbeb-3bc91e5843e7', 'clientId': 'account', 'name': '${client_account}', 'baseUrl': '/auth/realms/seloger/account', 'surrogateAuthRequired': False, 'enabled': True, 'clientAuthenticatorType': 'client-secret', 'defaultRoles': ['view-profile', 'manage-account'], 'redirectUris': ['/auth/realms/seloger/account/*'], 'webOrigins': [], 'notBefore': 0, 'bearerOnly': False, 'consentRequired': False, 'standardFlowEnabled': True, 'implicitFlowEnabled': False, 'directAccessGrantsEnabled': False, 'serviceAccountsEnabled': False, 'publicClient': False, 'frontchannelLogout': False, 'protocol': 'openid-connect', 'attributes': {}, 'authenticationFlowBindingOverrides': {}, 'fullScopeAllowed': False, 'nodeReRegistrationTimeout': 0, 'defaultClientScopes': ['web-origins', 'role_list', 'profile', 'roles', 'email'], 'optionalClientScopes': ['address', 'phone', 'offline_access', 'microprofile-jwt'], 'access': {'view': True, 'configure': True, 'manage': True}}, {'id': '445bedb2-eabd-4d88-97f8-6baa30353120', 'clientId': 'security-admin-console', 'name': '${client_security-admin-console}', 'baseUrl': '/auth/admin/seloger/console/index.html', 'surrogateAuthRequired': False, 'enabled': True, 'clientAuthenticatorType': 'client-secret', 'redirectUris': ['/auth/admin/seloger/console/*'], 'webOrigins': [], 'notBefore': 0, 'bearerOnly': False, 'consentRequired': False, 'standardFlowEnabled': True, 'implicitFlowEnabled': False, 'directAccessGrantsEnabled': False, 'serviceAccountsEnabled': False, 'publicClient': True, 'frontchannelLogout': False, 'protocol': 'openid-connect', 'attributes': {}, 'authenticationFlowBindingOverrides': {}, 'fullScopeAllowed': False, 'nodeReRegistrationTimeout': 0, 'protocolMappers': [{'id': 'd53e9d4e-7bf1-42c7-91a4-19a99ca42927', 'name': 'locale', 'protocol': 'openid-connect', 'protocolMapper': 'oidc-usermodel-attribute-mapper', 'consentRequired': False, 'config': {'userinfo.token.claim': 'true', 'user.attribute': 'locale', 'id.token.claim': 'true', 'access.token.claim': 'true', 'claim.name': 'locale', 'jsonType.label': 'String'}}], 'defaultClientScopes': ['web-origins', 'role_list', 'profile', 'roles', 'email'], 'optionalClientScopes': ['address', 'phone', 'offline_access', 'microprofile-jwt'], 'access': {'view': True, 'configure': True, 'manage': True}}, {'id': '0db3a4aa-0b71-41c3-9724-a281b35acefc', 'clientId': 'urn:amazon:webservices', 'baseUrl': '/auth/realms/seloger/protocol/saml/clients/aws', 'surrogateAuthRequired': False, 'enabled': True, 'clientAuthenticatorType': 'client-secret', 'redirectUris': ['https://signin.aws.amazon.com/saml'], 'webOrigins': ['https://signin.aws.amazon.com'], 'notBefore': 0, 'bearerOnly': False, 'consentRequired': False, 'standardFlowEnabled': True, 'implicitFlowEnabled': False, 'directAccessGrantsEnabled': False, 'serviceAccountsEnabled': False, 'publicClient': False, 'frontchannelLogout': True, 'protocol': 'saml', 'attributes': {'saml.assertion.signature': 'true', 'saml.force.post.binding': 'true', 'saml.multivalued.roles': 'false', 'saml.encrypt': 'false', 'saml_assertion_consumer_url_post': 'https://signin.aws.amazon.com/saml', 'saml.server.signature': 'true', 'saml_idp_initiated_sso_url_name': 'aws', 'saml.server.signature.keyinfo.ext': 'false', 'exclude.session.state.from.auth.response': 'false', 'saml.signing.certificate': 'MIIDbTCCAlWgAwIBAgIEL6q6DjANBgkqhkiG9w0BAQsFADBnMR8wHQYDVQQDExZ1cm46YW1hem9uOndlYnNlcnZpY2VzMSIwIAYDVQQKExlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMuMRMwEQYDVQQIEwpXYXNoaW5ndG9uMQswCQYDVQQGEwJVUzAeFw0xOTA3MzEwMDAwMDBaFw0yMDA3MzAwMDAwMDBaMGcxHzAdBgNVBAMTFnVybjphbWF6b246d2Vic2VydmljZXMxIjAgBgNVBAoTGUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4xEzARBgNVBAgTCldhc2hpbmd0b24xCzAJBgNVBAYTAlVTMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEArCQC/9VD6MiyAbwQg9tUOowlE6UC5+/tz49oY+X33elrgI+2dfaKykSN4h2T/eiecv4byD7bv0cU4SETN/fMfpsjKRvaQZkF+8es4EZfqGuQ/OthV0ZljDpcCgBiyiBf/6HMDh5/8Drjalc8qSl8vEUKR3v1Lzb6ldese76h8Xshri/WJZQ129iXQoVzFVNO+k6j9JS17APrw6M9Dj1g02bONqoiiWS3CQw/YnZcJWXBntgOJhD2cUkXYna3mYUzkEE1M4pbLtonZSa0LZcmRO/dJupM3EJJXmwqygY1M1pU6m31Vmdggl5CMpP9GxL3Q56W4WYDbFAaR4Xl8gE4nwIDAQABoyEwHzAdBgNVHQ4EFgQUsIjQNS/+HaLNDnKB320PjaqEbgswDQYJKoZIhvcNAQELBQADggEBAF/YpvafypDQN8fLgvm6SIAj8771b5/zxsg3rlNUXVnOhFLwp02sNoS6Hk7ShuGL5VWNmHyS+XzGVSAk35lZYZkJiyykbqaSCXwzl4aoXGc7RksUEHAq6cWEDoJSf6a1dB+nQ9+DOZq+Se6cU3Id9QUFOHJm+igbV8pxKa4PJkB35EGh4NhUs9hVCJ6DSGuMlceHLMEMKfnyiw/KGXXjjiUXoJptImrPrT/dyezfhg/2q/n40LIHx9KerzD1d53soSaiy+IpKC8T3Pw9HgVZo+gLWfpVrOtxDwCcFcEKk2inICe6LycHJ0Ht6vWQv6jfDSluK8ulaGbu2uLScsNTJsU=', 'saml.signature.algorithm': 'RSA_SHA256', 'saml_force_name_id_format': 'false', 'saml.client.signature': 'true', 'tls.client.certificate.bound.access.tokens': 'false', 'saml.authnstatement': 'true', 'display.on.consent.screen': 'false', 'saml_name_id_format': 'transient', 'saml_signature_canonicalization_method': 'http://www.w3.org/2001/10/xml-exc-c14n#', 'saml.onetimeuse.condition': 'false'}, 'authenticationFlowBindingOverrides': {}, 'fullScopeAllowed': False, 'nodeReRegistrationTimeout': -1, 'protocolMappers': [{'id': 'a6b34675-2caf-4bb3-b100-d99afdabf40b', 'name': 'Session Duration', 'protocol': 'saml', 'protocolMapper': 'saml-hardcode-attribute-mapper', 'consentRequired': False, 'config': {'attribute.value': '28800', 'attribute.nameformat': 'Basic', 'friendly.name': 'Session Duration', 'attribute.name': 'https://aws.amazon.com/SAML/Attributes/SessionDuration'\}\}, {'id': '71a89dea-ff7e-4976-9678-96fd9a8ab07f', 'name': 'Session Name', 'protocol': 'saml', 'protocolMapper': 'saml-user-property-mapper', 'consentRequired': False, 'config': {'attribute.nameformat': 'Basic', 'user.attribute': 'username', 'friendly.name': 'Session Name', 'attribute.name': 'https://aws.amazon.com/SAML/Attributes/RoleSessionName'\}\}, {'id': '5814420d-46e8-4d58-bbe0-abd5cb1f11f5', 'name': 'Session Role', 'protocol': 'saml', 'protocolMapper': 'saml-role-list-mapper', 'consentRequired': False, 'config': {'single': 'true', 'attribute.nameformat': 'Basic', 'friendly.name': 'Session Role', 'attribute.name': 'https://aws.amazon.com/SAML/Attributes/Role'\}\}\], 'defaultClientScopes': ['web-origins', 'role_list', 'profile', 'roles', 'email'], 'optionalClientScopes': ['address', 'phone', 'offline_access', 'microprofile-jwt'], 'access': {'view': True, 'configure': True, 'manage': True}}, {'id': '40db2a4d-6792-4b68-9d24-f120e8ed6da2', 'clientId': 'broker', 'name': '${client_broker}', 'surrogateAuthRequired': False, 'enabled': True, 'clientAuthenticatorType': 'client-secret', 'redirectUris': [], 'webOrigins': [], 'notBefore': 0, 'bearerOnly': False, 'consentRequired': False, 'standardFlowEnabled': True, 'implicitFlowEnabled': False, 'directAccessGrantsEnabled': False, 'serviceAccountsEnabled': False, 'publicClient': False, 'frontchannelLogout': False, 'protocol': 'openid-connect', 'attributes': {}, 'authenticationFlowBindingOverrides': {}, 'fullScopeAllowed': False, 'nodeReRegistrationTimeout': 0, 'defaultClientScopes': ['web-origins', 'role_list', 'profile', 'roles', 'email'], 'optionalClientScopes': ['address', 'phone', 'offline_access', 'microprofile-jwt'], 'access': {'view': True, 'configure': True, 'manage': True}}, {'id': '85fc8ca2-2cb4-418a-b8ab-7e88e1f09933', 'clientId': 'admin-cli', 'name': '${client_admin-cli}', 'surrogateAuthRequired': False, 'enabled': True, 'clientAuthenticatorType': 'client-secret', 'redirectUris': [], 'webOrigins': [], 'notBefore': 0, 'bearerOnly': False, 'consentRequired': False, 'standardFlowEnabled': False, 'implicitFlowEnabled': False, 'directAccessGrantsEnabled': True, 'serviceAccountsEnabled': False, 'publicClient': True, 'frontchannelLogout': False, 'protocol': 'openid-connect', 'attributes': {}, 'authenticationFlowBindingOverrides': {}, 'fullScopeAllowed': False, 'nodeReRegistrationTimeout': 0, 'defaultClientScopes': ['web-origins', 'role_list', 'profile', 'roles', 'email'], 'optionalClientScopes': ['address', 'phone', 'offline_access', 'microprofile-jwt'], 'access': {'view': True, 'configure': True, 'manage': True}}, {'id': 'f6d8e8b3-c837-4543-a5e1-bcab46926379', 'clientId': 'realm-management', 'name': '${client_realm-management}', 'surrogateAuthRequired': False, 'enabled': True, 'clientAuthenticatorType': 'client-secret', 'redirectUris': [], 'webOrigins': [], 'notBefore': 0, 'bearerOnly': True, 'consentRequired': False, 'standardFlowEnabled': True, 'implicitFlowEnabled': False, 'directAccessGrantsEnabled': False, 'serviceAccountsEnabled': False, 'publicClient': False, 'frontchannelLogout': False, 'protocol': 'openid-connect', 'attributes': {}, 'authenticationFlowBindingOverrides': {}, 'fullScopeAllowed': False, 'nodeReRegistrationTimeout': 0, 'defaultClientScopes': ['web-origins', 'role_list', 'profile', 'roles', 'email'], 'optionalClientScopes': ['address', 'phone', 'offline_access', 'microprofile-jwt'], 'access': {'view': True, 'configure': True, 'manage': True}}] | prettyjson
 4599  echo "[{'id': 'e4f06761-75ef-4fd8-bbeb-3bc91e5843e7', 'clientId': 'account', 'name': '${client_account}', 'baseUrl': '/auth/realms/seloger/account', 'surrogateAuthRequired': False, 'enabled': True, 'clientAuthenticatorType': 'client-secret', 'defaultRoles': ['view-profile', 'manage-account'], 'redirectUris': ['/auth/realms/seloger/account/*'], 'webOrigins': [], 'notBefore': 0, 'bearerOnly': False, 'consentRequired': False, 'standardFlowEnabled': True, 'implicitFlowEnabled': False, 'directAccessGrantsEnabled': False, 'serviceAccountsEnabled': False, 'publicClient': False, 'frontchannelLogout': False, 'protocol': 'openid-connect', 'attributes': {}, 'authenticationFlowBindingOverrides': {}, 'fullScopeAllowed': False, 'nodeReRegistrationTimeout': 0, 'defaultClientScopes': ['web-origins', 'role_list', 'profile', 'roles', 'email'], 'optionalClientScopes': ['address', 'phone', 'offline_access', 'microprofile-jwt'], 'access': {'view': True, 'configure': True, 'manage': True}}, {'id': '445bedb2-eabd-4d88-97f8-6baa30353120', 'clientId': 'security-admin-console', 'name': '${client_security-admin-console}', 'baseUrl': '/auth/admin/seloger/console/index.html', 'surrogateAuthRequired': False, 'enabled': True, 'clientAuthenticatorType': 'client-secret', 'redirectUris': ['/auth/admin/seloger/console/*'], 'webOrigins': [], 'notBefore': 0, 'bearerOnly': False, 'consentRequired': False, 'standardFlowEnabled': True, 'implicitFlowEnabled': False, 'directAccessGrantsEnabled': False, 'serviceAccountsEnabled': False, 'publicClient': True, 'frontchannelLogout': False, 'protocol': 'openid-connect', 'attributes': {}, 'authenticationFlowBindingOverrides': {}, 'fullScopeAllowed': False, 'nodeReRegistrationTimeout': 0, 'protocolMappers': [{'id': 'd53e9d4e-7bf1-42c7-91a4-19a99ca42927', 'name': 'locale', 'protocol': 'openid-connect', 'protocolMapper': 'oidc-usermodel-attribute-mapper', 'consentRequired': False, 'config': {'userinfo.token.claim': 'true', 'user.attribute': 'locale', 'id.token.claim': 'true', 'access.token.claim': 'true', 'claim.name': 'locale', 'jsonType.label': 'String'}}], 'defaultClientScopes': ['web-origins', 'role_list', 'profile', 'roles', 'email'], 'optionalClientScopes': ['address', 'phone', 'offline_access', 'microprofile-jwt'], 'access': {'view': True, 'configure': True, 'manage': True}}, {'id': '0db3a4aa-0b71-41c3-9724-a281b35acefc', 'clientId': 'urn:amazon:webservices', 'baseUrl': '/auth/realms/seloger/protocol/saml/clients/aws', 'surrogateAuthRequired': False, 'enabled': True, 'clientAuthenticatorType': 'client-secret', 'redirectUris': ['https://signin.aws.amazon.com/saml'], 'webOrigins': ['https://signin.aws.amazon.com'], 'notBefore': 0, 'bearerOnly': False, 'consentRequired': False, 'standardFlowEnabled': True, 'implicitFlowEnabled': False, 'directAccessGrantsEnabled': False, 'serviceAccountsEnabled': False, 'publicClient': False, 'frontchannelLogout': True, 'protocol': 'saml', 'attributes': {'saml.assertion.signature': 'true', 'saml.force.post.binding': 'true', 'saml.multivalued.roles': 'false', 'saml.encrypt': 'false', 'saml_assertion_consumer_url_post': 'https://signin.aws.amazon.com/saml', 'saml.server.signature': 'true', 'saml_idp_initiated_sso_url_name': 'aws', 'saml.server.signature.keyinfo.ext': 'false', 'exclude.session.state.from.auth.response': 'false', 'saml.signing.certificate': 'MIIDbTCCAlWgAwIBAgIEL6q6DjANBgkqhkiG9w0BAQsFADBnMR8wHQYDVQQDExZ1cm46YW1hem9uOndlYnNlcnZpY2VzMSIwIAYDVQQKExlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMuMRMwEQYDVQQIEwpXYXNoaW5ndG9uMQswCQYDVQQGEwJVUzAeFw0xOTA3MzEwMDAwMDBaFw0yMDA3MzAwMDAwMDBaMGcxHzAdBgNVBAMTFnVybjphbWF6b246d2Vic2VydmljZXMxIjAgBgNVBAoTGUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4xEzARBgNVBAgTCldhc2hpbmd0b24xCzAJBgNVBAYTAlVTMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEArCQC/9VD6MiyAbwQg9tUOowlE6UC5+/tz49oY+X33elrgI+2dfaKykSN4h2T/eiecv4byD7bv0cU4SETN/fMfpsjKRvaQZkF+8es4EZfqGuQ/OthV0ZljDpcCgBiyiBf/6HMDh5/8Drjalc8qSl8vEUKR3v1Lzb6ldese76h8Xshri/WJZQ129iXQoVzFVNO+k6j9JS17APrw6M9Dj1g02bONqoiiWS3CQw/YnZcJWXBntgOJhD2cUkXYna3mYUzkEE1M4pbLtonZSa0LZcmRO/dJupM3EJJXmwqygY1M1pU6m31Vmdggl5CMpP9GxL3Q56W4WYDbFAaR4Xl8gE4nwIDAQABoyEwHzAdBgNVHQ4EFgQUsIjQNS/+HaLNDnKB320PjaqEbgswDQYJKoZIhvcNAQELBQADggEBAF/YpvafypDQN8fLgvm6SIAj8771b5/zxsg3rlNUXVnOhFLwp02sNoS6Hk7ShuGL5VWNmHyS+XzGVSAk35lZYZkJiyykbqaSCXwzl4aoXGc7RksUEHAq6cWEDoJSf6a1dB+nQ9+DOZq+Se6cU3Id9QUFOHJm+igbV8pxKa4PJkB35EGh4NhUs9hVCJ6DSGuMlceHLMEMKfnyiw/KGXXjjiUXoJptImrPrT/dyezfhg/2q/n40LIHx9KerzD1d53soSaiy+IpKC8T3Pw9HgVZo+gLWfpVrOtxDwCcFcEKk2inICe6LycHJ0Ht6vWQv6jfDSluK8ulaGbu2uLScsNTJsU=', 'saml.signature.algorithm': 'RSA_SHA256', 'saml_force_name_id_format': 'false', 'saml.client.signature': 'true', 'tls.client.certificate.bound.access.tokens': 'false', 'saml.authnstatement': 'true', 'display.on.consent.screen': 'false', 'saml_name_id_format': 'transient', 'saml_signature_canonicalization_method': 'http://www.w3.org/2001/10/xml-exc-c14n#', 'saml.onetimeuse.condition': 'false'}, 'authenticationFlowBindingOverrides': {}, 'fullScopeAllowed': False, 'nodeReRegistrationTimeout': -1, 'protocolMappers': [{'id': 'a6b34675-2caf-4bb3-b100-d99afdabf40b', 'name': 'Session Duration', 'protocol': 'saml', 'protocolMapper': 'saml-hardcode-attribute-mapper', 'consentRequired': False, 'config': {'attribute.value': '28800', 'attribute.nameformat': 'Basic', 'friendly.name': 'Session Duration', 'attribute.name': 'https://aws.amazon.com/SAML/Attributes/SessionDuration'\}\}, {'id': '71a89dea-ff7e-4976-9678-96fd9a8ab07f', 'name': 'Session Name', 'protocol': 'saml', 'protocolMapper': 'saml-user-property-mapper', 'consentRequired': False, 'config': {'attribute.nameformat': 'Basic', 'user.attribute': 'username', 'friendly.name': 'Session Name', 'attribute.name': 'https://aws.amazon.com/SAML/Attributes/RoleSessionName'\}\}, {'id': '5814420d-46e8-4d58-bbe0-abd5cb1f11f5', 'name': 'Session Role', 'protocol': 'saml', 'protocolMapper': 'saml-role-list-mapper', 'consentRequired': False, 'config': {'single': 'true', 'attribute.nameformat': 'Basic', 'friendly.name': 'Session Role', 'attribute.name': 'https://aws.amazon.com/SAML/Attributes/Role'\}\}\], 'defaultClientScopes': ['web-origins', 'role_list', 'profile', 'roles', 'email'], 'optionalClientScopes': ['address', 'phone', 'offline_access', 'microprofile-jwt'], 'access': {'view': True, 'configure': True, 'manage': True}}, {'id': '40db2a4d-6792-4b68-9d24-f120e8ed6da2', 'clientId': 'broker', 'name': '${client_broker}', 'surrogateAuthRequired': False, 'enabled': True, 'clientAuthenticatorType': 'client-secret', 'redirectUris': [], 'webOrigins': [], 'notBefore': 0, 'bearerOnly': False, 'consentRequired': False, 'standardFlowEnabled': True, 'implicitFlowEnabled': False, 'directAccessGrantsEnabled': False, 'serviceAccountsEnabled': False, 'publicClient': False, 'frontchannelLogout': False, 'protocol': 'openid-connect', 'attributes': {}, 'authenticationFlowBindingOverrides': {}, 'fullScopeAllowed': False, 'nodeReRegistrationTimeout': 0, 'defaultClientScopes': ['web-origins', 'role_list', 'profile', 'roles', 'email'], 'optionalClientScopes': ['address', 'phone', 'offline_access', 'microprofile-jwt'], 'access': {'view': True, 'configure': True, 'manage': True}}, {'id': '85fc8ca2-2cb4-418a-b8ab-7e88e1f09933', 'clientId': 'admin-cli', 'name': '${client_admin-cli}', 'surrogateAuthRequired': False, 'enabled': True, 'clientAuthenticatorType': 'client-secret', 'redirectUris': [], 'webOrigins': [], 'notBefore': 0, 'bearerOnly': False, 'consentRequired': False, 'standardFlowEnabled': False, 'implicitFlowEnabled': False, 'directAccessGrantsEnabled': True, 'serviceAccountsEnabled': False, 'publicClient': True, 'frontchannelLogout': False, 'protocol': 'openid-connect', 'attributes': {}, 'authenticationFlowBindingOverrides': {}, 'fullScopeAllowed': False, 'nodeReRegistrationTimeout': 0, 'defaultClientScopes': ['web-origins', 'role_list', 'profile', 'roles', 'email'], 'optionalClientScopes': ['address', 'phone', 'offline_access', 'microprofile-jwt'], 'access': {'view': True, 'configure': True, 'manage': True}}, {'id': 'f6d8e8b3-c837-4543-a5e1-bcab46926379', 'clientId': 'realm-management', 'name': '${client_realm-management}', 'surrogateAuthRequired': False, 'enabled': True, 'clientAuthenticatorType': 'client-secret', 'redirectUris': [], 'webOrigins': [], 'notBefore': 0, 'bearerOnly': True, 'consentRequired': False, 'standardFlowEnabled': True, 'implicitFlowEnabled': False, 'directAccessGrantsEnabled': False, 'serviceAccountsEnabled': False, 'publicClient': False, 'frontchannelLogout': False, 'protocol': 'openid-connect', 'attributes': {}, 'authenticationFlowBindingOverrides': {}, 'fullScopeAllowed': False, 'nodeReRegistrationTimeout': 0, 'defaultClientScopes': ['web-origins', 'role_list', 'profile', 'roles', 'email'], 'optionalClientScopes': ['address', 'phone', 'offline_access', 'microprofile-jwt'], 'access': {'view': True, 'configure': True, 'manage': True}}]" | prettyjson
 4600  ./sync-kc.sh --env prod --full --force --no-stamp
 4601  gst
 4602  gd
 4603  git add .
 4604  git commit -m "add dynamique clientid"
 4605  gst
 4606  git commit --amend
 4607  gst
 4608  git push
 4609  ssh -i ~/.ssh/seloger/central-auth-keycloak-prod.pem centos@10.105.4.155
 4610  gst
 4611  gd
 4612  git add .
 4613  git commit -m "add api_user pass"
 4614  git push
 4615  gst
 4616  ./aws-cloudform.sh --account central-auth --profile sl-central-auth --category 002-keycloak-prod --stack 002-asg.yml
 4617  gst
 4618  gd
 4619  git add .
 4620  git commit -m "update seloger realm + create api_user"
 4621  git push
 4622  gst
 4623  ./sync-kc.sh --env prod --full --force --no-stamp
 4624  export AWS_PROFILE=sl-central-auth
 4625  ./sync-kc.sh --env prod --full --force --no-stamp
 4626  gst
 4627  gd
 4628  git add .
 4629  git commit -m "update"
 4630  git push
 4631  ./sync-kc.sh --env prod --full --force --no-stamp
 4632  gst
 4633  ./generate-cfn-users.sh
 4634  ./generate-cfn-users.sh && ./aws-cloudform.sh --account digital-nonprod --profile sl-digital-nonprod
 4635  gst
 4636  gd
 4637  git add .
 4638  git commit -m "set envs for idps"
 4639  git push
 4640  gst
 4641  gb
 4642  gp
 4643  gst
 4644  gd
 4645  git add .
 4646  git commit -m "allow asg updates"
 4647  git push
 4648  gst
 4649  ./aws-cloudform.sh --account central-auth --profile sl-central-auth --category 002-keycloak-prod --stack 002-asg.yml
 4650  ssh -i ~/.ssh/seloger/central-auth-keycloak-prod.pem centos@10.105.4.118
 4651  ssh -p 64535 34.227.78.127\n
 4652  cd ../
 4653  cd ..
 4654  l
 4655  cd J1
 4656  l
 4657  gcloud container clusters get-credentials training-cluster-0 --zone europe-west1-b --project wsc-kubernetes-training-1
 4658  kubectl get all
 4659  docker ps
 4660  cd exercice-2
 4661  docker stop -t0 nodeapp
 4662  docker ps
 4663  docker stop -t0 redis
 4664  cd solution
 4665  vim docker-compose.yml
 4666  cd ..
 4667  gst
 4668  mv docker-compose.yml_exo
 4669  docker-compose up -d
 4670  sudo curl -L "https://github.com/docker/compose/releases/download/1.24.1/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
 4671  docker-compose up -d
 4672  sudo chmod +x /usr/local/bin/docker-compose
 4673  docker-compose up -d
 4674  docker ps
 4675  docker-compose stop
 4676  docker-compose rm
 4677  docker ps
 4678  gp
 4679  cd ../exercice-3
 4680  l
 4681  gst
 4682  docker-compose up -d
 4683  docker ps
 4684  docker-compose stop
 4685  docker-compose rm
 4686  docker-compose rm -y
 4687  docker-compose rm -f
 4688  docker-compose up
 4689  docker-compose stop
 4690  docker-compose rm -f
 4691  cd ../exercice-4
 4692  docker-compose --help
 4693  docker-compose up
 4694  cd Téléchargements
 4695  git clone git@github.com:WeScale/kubernetes-formation.git
 4696  cd kubernetes-formation/J1/exercice-4/
 4697  ls -la
 4698  vim docker-compose.yml
 4699  grep -nri .data .
 4700  docker-compose up
 4701  docker-compose rm -f
 4702  docker-compose up
 4703  docker-compose rm -f
 4704  cd ../../J2
 4705  ls -la
 4706  l
 4707  cd Deployment/Exercice1
 4708  kubectl apply -f hello-v1.yml
 4709  kubectl get all
 4710  kubectl destroy -f hello-v1.yml
 4711  kubectl --help
 4712  kubectl delete -f hello-v1.yml
 4713  kubectl get all
 4714  kubectl get services
 4715  cd ../Exercice1
 4716  apiVersion: apps/v1beta1\nkind: Deployment\nmetadata:\n  name: hello-dep\n  namespace: default\nspec:\n  replicas: 2\n  selector:\n    matchLabels:\n      app: hello-dep \n  template:\n    metadata:\n      labels:\n        app: hello-dep\n    spec:\n      containers:\n      - image: gcr.io/google-samples/hello-app:1.0\n        imagePullPolicy: Always\n        name: hello-dep\n        ports:\n        - containerPort: 8080
 4717  gst
 4718  gd
 4719  kubectl apply -f hello-v1.yml
 4720  kubectl get all
 4721  kubectl get services
 4722  kubectl get all
 4723  kubectl apply -f hello-v2.yml
 4724  kubectl get all
 4725  kubectl scale deployment hello-dep --replicas=3
 4726  kubectl get all
 4727  kubectl delete po,deployment,hpa --all
 4728  kubectl get all
 4729  pwd
 4730  cd ../../Pods/Exercice1
 4731  kubectl create -f nginx.yml
 4732  kubectl get pods
 4733  kubectl exec -it nginx -- /bin/bash
 4734  kubectl delete pod nginx
 4735  kubectl get all
 4736  cd ../Exercice2
 4737  kubectl get node
 4738  kubectl taint node gke-training-cluster-0-default-pool-a7d072b1-056v node-type=prod:NoSchedule
 4739  kubectl describe nodes gke-training-cluster-0-default-pool-a7d072b1-056v
 4740  cd ../../
 4741  l
 4742  cd PVC-PV
 4743  l
 4744  cd Exercice1
 4745  l
 4746  kubectl get storageClass
 4747  kubectl describe storageClass standard
 4748  kubectl apply -f pv-pod.yaml
 4749  kubectl exec -it task-pv-pod bash
 4750  kubectl get po
 4751  kubectl get po -w
 4752  watch kubectl get po
 4753  kubectl get po
 4754  kubectl logs task-pv-pod 
 4755  kubectl get po
 4756  kubectl get po -w
 4757  kubectl delete po,deployment,hpa --all
 4758  kubectl get all
 4759  kubectl apply -f pv-claim.yaml
 4760  kubectl get pv
 4761  kubectl apply -f pv-pod.yaml
 4762  kubectl get all
 4763  kubectl get all -w
 4764  kubectl get po -w
 4765  kubectl exec -it task-pv-pod bash
 4766  kubectl delete -f pv-pod.yaml
 4767  kubectl delete pv-pod.yaml
 4768  kubectl apply -f pv-pod.yaml
 4769  kubectl get po -w
 4770  kubectl exec -it task-pv-pod bash
 4771  kubectl delete pv-pod.yaml
 4772  kubectl delete -f pv-pod.yaml
 4773  kubectl delete pvc task-pv-claim
 4774  kubectl delete po task-pv-pod
 4775  pwd
 4776  cd ../../service/ClusterIP
 4777  l
 4778  kubectl get all
 4779  kubectl apply -f deployment.yaml
 4780  kubectl apply -f service.yaml
 4781  kubectl get all
 4782  kubectl get service my-cip-service --output yaml
 4783  kubectl exec -it  my-deployment-7bc95fb476-q75rz /bin/sh
 4784  kubectl get po
 4785  kubectl exec -it  my-deployment-54944c8d55-hsbsc /bin/sh
 4786  kubectl get all
 4787  kubectl get po
 4788  kubectl get all
 4789  kubectl delete -f service.yaml
 4790  kubectl delete -f deployment.yaml
 4791  kubectl get all
 4792  kubectl get po -w
 4793  kubectl get po
 4794  kubectl get all
 4795  cd ../LoadBalancer
 4796  kubectl apply -f my-deployment-50001.yaml
 4797  kubectl apply -f service.yaml
 4798  kubectl get all
 4799  kubectl get svc 
 4800  kubectl get svc -w
 4801  kubectl delete -f service.yaml
 4802  kubectl delete -f my-deployment-50001.yaml
 4803  kubectl get all
 4804  cd ../NodePort
 4805  l
 4806  kubectl get all
 4807  kubectl apply -f my-deployment-50000.yaml
 4808  kubectl apply -f service.yaml
 4809  kubectl get svc -w
 4810  kubectl get service my-np-service --output yaml
 4811  kubectl get nodes --output wide
 4812  kubectl get service my-np-service --output yaml
 4813  kubectl get po
 4814  kubectl get service my-np-service --output yaml
 4815  kubectl get po
 4816  kubectl get all
 4817  kubectl exec -it my-deployment-50000-6fb7b5cdb8-bjrsr sh
 4818  kubectl delete -f service.yaml
 4819  kubectl delete -f my-deployment-50000.yaml
 4820  kubectl get all
 4821  cd ../../
 4822  l
 4823  cd ../J3
 4824  l
 4825  kubectl get all
 4826  cd configMap\&Secret/
 4827  l
 4828  echo -n 'KubernetesTraining!' | base64
 4829  kubectl apply -f mysql-secret.yaml
 4830  kubectl describe secret mariadb-root-password
 4831  kubectl get secret mariadb-root-password -o jsonpath='{.data.password}'
 4832  kubectl create secret generic mariadb-user-creds \\n      --from-literal=MYSQL_USER=kubeuser\\n      --from-literal=MYSQL_PASSWORD=KubernetesTraining
 4833  kubectl create configmap mariadb-config --from-file=max_allowed_packet.cnf
 4834  kubectl get configmap mariadb-config
 4835  kubectl get configmap mariadb-config -o yaml
 4836  kubectl get all
 4837  cd ../gestionDesRessources/Exercice\ 1
 4838  l
 4839  kubectl create namespace default-resources-config
 4840  kubectl create -f limit-range-1.yaml --namespace=default-resources-config
 4841  kubectl create -f default-resources-demo-pod.yaml --namespace default-resources-config
 4842  kubectl get pod default-resources-demo --output=yaml --namespace=default-resources-config
 4843  kubectl create -f default-resources-demo-pod-2.yaml --namespace default-resources-config
 4844  kubectl get pod default-resources-demo-2 --output=yaml --namespace default-resources-config
 4845  kubectl create -f default-resources-demo-pod-3.yaml --namespace default-resources-config
 4846  kubectl get pod default-resources-demo-3 --output=yaml --namespace default-resources-config
 4847  kubectl delete namespace default-resources-config
 4848  gst
 4849  kubectl get all
 4850  kubectl get po
 4851  kubectl get po --all
 4852  kubectl get po -n default-resources-config
 4853  kubectl get all -n default-resources-config
 4854  kubectl get all --namespace default-resources-config
 4855  kubectl get all --namespace default-resources-demo
 4856  kubectl get all -n default-resources-demo
 4857  kubectl get all --namespace default-resources-config
 4858  kubectl delete namespace default-resources-config
 4859  kubectl get all --namespace default-resources-config
 4860  kubectl get all
 4861  pwd
 4862  cd .sec/seloger/forti-vpn
 4863  ./launch-forticli.sh
 4864  pwd
 4865  l
 4866  ssh -i ~/.ssh/seloger/central-auth-keycloak-prod.pem centos@10.105.4.118
 4867  ./aws-cloudform.sh --account central-auth --profile sl-central-auth --test
 4868  ./aws-cloudform.sh --account central-auth --profile sl-central-auth --cfn-nag
 4869  ./aws-cloudform.sh --account central-auth --profile sl-central-auth --cfn-nag | grep Fail
 4870  git checkout master
 4871  gp
 4872  git log
 4873  git branch -d feature/build-prod-env
 4874  gst
 4875  gs
 4876  gst
 4877  gd
 4878  git add .
 4879  gst
 4880  git commit -m "set circle workflow for prod"
 4881  git push
 4882  gst
 4883  l
 4884  pwd
 4885  gst
 4886  gd
 4887  git add .
 4888  git commit -m "unhold"
 4889  git push
 4890  git add .
 4891  git commit -m "unhold"
 4892  git push
 4893  git add .
 4894  git commit -m "good workflow & skip dev"
 4895  git push
 4896  gst
 4897  gd
 4898  git add .
 4899  git commit -m "skip deploy dev"
 4900  git push
 4901  ./aws-cloudform.sh --account central-auth --profile sl-central-auth --category 002-keycloak-prod --stack 002-asg.yml
 4902  gst
 4903  gd
 4904  git add .
 4905  git commit -m "unskip"
 4906  git push
 4907  gst
 4908  gd
 4909  git add .
 4910  git commit -m "full deploy & parameter store by env"
 4911  git push
 4912  gst
 4913  gd
 4914  gst
 4915  git checkout -b feature/add-waf-secu
 4916  git push
 4917  git push --set-upstream origin feature/add-waf-secu
 4918  gst
 4919  git add .
 4920  git commit -m "add waf secu"
 4921  git push
 4922  gst
 4923  gd
 4924  gst
 4925  gd
 4926  git add .
 4927  git commit -m "try it"
 4928  git push
 4929  gst
 4930  ./aws-cloudform.sh --account central-auth --profile sl-central-auth --test
 4931  ./generate-cfn.sh
 4932  ./aws-cloudform.sh --account central-auth --profile sl-central-auth --test
 4933  git checkout master
 4934  gp
 4935  ./aws-cloudform.sh --account central-auth --profile sl-central-auth --category 001-keycloak-dev
 4936  gst
 4937  gd
 4938  gp
 4939  gst
 4940  gp
 4941  git checkout -b feature/update-secu-rights
 4942  ./generate-cfn.sh
 4943  ./aws-cloudform.sh --account central-auth --profile sl-central-auth --category 002-iamaccess --stack 021-security.yml
 4944  gd
 4945  greset
 4946  gst
 4947  ssh -i ~/.ssh/seloger/central-auth-keycloak-dev.pem centos@10.105.6.133
 4948  ssh -i ~/.ssh/seloger/central-auth-keycloak-prod.pem centos@10.105.6.100
 4949  sleep 10
 4950  while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' -k localhost:443)" != "200" ]]; do sleep 5; done
 4951  curl -s -o /dev/null -w ''%{http_code}'' -k localhost:443
 4952  curl -s -o /dev/null -w ''%{http_code}'' -k https://localhost:443
 4953  curl -s -o /dev/null -w ''%{http_code}'' -k https://localhost:443/auth
 4954  curl -k https://localhost:443/auth
 4955  tmux
 4956  :q
 4957  ps aux | grep tmux
 4958  tmux list-sessions
 4959  tmux attach-session
 4960  ssh -i ~/.ssh/seloger/central-auth-keycloak-prod.pem centos@10.105.6.100
 4961  gst
 4962  gd
 4963  git add .
 4964  git commit -m "add wait timer"
 4965  gst
 4966  git push
 4967  gst
 4968  st
 4969  gst
 4970  gd
 4971  ./aws-cloudform.sh --account central-auth --profile sl-central-auth --test
 4972  docker stop -t0 keycloak && docker rm keycloak
 4973  docker ps
 4974  docker images
 4975  ssh -i ~/.ssh/seloger/central-auth-keycloak-prod.pem centos@10.105.6.100
 4976  ssh -i ~/.ssh/seloger/central-auth-keycloak-dev.pem centos@10.105.6.167
 4977  export AWS_PROFILE=sl-central-auth
 4978  ./sync-kc.sh --env dev --full --force
 4979  ./sync-kc.sh --env prod --full --force
 4980  gst
 4981  gd
 4982  gst
 4983  gd
 4984  git add .
 4985  git commit -m "update pipeline"
 4986  git push
 4987  gst
 4988  gd
 4989  git add .
 4990  git commit -m "update circle"
 4991  git push
 4992  ssh -p 64544 34.207.186.82\n
 4993  ./generate-cfn.sh
 4994  ./aws-cloudform.sh --account central-auth --profile sl-central-auth --category 002-iamaccess --stack 021-security.yml
 4995  gp
 4996  sudo apt update && sudo apt -y upgrade && sudo apt -y autoremove
 4997  uname -a
 4998  lsb_release -a
 4999  ssh -p 64536 3.83.248.19
 5000  gst
 5001  vim test.py
 5002  python3 test.py
 5003  vim test.py
 5004  /usr/local/bin/python3
 5005  gst
 5006  gd
 5007  gst
 5008  git add .
 5009  git commit -m "add test cmd"
 5010  git push
 5011  python3 test.py
 5012  env | grep AWS_
 5013  cd dev/www
 5014  l
 5015  cd seloger
 5016  grep -nri "client('secretsmanager" .
 5017  ssh -p 64535 107.22.112.66\n
 5018  python3 test.py
 5019  gst
 5020  gd
 5021  gst
 5022  gd
 5023  git add .
 5024  git commit -m "test"
 5025  git push
 5026  python3 test.py
 5027  grep -nri "boto3." .
 5028  cd ..
 5029  l
 5030  cd ../
 5031  cd ../J2
 5032  l
 5033  cd service/NodePort
 5034  l
 5035  kubectl get all
 5036  kubectl apply -f my-deployment-50000.yaml
 5037  kubectl apply -f service.yaml
 5038  kubectl get all
 5039  kubectl delete -f my-deployment-50000.yaml
 5040  kubectl delete -f service.yaml
 5041  cd ../../../J3/configMap\&Secret/
 5042  l
 5043  kubectl get configmap mariadb-config -o yaml
 5044  gst
 5045  gd
 5046  gst
 5047  gd
 5048  gst
 5049  gd
 5050  git add .
 5051  git commit -m "test"
 5052  git push
 5053  gst
 5054  gd
 5055  git add 
 5056  git add .
 5057  gst
 5058  git commit -m "source bashrc"
 5059  gst
 5060  git push
 5061  gst
 5062  gb
 5063  gst
 5064  gp
 5065  gst
 5066  gd
 5067  git add .
 5068  gst
 5069  git comit -m "remove test"
 5070  git commit -m "remove test"
 5071  git push
 5072  gst
 5073  vi ~/.zshrc
 5074  echo $CIRCLECI_SL_TOKEN
 5075  curl -u ${CIRCLECI_SL_TOKEN}: \\n     -d build_parameters[CIRCLE_JOB]=deploy_docker \\n     https://circleci.com/api/v1.1/project/gh/axel-springer-kugawana/sl_security-aws-iam-users//tree/master
 5076  curl -u ${CIRCLECI_SL_TOKEN}: \\n     -d build_parameters[CIRCLE_JOB]=deploy_central_auth \\n     https://circleci.com/api/v1.1/project/gh/axel-springer-kugawana/sl_security-aws-iam-users//tree/master
 5077  curl -u ${CIRCLECI_SL_TOKEN}: \\n     https://circleci.com/api/v1.1/project/gh/axel-springer-kugawana/sl_security-aws-iam-users//tree/master
 5078  curl -u ${CIRCLECI_SL_TOKEN}: \\n     https://circleci.com/api/v1.1/project/gh/axel-springer-kugawana/sl_security-aws-iam-users/tree/master
 5079  curl -u ${CIRCLECI_SL_TOKEN}: \\n     -d build_parameters[CIRCLE_JOB]=deploy_central_auth \\n     https://circleci.com/api/v1.1/project/gh/axel-springer-kugawana/sl_security-aws-iam-users//tree/master
 5080  curl -u ${CIRCLECI_SL_TOKEN} \\n     -d build_parameters[CIRCLE_JOB]=deploy_central_auth \\n     https://circleci.com/api/v1.1/project/gh/axel-springer-kugawana/sl_security-aws-iam-users//tree/master
 5081  curl -u ${CIRCLECI_SL_TOKEN}: \\n     -d build_parameters[CIRCLE_JOB]=deploy_central_auth \\n     https://circleci.com/api/v1.1/project/gh/axel-springer-kugawana/sl_security-aws-iam-users/tree/master
 5082  curl -u ${CIRCLECI_SL_TOKEN} \\n     -d build_parameters[CIRCLE_JOB]="deploy_central_auth" \\n     https://circleci.com/api/v1.1/project/gh/axel-springer-kugawana/sl_security-aws-iam-users/tree/master
 5083  curl -u ${CIRCLECI_SL_TOKEN}: \\n     -d build_parameters[CIRCLE_JOB]="deploy_central_auth" \\n     https://circleci.com/api/v1.1/project/gh/axel-springer-kugawana/sl_security-aws-iam-users/tree/master
 5084  curl -u ${CIRCLECI_SL_TOKEN}: \\n     -d build_parameters[CIRCLE_JOB]=deploy_central_auth \\n     https://circleci.com/api/v1.1/project/github/axel-springer-kugawana/sl_security-aws-iam-users/tree/master
 5085  curl -u ${CIRCLECI_SL_TOKEN}: https://circleci.com/api/v1.1/project/github/axel-springer-kugawana/sl_security-aws-iam-users/tree/master
 5086  curl -XPOST -u ${CIRCLECI_SL_TOKEN}: https://circleci.com/api/v1.1/project/github/axel-springer-kugawana/sl_security-aws-iam-users/tree/master
 5087  curl -XPOST -u ${CIRCLECI_SL_TOKEN}: -d build_parameters[CIRCLE_JOB]=deploy_central_auth https://circleci.com/api/v1.1/project/github/axel-springer-kugawana/sl_security-aws-iam-users/tree/master
 5088  curl -XPOST -u ${CIRCLECI_SL_TOKEN}: -d build_parameters["CIRCLE_JOB"]=deploy_central_auth https://circleci.com/api/v1.1/project/github/axel-springer-kugawana/sl_security-aws-iam-users/tree/master
 5089  curl -XPOST -u ${CIRCLECI_SL_TOKEN}: -d build_parameters["CIRCLE_JOB"]=cfn_nag https://circleci.com/api/v1.1/project/github/axel-springer-kugawana/sl_security-aws-iam-users/tree/master
 5090  curl -XPOST -u ${CIRCLECI_SL_TOKEN}: -d 'build_parameters["CIRCLE_JOB"]=cfn_nag' https://circleci.com/api/v1.1/project/github/axel-springer-kugawana/sl_security-aws-iam-users/tree/master
 5091  curl -XPOST -u ${CIRCLECI_SL_TOKEN}: -d 'build_parameters[CIRCLE_JOB]=cfn_nag' https://circleci.com/api/v1.1/project/github/axel-springer-kugawana/sl_security-aws-iam-users/tree/master
 5092  curl -XPOST -u ${CIRCLECI_SL_TOKEN}: -d 'build_parameters[CIRCLE_JOB]=deploy_central_auth' https://circleci.com/api/v1.1/project/github/axel-springer-kugawana/sl_security-aws-iam-users/tree/master
 5093  curl -XPOST -u ${CIRCLECI_SL_TOKEN}: \\n    -d 'build_parameters[CIRCLE_JOB]=deploy_central_auth' \\n    https://circleci.com/api/v1.1/project/github/axel-springer-kugawana/sl_security-aws-iam-users/tree/master
 5094  curl -X POST --header "Content-Type: application/json" -d '{\n  "build_parameters": {\n    "CIRCLE_JOB": "deploy_central_auth"\n  }\n}'\nhttps://circleci.com/api/v1.1/project/github/axel-springer-kugawana/sl_security-aws-iam-users\?circle-token\=$CIRCLECI_SL_TOKEN
 5095  curl -X POST https://circleci.com/api/v1.1/project/github/axel-springer-kugawana/sl_security-aws-iam-users/tree/master/build\?circle-token\=:$CIRCLECI_SL_TOKEN
 5096  curl -X POST https://circleci.com/api/v1.1/project/github/axel-springer-kugawana/sl_security-aws-iam-users/tree/master\?circle-token\=:$CIRCLECI_SL_TOKEN
 5097  curl -X POST https://circleci.com/api/v1.1/project/github/axel-springer-kugawana/sl_security-aws-iam-users\?circle-token\=:$CIRCLECI_SL_TOKEN
 5098  curl -X POST https://circleci.com/api/v1.1/project/github/axel-springer-kugawana/sl_security-aws-iam-users?circle-token\=:$CIRCLECI_SL_TOKEN
 5099  curl -X POST https://circleci.com/api/v1.1/project/github/axel-springer-kugawana/sl_security-aws-iam-users?circle-token=$CIRCLECI_SL_TOKEN
 5100  cd pCloudDrive
 5101  l
 5102  cd notes
 5103  grep -nri circle-token .
 5104  curl https://circleci.com/api/v1.1/me\?circle-token\=$CIRCLE_SL_TOKEN
 5105  curl https://circleci.com/api/v1.1/projects\?circle-token\=$CIRCLE_SL_TOKEN
 5106  curl -X GET \\n  'https://circleci.com/api/v1.1/me?circle-token=39fd0bfe26e32e8e35ba56a59f75ef8c1ffbeec5' \\n  -H 'Accept: */*' \\n  -H 'Accept-Encoding: gzip, deflate' \\n  -H 'Cache-Control: no-cache' \\n  -H 'Connection: keep-alive' \\n  -H 'Host: circleci.com' \\n  -H 'Postman-Token: 66a35301-f0f7-4a9b-a947-1e66c8168fbd,1837ec49-427a-4964-9556-31b9624a8cce' \\n  -H 'User-Agent: PostmanRuntime/7.17.1' \\n  -H 'cache-control: no-cache'
 5107  curl https://circleci.com/api/v1.1/me\?circle-token\=39fd0bfe26e32e8e35ba56a59f75ef8c1ffbeec5
 5108  curl https://circleci.com/api/v1.1/me\?circle-token\=$CIRCLE_SL_TOKEN
 5109  echo $CIRCLE_SL_TOKEN
 5110  env | grep CIRCLE
 5111  curl https://circleci.com/api/v1.1/projects\?circle-token\=$CIRCLECI_SL_TOKEN
 5112  curl https://circleci.com/api/v1.1/me\?circle-token\=$CIRCLECI_SL_TOKEN
 5113  curl -X POST https://circleci.com/api/v1.1/project/github/axel-springer-kugawana/sl_security-aws-iam-users/build\?circle-token\=$CIRCLECI_SL_TOKEN
 5114  gst
 5115  gd
 5116  git add .
 5117  git commit -m "full auto"
 5118  git push
 5119  gst
 5120  gb
 5121  gst
 5122  gp
 5123  gst
 5124  gd
 5125  git add .
 5126  git commit -m "update secu"
 5127  git push
 5128  git push --set-upstream origin feature/update-secu-rights
 5129  gst
 5130  git checkout master
 5131  gp
 5132  git checkout feature/update-secu-rights
 5133  gp
 5134  git merge master
 5135  git push
 5136  git checkout master
 5137  gp
 5138  gst
 5139  gd
 5140  git add .
 5141  git commit -m "comment data envs"
 5142  git push
 5143  ps aux
 5144  ps aux | grep calendar
 5145  sudo pkill -f calendar
 5146  ps aux | grep calendar
 5147  watch -n1 'ps aux | grep calendar'
 5148  htop
 5149  sudo pkill -f calendar
 5150  watch -n1 'ps aux | grep calendar'
 5151  sudo kill -9 25542
 5152  sudo kill -9 25549
 5153  sudo kill -9 25735
 5154  sudo apt update && sudo apt -y upgrade && sudo apt -y autoremove
 5155  tail -f /var/log/syslog
 5156  df -h
 5157  sudo tail -f /var/log/syslog
 5158  sudo vim /var/log/syslog
 5159  systemctl enable bluetooth.service
 5160  sudo systemctl enable bluetooth.service
 5161  sudo systemctl status bluetooth.service
 5162  shutdown -r now
 5163  sudo -i
 5164  ncdu
 5165  du
 5166  df -h
 5167  ls -la
 5168  systemctl status
 5169  systemctl status --all
 5170  systemctl list-unit-files
 5171  cat /var/log/boot.log
 5172  sudo -i
 5173  whoami
 5174  cd dev/scripts
 5175  l
 5176  ./rsync-to-nas.sh
 5177  vim rsync-to-nas.sh
 5178  ssh jdx-admin@jdx-syno-local -2223
 5179  ssh jdx-admin@jdx-syno-local -p2223
 5180  vim rsync-to-nas.
 5181  vim rsync-to-nas.sh
 5182  ./rsync-to-nas.sh
 5183  rm -rf /home/jdx/dev/www/wescale/kubernetes-formation/J1/exercice-4/.data
 5184  sudo rm -rf /home/jdx/dev/www/wescale/kubernetes-formation/J1/exercice-4/.data
 5185  ./rsync-to-nas.sh
 5186  vim rsync-to-nas.sh
 5187  ./rsync-to-nas.sh
 5188  ls -la
 5189  tmux
 5190  %
 5191  vim rsync-to-nas.sh
 5192  cd
 5193  ls -la
 5194  ls -l
 5195  l Documents
 5196  l Vidéos
 5197  ls -la
 5198  ls -la | less
 5199  date
 5200  pwd
 5201  ls -la
 5202  vim rsync-to-nas.sh
 5203  l
 5204  vim .zshrc
 5205  cp .zshrc Téléchargements/.zshrc.copy
 5206  vim Téléchargements/.zshrc.copy
 5207  rm toto toto2
 5208  cp .tmux.conf Téléchargements/.tmux.conf.copy
 5209  l | less
 5210  l .config
 5211  l .config/gcloud
 5212  l .aws
 5213  ./rsync-to-nas.sh
 5214  cd
 5215  :q!
 5216  cd
 5217  ping google.fr
 5218  vim /etc/apt/sources.list
 5219  sudo -i
 5220  screenfetch
 5221  sudo apt install firefox
 5222  apt search firefox-esr
 5223  firefox
 5224  snap --help
 5225  sudo -i
 5226  sudo apt install -t sid firefox
 5227  sudo -i
 5228  vim pCloudDrive/notes/todo.txt
 5229  screenfetch
 5230  sudo -i
 5231  cd .mozilla
 5232  l
 5233  cd ..
 5234  mv .mozilla .mozilla.bkp
 5235  l
 5236  uname -a
 5237  lsn_release -a
 5238  lsb_release -a
 5239  ping google.fr
 5240  cd Téléchargements/kubernetes-formation
 5241  gst
 5242  gp
 5243  git log
 5244  vim pCloudDrive/notes/todo.txt
 5245  cd J2/service/NodePort
 5246  l
 5247  kubectl get all
 5248  kubectl apply -f my-deployment-50000.yaml
 5249  kubectl apply -f service.yaml
 5250  kubectl get all
 5251  kubectl get service my-np-service --output yaml
 5252  kubectl get nodes --output wide
 5253  sudo -i
 5254  kubectl get nodes --output wide
 5255  kubectl get all
 5256  kubectl delete service.yaml
 5257  kubectl delete -f service.yaml
 5258  kubectl delete -f my-deployment-50000.yaml
 5259  k
 5260  vim ~/.zshrc
 5261  k get all
 5262  k apply -f my-deployment-50000.yaml
 5263  kubelctl apply -f my-deployment-50000.yaml
 5264  kubectl apply -f my-deployment-50000.yaml
 5265  k apply -f my-deployment-50000.yaml
 5266  k apply -f service.yaml
 5267  k get all
 5268  k delete -f service.yaml
 5269  k apply -f service.yaml
 5270  k get all
 5271  screenfetch
 5272  k get all
 5273  gst
 5274  gd
 5275  k get all
 5276  cd J2/service/NodePort
 5277  l
 5278  k delete -f service.yaml
 5279  k delete -f my-deployment-50000.yaml
 5280  gst
 5281  git checkout service.yaml
 5282  k get all
 5283  k --help
 5284  k version
 5285  cd dev/www
 5286  l
 5287  cd wescale
 5288  l
 5289  cat kubernetes-formation/.git/config
 5290  git clone git@github.com:WeScale/kubernetes-formation.git kubernetes-formation_edit
 5291  l
 5292  k get all
 5293  cd J2/exercice-kubernetes
 5294  l
 5295  k apply -f webservice.yaml
 5296  k get all
 5297  k get node
 5298  k get svc
 5299  kubectl get nodes --output wide
 5300  gcloud compute firewall-rules create test-node-port --allow tcp:8080\n
 5301  gcloud compute firewall-rules delete test-node-port
 5302  gcloud compute firewall-rules create test-node-port --allow tcp:8080\n
 5303  k get all
 5304  k delete -f webservice.yaml
 5305  k get all
 5306  cd 
 5307  cd J3/
 5308  l
 5309  k get all
 5310  vim pCloudDrive/notes/todo.txt
 5311  k get all
 5312  k info
 5313  k --help
 5314  cd J2/service/NodePort
 5315  l
 5316  k apply -f my-deployment-50000.yaml
 5317  k apply -f service.yaml
 5318  k get all
 5319  k get nodes -o wide
 5320  k delete -f service.yaml
 5321  k delete -f my-deployment-50000.yaml
 5322  cd ../../exercice-kubernetes
 5323  k get all
 5324  pwd
 5325  k apply -f webservice.yaml
 5326  k get all
 5327  k get nodes -o wide
 5328  k get nodes
 5329  k delete -f webservice.yaml
 5330  k get all
 5331  cd ../../
 5332  l
 5333  cd J3
 5334  l
 5335  k get all
 5336  cd ingressController
 5337  l
 5338  k get all
 5339  kubectl run web --image=gcr.io/google-samples/hello-app:1.0 --port=8080
 5340  k get all
 5341  kubectl expose deployment web --target-port=8080 --type=NodePort
 5342  k get all
 5343  k get nodes -o wide
 5344  kubectl get all --all-namespaces
 5345  kubectl get all --help
 5346  kubectl get all -n default
 5347  kubectl get all
 5348  kubectl get all help
 5349  kubectl get all --help
 5350  kubectl --help
 5351  kubectl
 5352  kubectl get all --help
 5353  kubectl get all -A
 5354  kubectl get all
 5355  k delete deployment deployment.apps/web
 5356  k delete deployment web
 5357  kubectl get all
 5358  k delete svc web
 5359  kubectl get all
 5360  kubectl get all -A
 5361  kubectl create web --image=gcr.io/google-samples/hello-app:1.0 --port=8080
 5362  kubectl get all -A
 5363  kubectl get all
 5364  kubectl run web --image=gcr.io/google-samples/hello-app:1.0 --port=8080
 5365  kubectl get all
 5366  k delete deployment,svc web
 5367  kubectl get all
 5368  kubectl create web --image=gcr.io/google-samples/hello-app:1.0 --port=8080
 5369  gst
 5370  kubectl run web --image=gcr.io/google-samples/hello-app:1.0 --port=8080
 5371  k delete deployment,svc web
 5372  kubectl run web --image=gcr.io/google-samples/hello-app:1.0 --port=8080 --generator=run-pod/v1
 5373  k delete deployment,svc web
 5374  k delete po web
 5375  kubectl run web --image=gcr.io/google-samples/hello-app:1.0 --port=8080
 5376  kubectl expose deployment web --target-port=8080 --type=NodePort
 5377  kubectl get service web
 5378  kubectl apply -f basic-ingress.yaml
 5379  kubectl get ingress basic-ingress
 5380  k get nodes -o wide
 5381  k get all
 5382  curl http://34.76.14.29:32387
 5383  k get ing
 5384  curl http://34.102.223.131
 5385  kubectl expose deployment web2 --target-port=8080 --type=NodePort
 5386  k get deployments
 5387  kubectl expose deployment web --target-port=8080 --type=NodePort
 5388  kubectl run web2  --generator=deployment/apps.v1 --image=gcr.io/google-samples/hello-app:2.0 --port=8080
 5389  kubectl expose deployment web2 --target-port=8080 --type=NodePort
 5390  k get all
 5391  kubectl get service web
 5392  kubectl apply -f basic-ingress.yaml
 5393  kubectl get ingress basic-ingress
 5394  kubectl expose deployment web2 --target-port=8080 --type=NodePort
 5395  kubectl apply -f fanout-ingress.yaml
 5396  kubectl get ingress basic-ingress
 5397  kubectl get ingress
 5398  kubectl get ingress basic-ingress
 5399  kubectl get ingress fanout-ingress
 5400  watch 'kubectl get ingress fanout-ingress'
 5401  gst
 5402  gd
 5403  cd ../configMap\&Secret
 5404  l
 5405  echo -n 'KubernetesTraining!' | base64
 5406  kubectl apply -f mysql-secret.yaml
 5407  kubectl describe secret mariadb-root-password
 5408  kubectl get secret mariadb-root-password -o jsonpath='{.data.password}'
 5409  kubectl create secret generic mariadb-user-creds \\n      --from-literal=MYSQL_USER=kubeuser\\n      --from-literal=MYSQL_PASSWORD=KubernetesTraining
 5410  gst
 5411  gd
 5412  git add .
 5413  gst
 5414  gd
 5415  git add .
 5416  kubectl delete ingress basic-ingress\nkubectl delete ingress fanout-ingress\nkubectl delete deployment web web2\nkubectl delete service web web2
 5417  k get all
 5418  l
 5419  git commit -m "update readme"
 5420  git push
 5421  gst
 5422  gp
 5423  kubectl apply -f mysql-secret.yaml
 5424  kubectl describe secret mariadb-root-password
 5425  kubectl get secret mariadb-root-password -o jsonpath='{.data.password}'
 5426  kubectl get secret 
 5427  kubectl get secret -A
 5428  kubectl create secret generic mariadb-user-creds \\n      --from-literal=MYSQL_USER=kubeuser\\n      --from-literal=MYSQL_PASSWORD=KubernetesTraining
 5429  kubectl create configmap mariadb-config --from-file=max_allowed_packet.cnf
 5430  kubectl get configmap mariadb-config
 5431  kubectl get configmap 
 5432  kubectl get configmap mariadb-config
 5433  kubectl get configmap mariadb-config -o yaml
 5434  kubectl create -f mariadb-deployment.yaml
 5435  k get po
 5436  kubectl create -f mariadb-deployment.yaml
 5437  k get po
 5438  k get po -w
 5439  kubectl exec -it mariadb-deployment-5674978f96-tkbg2 env |grep MYSQL
 5440  kubectl exec -it mariadb-deployment-5674978f96-tkbg2 ls /etc/mysql/conf.d
 5441  kubectl exec -it mariadb-deployment-5674978f96-tkbg2 cat /etc/mysql/conf.d/max_allowed_packet.cnf
 5442  kubectl exec -it mariadb-deployment-5674978f96-tkbg2 bin/sh
 5443  k get secret,configmap
 5444  kubectl delete deployment mariadb-deployment\nkubectl delete cm mariadb-config\nkubectl delete secret mariadb-root-password mariadb-user-creds
 5445  k get secret,configmap
 5446  k get all
 5447  cd ../Synthese/exercice-guestbook-go/
 5448  l
 5449  kubectl apply -f redis-master-deploy.yaml
 5450  k get deployment
 5451  k get deployment -o wide
 5452  k get deployments
 5453  k get po
 5454  kubectl apply -f redis-master-service.yaml
 5455  kubectl get services
 5456  kubectl get services -o wide
 5457  kubectl get po -o wide
 5458  kubectl get services -o wide
 5459  kubectl apply -f redis-slave-deploy.yaml
 5460  kubectl get deploy -o wide
 5461  kubectl get deployment -o wide
 5462  k get deploy -o wide
 5463  k get po
 5464  kubectl apply -f redis-slave-service.yaml
 5465  k get svc -o wide
 5466  kubectl apply -f guestbook-deploy.yaml
 5467  kubectl get deploy -o wide
 5468  k get po
 5469  kubectl apply -f guestbook-service.yaml
 5470  kubectl get services
 5471  kubectl get services -o wide
 5472  kubectl get nodes -o wide
 5473  kubectl get svc -n kube-system
 5474  k delete -f .
 5475  k get all
 5476  cd ../../strategies_deploiement
 5477  l
 5478  kubectl apply -f Strategies_deploiement/deployment-v1.0.yaml
 5479  k get deploy
 5480  k get deployments
 5481  kubectl describe deployments kdemo-dep
 5482  k get all
 5483  kubectl apply -f deployment-v1.0.yaml
 5484  k get deploy
 5485  k get deploy -w
 5486  pwd
 5487  gst
 5488  gd
 5489  git add .
 5490  git commit -m "udpdate readme"
 5491  git push
 5492  gp
 5493  kubectl get deployments
 5494  kubectl describe deployments kdemo-dep
 5495  k desc deployments kdemo-dep
 5496  kubectl describe deployments kdemo-dep
 5497  kubectl get pods -o wide
 5498  kubectl expose deployment kdemo-dep \\n--type=LoadBalancer \\n--name=kdemo-svc \\n--port=80 \\n--target-port=8080
 5499  kubectl create -f service.yaml
 5500  kubectl get services kdemo-svc
 5501  kubectl get services kdemo-svc -w
 5502  kubectl apply -f deployment-v1.1.yaml
 5503  kubectl get pods -o wide
 5504  kubectl get pods -o wide -w
 5505  kubectl rollout undo deployment kdemo-dep
 5506  kubectl rollout status deployment kdemo-dep
 5507  k get po
 5508  k get po -o wide -w
 5509  k get po
 5510  kubectl delete services kdemo-svc
 5511  kubectl delete -f deployment-v1.1.yaml
 5512  k get all
 5513  gst
 5514  git log
 5515  gd
 5516  git add .
 5517  gst
 5518  git commit -m "update readme"
 5519  git push
 5520  gp
 5521  gst
 5522  *
 5523  gst
 5524  kubectl apply -f service.yaml
 5525  kubectl apply -f healthy-deployment.yaml
 5526  kubectl get pods -o wide
 5527  kubectl get pods -o wide -w
 5528  cat healthy-deployment.yaml
 5529  kubectl delete -f service.yaml
 5530  k get all
 5531  cd ../health_check
 5532  k get all
 5533  kubectl apply -f service.yaml
 5534  kubectl apply -f healthy-deployment.yaml
 5535  kubectl get pods -o wide -w
 5536  kubectl get services
 5537  kubectl apply -f broken-deployment.yaml
 5538  kubectl get event
 5539  kubectl get event -w
 5540  k get svc
 5541  k delete -f .
 5542  kubectl delete -f broken-deployment.yaml
 5543  k get all
 5544  cd ../gestionDesRessources
 5545  l
 5546  cd Exercice\ 1
 5547  l
 5548  kubectl create namespace default-resources-config
 5549  kubectl create -f limit-range-1.yaml --namespace=default-resources-config
 5550  kubectl create -f default-resources-demo-pod.yaml --namespace default-resources-config
 5551  kubectl get pod default-resources-demo-pod --namespace=default-resources-config
 5552  kubectl get pod default-resources-demo --namespace=default-resources-config
 5553  kubectl get pod default-resources-demo -o yaml --namespace=default-resources-config
 5554  kubectl create -f default-resources-demo-pod-2.yaml --namespace default-resources-config
 5555  kubectl get pod default-resources-demo-2 --output=yaml --namespace default-resources-config
 5556  kubectl create -f default-resources-demo-pod-3.yaml --namespace default-resources-config
 5557  kubectl get pod default-resources-demo-3 --output=yaml --namespace default-resources-config
 5558  kubectl get pod default-resources-demo-3 --output=yaml --namespace default-resources-config -w
 5559  kubectl get pod default-resources-demo-3 --output=yaml --namespace default-resources-config
 5560  kubectl get pod default-resources-demo-2 --output=yaml --namespace default-resources-config
 5561  k get all -n default-resources-config
 5562  kubectl delete namespace default-resources-config
 5563  kubectl create namespace resource-constraints-demo
 5564  kubectl create -f resource-constraints-pod.yaml --namespace resource-constraints-demo2
 5565  kubectl create -f resource-constraints-pod.yaml --namespace resource-constraints-demo
 5566  cd ../Exercice\ 2
 5567  kubectl create -f resource-constraints-pod.yaml --namespace resource-constraints-demo2
 5568  kubectl create -f resource-constraints-pod.yaml --namespace resource-constraints-demo
 5569  kubectl get pod resource-constraints-pod --namespace resource-constraints-demo --output=yaml
 5570  kubectl create -f resource-constraints-pod-2.yaml --namespace resource-constraints-demo
 5571  kubectl get pod resource-constraints-pod --namespace resource-constraints-demo --output=yaml
 5572  kubectl create namespace resource-quota-demo
 5573  kubectl create -f resource-quota.yaml --namespace resource-quota-demo
 5574  kubectl delete namespace resource-constraints-demo\nkubectl delete namespace resource-quota-demo
 5575  k get all
 5576  kubectl create namespace resource-constraints-demo
 5577  kubectl create -f limit-range-2.yaml --namespace=resource-constraints-demo
 5578  kubectl create -f resource-constraints-pod.yaml --namespace resource-constraints-demo
 5579  kubectl get pod resource-constraints-pod --namespace resource-constraints-demo --output=yaml
 5580  k get po
 5581  k get po -n resource-constraints-demo
 5582  kubectl create -f resource-constraints-pod-2.yaml --namespace resource-constraints-demo
 5583  kubectl create namespace resource-quota-demo
 5584  kubectl create -f resource-quota.yaml --namespace resource-quota-demo
 5585  kubectl get resourcequota --namespace resource-quota-demo --output=yaml
 5586  kubectl create -f resource-quota-pod-1.yaml --namespace resource-quota-demo
 5587  kubectl get resourcequota --namespace resource-quota-demo --output=yaml
 5588  kubectl create -f resource-quota-pod-2.yaml --namespace resource-quota-demo
 5589  kubectl delete namespace resource-constraints-demo\nkubectl delete namespace resource-quota-demo
 5590  k get all
 5591  cd ../../exercice-monitoring
 5592  l
 5593  k apply -f .
 5594  k get all
 5595  k get po -w
 5596  k get all
 5597  k get nodes -o wide
 5598  k delete -f .
 5599  k get all
 5600  cd ../../J2/Pods/Exercice2
 5601  l
 5602  k get all
 5603  k get node
 5604  k get all -o wide
 5605  k get node -o wide
 5606  kubectl taint node gke-training-cluster-0-default-pool-a7d072b1-056v node-type=prod:NoSchedule
 5607  kubectl describe nodes gke-training-cluster-0-default-pool-a7d072b1-056v
 5608  kubectl create -f dev-pod-busybox.yml
 5609  kubectl get pod -o wide
 5610  kubectl create -f prod-deployment.yml
 5611  kubectl get pod -o wide
 5612  kubectl get pods -o wide
 5613  kubectl get pods dev-pod -o yaml
 5614  kubectl get pods prod-pod -o yaml
 5615  k get po
 5616  k get po -o wide
 5617  k describe node gke-training-cluster-0-default-pool-a7d072b1-b39r | grep taint
 5618  k describe node gke-training-cluster-0-default-pool-a7d072b1-b39r | grep Taint
 5619  k get nodes
 5620  k describe node gke-training-cluster-0-default-pool-a7d072b1-056v | grep Taint
 5621  k describe node gke-training-cluster-0-default-pool-a7d072b1-8mz2 | grep Taint
 5622  pwd
 5623  cd ..
 5624  l
 5625  cd ..
 5626  l
 5627  k get all
 5628  pwd
 5629  ls -la
 5630  k get all
 5631  pwd
 5632  l
 5633  pwd
 5634  l
 5635  k get all
 5636  pwd
 5637  k get all
 5638  k delete -f .
 5639  pwd
 5640  k get all
 5641  pwd
 5642  k get all
 5643  k delete -f .
 5644  k delete -f ./*.yml
 5645  k delete -f *.yml
 5646  cd J2/Pods/Exercice2
 5647  k delete -f ./*.yml
 5648  k delete -f .
 5649  k get nodes -o wide
 5650  kubectl taint nodes gke-training-cluster-0-default-pool-a7d072b1-056v node-type-
 5651  kubectl describe nodes gke-training-cluster-0-default-pool-a7d072b1-056v
 5652  gst
 5653  gd
 5654  git add .
 5655  git commit -m "update readme"
 5656  git push
 5657  gst
 5658  cd ../../
 5659  cd ..
 5660  k get all
 5661  gst
 5662  sudo -i
 5663  docker ps
 5664  docker network ls
 5665  k get all
 5666  vim pCloudDrive/notes/todo.txt
 5667  cat /etc/apt/sources.list
 5668  k get all
 5669  cd J2
 5670  l
 5671  kubectl taint --help
 5672  cd Pods
 5673  l
 5674  kubectl create -f nginx.yml
 5675  cd Exercice
 5676  cd Exercice1
 5677  kubectl create -f nginx.yml
 5678  pwd
 5679  k get all
 5680  kubectl exec --help
 5681  l
 5682  cd ../../
 5683  l
 5684  cd Deployment/Exercice1
 5685  l
 5686  k
 5687  k get all
 5688  k apply -f hello-v1.yml
 5689  k get all
 5690  ping google.fr
 5691  tcpdump
 5692  sudo -i
 5693  tcpdump
 5694  l
 5695  pwd
 5696  sudo -i
 5697  ping google.fr
 5698  apt search vbox-guest
 5699  apt search virtualbox-guest
 5700  which virtualbox-guest-additions-iso
 5701  sudo -i
 5702  ping google.fr
 5703  l
 5704  htop
 5705  sudo -i
 5706  l /media/jdx/Linux Mint 19.2 Xfce 64-bit
 5707  sudo -i
 5708  k
 5709  screenfetch
 5710  cd J2/service/ClusterIP
 5711  l
 5712  k delete deployment.yaml,service.yaml
 5713  k delete deployment.yaml
 5714  k delete -f deployment.yaml,service.yaml
 5715  l
 5716  cd ../
 5717  l
 5718  cd ..
 5719  l
 5720  cd PVC-PV
 5721  l
 5722  cd Exercice1
 5723  l
 5724  cd ../../
 5725  l
 5726  cd Deployment/Exercice1
 5727  l
 5728  k delete -f .
 5729  k delete -f hello-v
 5730  k delete -f hello-v1
 5731  k delete -f hello-v1.yml
 5732  k get all
 5733  vim ~/.zshrc
 5734  l
 5735  cd ../../
 5736  l
 5737  cd ../J3/
 5738  l
 5739  cd ingressController
 5740  l
 5741  cat fanout-ingress.yaml
 5742  cat basic-ingress.yaml
 5743  cat basic-ingress.yamlkubectl run web2  --generator=deployment/apps.v1 --image=gcr.io/google-samples/hello-app:2.0 --port=8080
 5744  kubectl run web2  --generator=deployment/apps.v1 --image=gcr.io/google-samples/hello-app:2.0 --port=8080
 5745  kubectl expose deployment web2 --target-port=8080 --type=NodePort
 5746  kubectl apply -f fanout-ingress.yaml
 5747  kubectl get ingress fanout-ingress
 5748  kubectl get ingress fanout-ingress -w
 5749  cd Téléchargements
 5750  vim toto
 5751  l
 5752  cat toto
 5753  kubectl create configmap toto --from-file=./toto
 5754  k get configmap
 5755  k get configmap toto -o wide
 5756  k get configmap toto
 5757  kubectl create configmap --help
 5758  kubectl create configmap tutu --from-literal=toto=titi
 5759  k get configmap
 5760  k get configmap toto
 5761  k describe configmap toto
 5762  k describe configmap tutu
 5763  kubectl update configmap tutu --from-literal=tutu=titi2
 5764  vim toto
 5765  kubectl create configmap toto2 --from-file=./toto
 5766  kubectl describe configmap toto2
 5767  k get ing
 5768  k rollout --hzlp
 5769  k rollout --help
 5770  k rollback --help
 5771  l
 5772  gp
 5773  cd dev/www
 5774  l
 5775  cd wescale
 5776  l
 5777  git clone git@github.com:akramWewe/kubernetes-exercices.git kubernetes-formation_akram
 5778  l
 5779  cd dev/www/wescale
 5780  l
 5781  cd kubernetes-formation_akram
 5782  l
 5783  git log
 5784  gp
 5785  cp -r ../kubernetes-formation/J3 .
 5786  l
 5787  gst
 5788  greset
 5789  gst
 5790  rm J3/configMap&Secret/mariadb-deployment.yaml.exo J3/configMap&Secret/max_allowed_packet.cnf.exo J3/configMap&Secret/mysql-secret.yaml.exo
 5791  gst
 5792  cd ..
 5793  l
 5794  rm -rf kubernetes-formation_akram
 5795  l
 5796  git clone git@github.com:akramWewe/kubernetes-exercices.git kubernetes-formation_akram
 5797  gst
 5798  l
 5799  cd kubernetes-formation_akram
 5800  gst
 5801  git log
 5802  cp -r ../kubernetes-formation_edit/J3 .
 5803  gst
 5804  gd
 5805  cp -r ../kubernetes-formation_edit/J2 .
 5806  cp -r ../kubernetes-formation_edit/J1 .
 5807  gst
 5808  git add .
 5809  gst
 5810  git commit -m "fixs"
 5811  gst
 5812  git push
 5813  git log
 5814  k create secret --help
 5815  git log
 5816  gst
 5817  gd
 5818  git add .
 5819  git commit -m "fix configmap"
 5820  git push
 5821  gst
 5822  gd
 5823  git add .
 5824  git commit -m "fix configmap"
 5825  git push
 5826  rm -rf J3/Strategies_deploiement
 5827  gst
 5828  gd
 5829  git add .
 5830  gst
 5831  git commit -m "remove duplicate"
 5832  git push
 5833  gst
 5834  cd ../health_check
 5835  l
 5836  cd Téléchargements
 5837  touch notes-j3_timing.txt
 5838  vim pCloudDrive/work/formations/Kube_formation_LVL1/notes_conducteur.txt
 5839  cd Téléchargements
 5840  l
 5841  cat notes-j3_timing.txt
 5842  rm notes-j3_timing.txt
 5843  l
 5844  mv notes-j3.txt ~/pCloudDrive/work/formations/Kube_formation_LVL1/
 5845  l ~/pCloudDrive/work/formations/Kube_formation_LVL1/
 5846  l
 5847  l distribs
 5848  gst
 5849  sudo -i
 5850  vim pCloudDrive/work/formations/Kube_formation_LVL1/notes-j3.txt
 5851  cd Téléchargements
 5852  l
 5853  cd distribs
 5854  l
 5855  screenfetch
 5856  ncdu
 5857  tmux
 5858  l
 5859  htop
 5860  ncdu
 5861  cat .zshrc
 5862  ssh admin@vps
 5863  l
 5864  pwd
 5865  l
 5866  pwd
 5867  l
 5868  pwd
 5869  l
 5870  htop
 5871  docker ps
 5872  docker ps -a
 5873  ps aux | grep containerd
 5874  ps aux | grep runc
 5875  ps aux | grep run
 5876  l
 5877  vim pCloudDrive/notes/todo.txt
 5878  ps aux | grep monit
 5879  sudo -i
 5880  screenfetch
 5881  sudo -i
 5882  uname -r
 5883  uname -a
 5884  gp
 5885  gst
 5886  gd
 5887  greset
 5888  gp
 5889  gst
 5890  sudo -i
 5891  aws s3 ls
 5892  export AWS_PROFILE=jdwescale-jerome
 5893  aws s3 ls
 5894  gst
 5895  cd ..
 5896  l
 5897  mv drone-base drone-base_bkp
 5898  l
 5899  cat drone-base_bkp/.git/config
 5900  git clone git@github.com:WeScale/drone-base.git
 5901  l
 5902  gst
 5903  l
 5904  cd drone-base
 5905  l
 5906  gst
 5907  git log
 5908  gb
 5909  aws s3 ls
 5910  cat .git/config
 5911  git checkout master
 5912  vim ~/.zshrc
 5913  . ~/.zshrc
 5914  aws s3 ls
 5915  ./infra-builder-terraform.sh
 5916  ./infra-builder-terraform.sh --account jdwescaledrone-dev --layer 002-asg --plan
 5917  aws s3 ls
 5918  git log
 5919  git checkout d1df217779e1e739a86728fa814fa7a3567a4b3e
 5920  gst
 5921  git log
 5922  aws s3 ls
 5923  ./infra-builder-terraform.sh --account jdwescaledrone-dev --layer 002-asg --plan
 5924  ./infra-builder-terraform.sh --account jdwescaledrone-dev --layer 002-asg --destroy
 5925  ./infra-builder-terraform.sh --account jdwescaledrone-dev --layer 001-vpc --plan
 5926  ./infra-builder-terraform.sh --account jdwescaledrone-dev --layer 001-vpc --destroy
 5927  gst
 5928  gs
 5929  gst
 5930  gp
 5931  git log
 5932  git fetch && git checkout feature/k3s
 5933  gp
 5934  gst
 5935  git log
 5936  gst
 5937  git log
 5938  gp
 5939  aws s3 ls
 5940  gst
 5941  gp
 5942  curl cheat.sh/find
 5943  find . -iname '*all.template.yml*'
 5944  gst
 5945  cat ../drone-base_bkp/ansible/group_vars/all.yml
 5946  cat ../drone-base_bkp/ansible/ansible.cfg
 5947  cat ../drone-base_bkp/ansible/site.yml
 5948  cd dev/www/wescale/
 5949  l
 5950  cd drone-base_bkp
 5951  l
 5952  grep -nri "jdwesc" .
 5953  grep -nri "github" .
 5954  ./infra-builder-terraform.sh --account jdwescaledrone-dev --layer 001-vpc --plan
 5955  gst
 5956  gd ansible/group_vars/all.template.yml
 5957  git checkout ansible/group_vars/all.template.yml
 5958  gst
 5959  git add .
 5960  gst
 5961  git add configs/mygroup
 5962  gst
 5963  l
 5964  git add .
 5965  gst
 5966  git add .
 5967  gst
 5968  pwd
 5969  git add .
 5970  gst
 5971  git commit -m "update configs templates"
 5972  gst
 5973  git push
 5974  git add configs/
 5975  gst
 5976  git add .
 5977  git commit -m "update configs templates"
 5978  gst
 5979  git push
 5980  gst
 5981  git add .
 5982  gst
 5983  git add configs/mygroup
 5984  gst
 5985  git add .
 5986  gst
 5987  git commit -m "update configs templates"
 5988  gst
 5989  git push
 5990  gst
 5991  git add .
 5992  gst
 5993  git add .
 5994  git commit -m "update configs templates"
 5995  gst
 5996  git add configs/mygroup
 5997  gst
 5998  git push
 5999  gst
 6000  git add .
 6001  gst
 6002  git commit -m "update configs templates"
 6003  gst
 6004  git push
 6005  gst
 6006  git add .
 6007  git commit -m "update configs templates"
 6008  gst
 6009  git add configs/mygroup
 6010  git add -f configs/mygroup
 6011  gst
 6012  git add .
 6013  gst
 6014  git commit -m "update configs templates"
 6015  git push
 6016  gst
 6017  git add .
 6018  gst
 6019  git add .
 6020  git commit -m "update configs templates"
 6021  git push
 6022  cp ../drone-base_bkp/configs/jdwescaledrone/dev/terraform/* .
 6023  l
 6024  gst
 6025  greset
 6026  gst
 6027  rm commons.tfvars
 6028  rm commons.tfvars.dist
 6029  rm layer-00*
 6030  gst
 6031  cp ../drone-base_bkp/configs/jdwescaledrone/dev/terraform/*.tfvars ./configs/jdwescaledrone/dev/terraform
 6032  gst
 6033  ./infra-builder-terraform.sh --account jdwescaledrone-dev --layer 001-vpc --plan
 6034  ./infra-builder-terraform.sh --account jdwescaledrone-dev --layer 001-vpc 
 6035  ./infra-builder-terraform.sh --account jdwescaledrone-dev --layer 002-asg --plan
 6036  cp ../drone-base_bkp/id_rsa.pub .
 6037  l
 6038  gst
 6039  ./infra-builder-terraform.sh --account jdwescaledrone-dev --layer 002-asg --plan
 6040  ./infra-builder-terraform.sh --account jdwescaledrone-dev --layer 002-asg
 6041  ./infra-make-inventory.sh
 6042  gst
 6043  ./infra-provisioning.sh
 6044  ping google.fr
 6045  ./infra-provisioning.sh
 6046  gerp -nri "Update cert-manager" .
 6047  grep -nri "Update cert-manager" .
 6048  ./infra-provisioning.sh
 6049  grep -nri "helm install stable/cert-manager" .
 6050  grep -nri "cert-manager" .
 6051  ansible -m ping all
 6052  ssh admin@bastion-0
 6053  ssh admin@34.249.201.113
 6054  grep -nri "stable/drone" .
 6055  ./infra-provisioning.sh
 6056  ssh admin@34.249.201.113
 6057  gd
 6058  ./infra-provisioning.sh
 6059  ssh -F ./ssh.cfg -o StrictHostKeyChecking=no -o ProxyCommand="ssh -W %h:%p -F ./ssh.cfg 34.249.201.113 admin@11.0.20.134
 6060  ssh -F ./ssh.cfg -o StrictHostKeyChecking=no -o ProxyCommand="ssh -W %h:%p -F ./ssh.cfg 34.249.201.113" admin@11.0.20.134
 6061  ssh -F ./ssh.cfg -o StrictHostKeyChecking=no -o ProxyCommand="ssh -W %h:%p -F ./ssh.cfg 34.249.201.113" admin@11.0.10.24
 6062  ssh -F ./ssh.cfg -o StrictHostKeyChecking=no -o ProxyCommand="ssh -W %h:%p -F ./ssh.cfg 34.249.201.113" admin@11.0.20.134
 6063  git checkout master
 6064  gst
 6065  gd
 6066  greset
 6067  gst
 6068  gp
 6069  git checkout master
 6070  gp
 6071  gst
 6072  git log
 6073  aws s3 ls
 6074  l
 6075  gst
 6076  gp
 6077  git checkout -b feature/ecr
 6078  git push
 6079  git push --set-upstream origin feature/ecr
 6080  vim pCloudDrive/notes/todo.txt
 6081  sudo -i
 6082  apt search adobe-flashplugin
 6083  cd Téléchargements
 6084  l
 6085  curl cheat.sh/tar
 6086  tar -xzvf flash_player_npapi_linux.x86_64.tar.gz
 6087  l
 6088  man tar
 6089  sudo -i
 6090  sudo mv libflashplayer.so /usr/lib/mozilla/plugins
 6091  l
 6092  rm -rf flash_player_npapi_linux.x86_64.tar.gz LGPL license.pdf readme.txt usr
 6093  l
 6094  sudo -i
 6095  vim pCloudDrive/notes/todo.txt
 6096  ssh -F ./ssh.cfg -o StrictHostKeyChecking=no -o ProxyCommand="ssh -W %h:%p -F ./ssh.cfg 34.249.201.113" admin@11.0.20.134
 6097  ssh admin@34.249.201.113
 6098  cd .sec/seloger/forti-vpn
 6099  ./launch-forticli.sh
 6100  gst
 6101  git checkout master
 6102  gp
 6103  gst
 6104  gp
 6105  git fetch && git checkout feature/update-infra-builder
 6106  git checkout -b feature/update-infra-builder
 6107  git push
 6108  git push --set-upstream origin feature/update-infra-builder
 6109  ./infra-builder-terraform.sh --account jdwescaledrone-dev --plan
 6110  ./infra-builder-terraform.sh
 6111  ./infra-builder-terraform.sh --account jdwescaledrone-dev
 6112  l /home/jdx/dev/www/wescale/drone-base/terraform/layers
 6113  ./infra-builder-terraform.sh --account jdwescaledrone-dev
 6114  ls /home/jdx/dev/www/wescale/drone-base/terraform/layers/001-main-aws/*.tf
 6115  l /home/jdx/dev/www/wescale/drone-base/terraform/layers/001-main-aws/*.tf
 6116  ./infra-builder-terraform.sh --account jdwescaledrone-dev
 6117  cd
 6118  sudo -i
 6119  ./infra-builder-terraform.sh --account jdwescaledrone-dev
 6120  ./infra-builder-terraform.sh --account jdwescaledrone-dev --category ezeze
 6121  ./infra-builder-terraform.sh --help
 6122  ./infra-builder-terraform.sh
 6123  ./infra-builder-terraform.sh --account jdwescaledrone-dev --category ezeze
 6124  ./infra-builder-terraform.sh --account jdwescaledrone-dev --category 001-main-aws
 6125  ./infra-builder-terraform.sh --account jdwescaledrone-dev
 6126  ./infra-builder-terraform.sh --account jdwescaledrone-dev --category 001-main-awzz
 6127  ./infra-builder-terraform.sh --account jdwescaledrone-dev --category 001-main-aws
 6128  ./infra-builder-terraform.sh --account jdwescaledrone-dev --category 001-main-aws --layer 002-asg
 6129  ./infra-builder-terraform.sh --account jdwescaledrone-dev --category 001-main-aws --layer 002-asg --plan
 6130  ./infra-builder-terraform.sh --account jdwescaledrone-dev --category 001-main-aws --layer 001-vpc --plan
 6131  aws s3 ls
 6132  ./infra-builder-terraform.sh --account jdwescaledrone-dev --category 001-main-aws --layer 002-asg --plan
 6133  ./infra-builder-terraform.sh --account jdwescaledrone-dev --category 001-main-aws --plan
 6134  ./infra-builder-terraform.sh --account jdwescaledrone-dev --category 001-main-aws
 6135  ./infra-builder-terraform.sh --account jdwescaledrone-dev --category 001-main-aws --destroy
 6136  gst
 6137  gd
 6138  gst
 6139  gd
 6140  ./infra-builder-terraform.sh --account jdwescaledrone-dev --category 001-main-aws
 6141  gst
 6142  git add .
 6143  git commit -m "add loop to execute all layers"
 6144  ls -l
 6145  ls -lr
 6146  git commit -m "add loop to execute all layers"
 6147  ./infra-builder-terraform.sh --account jdwescaledrone-dev --category 001-main-aws
 6148  ./infra-builder-terraform.sh --account jdwescaledrone-dev
 6149  ./infra-builder-terraform.sh --account jdwescaledrone-dev --plan
 6150  ./infra-builder-terraform.sh --account jdwescaledrone-dev --destroy
 6151  gst
 6152  gd
 6153  gst
 6154  gd
 6155  git add .
 6156  git commit -m "add reverse mode at destroy"
 6157  git push
 6158  gst
 6159  gp
 6160  git log
 6161  gp
 6162  gst
 6163  gp
 6164  gst
 6165  gp
 6166  git log
 6167  ./generate-cfn-users.sh
 6168  ./aws-cloudform.sh --account digital-prod --profile sl-digital-prod --test
 6169  ./aws-cloudform.sh --account digital-prod --profile sl-digital-prod
 6170  cp ../sl_aws-base-infra/configs/digital-prod.yml .
 6171  cp ../sl_aws-base-infra/configs/data-prod.yml .
 6172  mv *-prod.yml ./configs
 6173  ./aws-cloudform.sh --account digital-prod --profile sl-digital-prod --test
 6174  ./aws-cloudform.sh --account digital-prod --profile sl-digital-prod
 6175  gst
 6176  g
 6177  ./aws-cloudform.sh --account digital-prod --profile sl-digital-prod
 6178  ./generate-cfn-users.sh
 6179  ./aws-cloudform.sh --account digital-prod --profile sl-digital-prod
 6180  gp
 6181  ./generate-cfn.sh
 6182  ./aws-cloudform.sh --account central-auth --profile sl-central-auth --test
 6183  ./aws-cloudform.sh --account central-auth --profile sl-central-auth --category 002-iamaccess --stack 019-ontrack.yml --test
 6184  ./aws-cloudform.sh --account central-auth --profile sl-central-auth --category 002-iamaccess --stack 019-ontrack.yml
 6185  ./generate-cfn.sh
 6186  ./aws-cloudform.sh --account central-auth --profile sl-central-auth --category 002-iamaccess --stack 013-ops.yml
 6187  ./aws-cloudform.sh --account central-auth --profile sl-central-auth --category 002-iamaccess --stack 019-ontrack.yml
 6188  ./aws-cloudform.sh --account digital-nonprod --profile sl-digital-nonprod --category 002-iamaccess --stack 013-ontrack.yml
 6189  gst
 6190  gd
 6191  gst
 6192  gd
 6193  git add .
 6194  gst
 6195  git commit -m "unblock master due to bad commit with ontrack repo"
 6196  git push
 6197  gst
 6198  git push
 6199  git log
 6200  gst
 6201  gd
 6202  git add .
 6203  gst
 6204  git commit -m "should work with good account id and params files"
 6205  git push
 6206  gst
 6207  gp
 6208  git checkout -b feature/awscloud-cli
 6209  gd
 6210  gst
 6211  gd
 6212  gp
 6213  git checkout -b feature/awscloud-cli
 6214  gst
 6215  gp
 6216  git checkout -b feature/awscloud-cli
 6217  gst
 6218  gd
 6219  git add .
 6220  git commit -m "set awscloud-cli"
 6221  git push
 6222  git push --set-upstream origin feature/awscloud-cli
 6223  gst
 6224  gd
 6225  git add .
 6226  git commit -m "set awscloud-cli"
 6227  git push
 6228  git push --set-upstream origin feature/awscloud-cli
 6229  gst
 6230  gd
 6231  gst
 6232  gd
 6233  gst
 6234  gd
 6235  git add .
 6236  git commit -m "set awscloud-cli"
 6237  git push
 6238  git push --set-upstream origin feature/awscloud-cli
 6239  gst
 6240  git add .
 6241  git commit -m "remove getawscript"
 6242  git push
 6243  gst
 6244  gd
 6245  git add .
 6246  git commit -m "remove getawscript"
 6247  git push
 6248  gst
 6249  gd
 6250  git add .
 6251  git commit -m "remove getawscript"
 6252  git push
 6253  gst
 6254  gp
 6255  pip3 install --upgrade --user aws-cloud-cli
 6256  aws-cloud-cli
 6257  pip3 install --user aws-cloud-cli
 6258  aws-cloud -h
 6259  aws-cloud --help
 6260  aws-cloud form --help
 6261  aws-cloud form --version
 6262  pip3 show --user aws-cloud-cli
 6263  pip3 show aws-cloud-cli
 6264  git tag
 6265  pip3 install --user aws-cloud-cli --upgrade
 6266  pip3 uninstall --user aws-cloud-cli
 6267  pip3 uninstall aws-cloud-cli
 6268  pip3 install --user aws-cloud-cli --upgrade
 6269  source venv/bin/activate
 6270  virtualenv venv
 6271  gst
 6272  source venv/bin/activate
 6273  virtualenv venv
 6274  source venv/bin/activate
 6275  pip3 install --upgrade --user aws-cloud-cli
 6276  pip3 install --upgrade aws-cloud-cli
 6277  pip3 install aws-cloud-cli
 6278  vim ~/.pip/pip.conf
 6279  pip3 install aws-cloud-cli
 6280  pip3 install aws-cloud-cli --user
 6281  l
 6282  history
 6283  cat ~/.pip/pip.conf
 6284  vim ~/.pip/pip.conf
 6285  cd
 6286  pip3 install aws-cloud-cli --user
 6287  aws-cloud --help
 6288  aws-cloud cfn --help
 6289  aws-cloud cfn drop --help
 6290  pip3 show aws-cloud-cli
 6291  aws-cloud cfn form --organization seloger --account central-auth --category 001-keycloak-dev --dry-run
 6292  aws-cloud cfn form --organization seloger --account central-auth --category 001-keycloak-dev
 6293  export AWS_PROFILE=sl-central-auth
 6294  aws s3 ls
 6295  aws-cloud cfn form --organization seloger --account central-auth --category 001-keycloak-dev --dry-run
 6296  aws-cloud cfn form --organization seloger --account central-auth --category 001-keycloak-dev
 6297  l
 6298  rm -rf venv
 6299  gst
 6300  gp
 6301  gst
 6302  hp
 6303  gp
 6304  git checkout -b feature/why
 6305  gst
 6306  gd
 6307  git add .
 6308  git commit -m "explain why"
 6309  git push
 6310  git push --set-upstream origin feature/why
 6311  pwd
 6312  gst
 6313  greset
 6314  git log
 6315  git checkout master
 6316  pwd
 6317  cd /home/jdx/dev/www/seloger/sl_aws-cloud-cli
 6318  l
 6319  gst
 6320  gp
 6321  git checkout feature/why
 6322  gst
 6323  vim README.md
 6324  gd
 6325  gst
 6326  git checkout master
 6327  gst
 6328  git checkout feature/why
 6329  gst
 6330  git checkout feature/why
 6331  gb
 6332  git checkout feature/why
 6333  gst
 6334  gd
 6335  gst
 6336  greset
 6337  gst
 6338  git checkout master
 6339  gst
 6340  gp
 6341  git checkout feature/why
 6342  vim README.md
 6343  gst
 6344  greset
 6345  gst
 6346  git checkout master
 6347  gp
 6348  cat README.md
 6349  vim README.md
 6350  git checkout feature/why
 6351  vim README.md
 6352  gst
 6353  gd
 6354  git add .
 6355  git commit -m "don't break indent"
 6356  git push
 6357  gst
 6358  l
 6359  mkdir ~/Téléchargements/debug_markdown_vscode
 6360  cp README.md ~/Téléchargements/debug_markdown_vscode/file.md
 6361  cp README.md ~/Téléchargements/debug_markdown_vscode/file.md.bkp
 6362  cp README.md ~/Téléchargements/debug_markdown_vscode/file.md.bkp2
 6363  l
 6364  gst
 6365  cd Téléchargements/debug_markdown_vscode
 6366  l
 6367  vim file.md
 6368  l
 6369  vim file.md.bkp
 6370  vim file.md.bkp2
 6371  vim pCloudDrive/notes/todo.txt
 6372  l
 6373  pwd
 6374  l
 6375  vim pCloudDrive/notes/todo.txt
 6376  ssh admin@vps
 6377  ping google.fr
 6378  vim /etc/hosts
 6379  sudo -i
 6380  ssh admin@vps
 6381  cd Téléchargements/debug_markdown_vscode
 6382  l
 6383  vim file.md
 6384  cd
 6385  cd dev/dotfiles
 6386  l
 6387  gst
 6388  gd
 6389  greset
 6390  gt
 6391  gst
 6392  gp
 6393  gst
 6394  gd
 6395  greset
 6396  gp
 6397  gst
 6398  greset
 6399  gst
 6400  greset
 6401  gst
 6402  gp
 6403  l
 6404  gst
 6405  git checkout README.md
 6406  gst
 6407  gd
 6408  gst
 6409  gd
 6410  git add .
 6411  git commit -m "fix indent rule for markdows"
 6412  git commit --amend
 6413  gst
 6414  git push
 6415  cd ..
 6416  rm -rf debug_markdown_vscode
 6417  l
 6418  cd dev/dotfiles
 6419  gst
 6420  gd
 6421  greset
 6422  gst
 6423  l
 6424  gst
 6425  git checkout master
 6426  gp
 6427  gst
 6428  git log
 6429  gst
 6430  vim pCloudDrive/notes/todo.txt
 6431  gst
 6432  gb
 6433  git branch -d feature/update-infra-builder
 6434  gst
 6435  gb
 6436  git branch -d feature/k3s
 6437  gb
 6438  git checkout -b feature/auto-route53
 6439  gb
 6440  git push
 6441  git push --set-upstream origin feature/auto-route53
 6442  aws s3 ls
 6443  export AWS_PROFILE=sl-central-auth
 6444  aws s3 ls
 6445  cd sl_aws-cloud-cli
 6446  git checkout master
 6447  gp
 6448  git log
 6449  ./infra-builder-terraform.sh --account jdwescaledrone-dev --plan
 6450  ./infra-builder-terraform.sh --help
 6451  ./infra-builder-terraform.sh --account jdwescaledrone-dev --category 001-main-aws --layer 002-asg --plan
 6452  ./infra-builder-terraform.sh --account jdwescaledrone-dev --category 001-main-aws --layer 002-asg
 6453  gst
 6454  gd
 6455  ./infra-builder-terraform.sh --account jdwescaledrone-dev --category 001-main-aws --layer 002-asg
 6456  gst
 6457  git push
 6458  git checkout master
 6459  gp
 6460  gst
 6461  git checkout feature/auto-route53
 6462  gp
 6463  git merge master
 6464  gd
 6465  gst
 6466  gd
 6467  gst
 6468  gd
 6469  git add .
 6470  gst
 6471  git commit -m "merge"
 6472  git push
 6473  gst
 6474  ./infra-builder-terraform.sh --account jdwescaledrone-dev
 6475  ssh -i ~/.ssh/seloger/central-auth-keycloak-dev.pem centos@10.105.4.204
 6476  ./infra-builder-terraform.sh --account jdwescaledrone-dev
 6477  ssh -i ~/.ssh/seloger/central-auth-keycloak-dev.pem centos@10.105.4.204
 6478  cat ~/pCloudDrive/notes/tasks/seloger/2019-09_keycloak.txt
 6479  gst
 6480  git checkout master
 6481  gp
 6482  gst
 6483  git log
 6484  ssh -F ./ssh.cfg -o StrictHostKeyChecking=no -o ProxyCommand="ssh -W %h:%p -F ./ssh.cfg 34.249.201.113" admin@11.0.20.134
 6485  cd dev/www/wescale/drone-base
 6486  ssh -F ./ssh.cfg -o StrictHostKeyChecking=no -o ProxyCommand="ssh -W %h:%p -F ./ssh.cfg 34.249.201.113" admin@11.0.20.134
 6487  crictl
 6488  git clone git@github.com:containerd/containerd.git
 6489  cd containerd
 6490  git log --reverse
 6491  cd pCloudDrive/notes/tasks/seloger/_
 6492  cd pCloudDrive/notes/tasks/seloger/
 6493  l
 6494  touch 2019-10_keycloak.txt
 6495  aws-cloud --help
 6496  aws-cloud cfn --help
 6497  aws-cloud cfn form --help
 6498  aws-cloud cfn form --organization seloger --account central-auth --profile sl-central-auth --category 001-keycloak-dev
 6499  aws-cloud cfn form --organization seloger --account central-auth --profile sl-central-auth
 6500  l ../sl_security-*
 6501  l ../
 6502  gst
 6503  git checkout master
 6504  gp
 6505  git log
 6506  git branch -d feature/awscloud-cli
 6507  gb
 6508  gst
 6509  aws-cloud cfn form --organization seloger --account central-auth --profile sl-central-auth --category 001-keycloak-dev --dry-run
 6510  gp
 6511  git log
 6512  aws-cloud cfn form --organization seloger --account central-auth --profile sl-central-auth --category 001-keycloak-dev
 6513  git checkout master
 6514  gp
 6515  git branch -d feature/awscloud-cli
 6516  gb
 6517  gst
 6518  gb
 6519  git branch -d feature/add-waf-secu
 6520  gb
 6521  git branch -d feature/update-secu-rights
 6522  gst
 6523  gb
 6524  gst
 6525  gp
 6526  git checkout -b feature/add-configs-prod
 6527  gst
 6528  gb
 6529  git push
 6530  git push --set-upstream origin feature/add-configs-prod
 6531  gb
 6532  l
 6533  l configs
 6534  pwd
 6535  gst
 6536  cp ../sl_security-aws-iam-users/configs/data-prod.yml .
 6537  cp ../sl_security-aws-iam-users/configs/digital-prod.yml .
 6538  l
 6539  l configs
 6540  mv d* configs
 6541  l configs
 6542  gst
 6543  git add .
 6544  git commit -m "add prod configs dirs"
 6545  git push
 6546  ssh -i ~/.ssh/seloger/central-auth-keycloak-dev.pem centos@10.105.6.45
 6547  ssh -p 64536 54.82.96.170
 6548  ssh -i ~/.ssh/seloger/central-auth-keycloak-dev.pem centos@10.105.6.45
 6549  export AWS_PROFILE=sl-central-auth
 6550  ssh -p 64536 54.82.96.170
 6551  ssh -p 64535 3.83.66.45\n
 6552  gp
 6553  export AWS_PROFILE=sl-central-auth
 6554  ./sync-kc.sh --env prod --full --force
 6555  ping keycloak-prod.auth.groupeseloger.tools
 6556  ping https://keycloak-prod.auth.groupeseloger.tools
 6557  ping https://keycloak-dev.auth.groupeseloger.tools
 6558  ping keycloak-dev.auth.groupeseloger.tools
 6559  ./sync-kc.sh --env dev --full --force
 6560  echo $CIRCLE_TOKEN
 6561  env | grep CIRCLE
 6562  curl -X POST https://circleci.com/api/v1.1/project/github/axel-springer-kugawana/sl_security-aws-iam-users/build\?circle-token\=$CIRCLECI_SL_TOKEN   -d build_parameters[AWS_CONTEXT]=youpi
 6563  curl -X POST https://circleci.com/api/v1.1/project/github/axel-springer-kugawana/sl_security-aws-iam-users/build\?circle-token\=$CIRCLECI_SL_TOKEN   -d 'build_parameters[AWS_CONTEXT]=youpi'
 6564  cat ~/.zshrc
 6565  cat ~/.ssh/seloger/central-auth-keycloak-dev.pem
 6566  l
 6567  cd .sec/seloger/forti-vpn
 6568  ./launch-forticli.sh
 6569  screenfetch
 6570  sudo -i
 6571  gst
 6572  git checkout master
 6573  gp
 6574  gst
 6575  export AWS_PROFILE=sl-central-auth
 6576  aws s3 ls
 6577  ./get-aws-scripts.sh
 6578  l
 6579  ./aws-cloudform.sh
 6580  ./aws-cloudform.sh --help
 6581  ./aws-cloudform.sh -h
 6582  ./generate-cfn.sh --clean
 6583  ./generate-cfn.sh
 6584  ./aws-cloudform.sh --account central-auth --profile sl-central-auth --test
 6585  cat ~/.pip/pip.conf 
 6586  aws-cloud cfn form --organization seloger --account central-auth --profile sl-central-auth --dry-run
 6587  aws-cloud cfn form --help
 6588  aws-cloud cfn form --organization seloger --account central-auth --profile sl-central-auth --category 001-tools --stack 001-imainventory.yml --dry-run
 6589  aws-cloud cfn form --organization seloger --account central-auth --profile sl-central-auth --category 001-tools --stack 001-iaminventory.yml --dry-run
 6590  gst
 6591  gp
 6592  export AWS_PROFILE=sl-central-auth
 6593  ./generate-cfn-users.sh
 6594  gst
 6595  gp
 6596  gst
 6597  gd
 6598  git add .
 6599  gst
 6600  git commit -m "rename to apply_iam"
 6601  gst
 6602  gd
 6603  git add .
 6604  git commit -m "update workflow to sync separately, and without manual interventions"
 6605  git push
 6606  gst
 6607  gp
 6608  gb
 6609  gst
 6610  git log
 6611  ./generate-cfn.sh
 6612  gp
 6613  ./generate-cfn.sh
 6614  git log
 6615  ./generate-cfn.sh
 6616  ./generate-cfn.sh --clean
 6617  ./generate-cfn.sh
 6618  ./generate-cfn.sh --clean
 6619  ./generate-cfn.sh
 6620  gst
 6621  greset
 6622  gp
 6623  git checkout -b feature/fix-ontrack
 6624  ./generate-cfn.sh
 6625  gst
 6626  yamlint --help
 6627  pip3 install yamllint
 6628  yamlint --help
 6629  yamllint --help
 6630  yamllint ./configs/iam-inventory
 6631  gst
 6632  gd
 6633  greset
 6634  gst
 6635  gp
 6636  gst
 6637  gp
 6638  gst
 6639  ./generate-cfn.sh
 6640  gst
 6641  gd
 6642  git add .
 6643  git commit -m "fix indent"
 6644  git push
 6645  git push --set-upstream origin feature/fix-ontrack
 6646  gitk .circleci/config.yml
 6647  git fetch && git checkout feature/add_yaml_lint
 6648  git log
 6649  git fetch && git checkout feature/add_yaml_lint
 6650  gitk .circleci/config.yml
 6651  man sync
 6652  git checkout master
 6653  gp
 6654  cat ~/.ssh/seloger/central-auth-keycloak-dev.pem
 6655  cat ~/.ssh/seloger/central-auth-keycloak-prod.pem
 6656  cat ~/.ssh/seloger/digital-nonprod-sl-kube-eks-eu-west-1.pem
 6657  gp
 6658  yamllint -c configs
 6659  yamllint -f configs
 6660  yamllint configs
 6661  rm .yamllint
 6662  yamllint configs
 6663  greset
 6664  gst
 6665  yamllint configs
 6666  gst
 6667  yamllint configs
 6668  export AWS_PROFILE=sl-central-auth
 6669  ./generate-cfn.sh
 6670  gst
 6671  ./generate-cfn.sh
 6672  greset
 6673  gst
 6674  rm -rf .vscode
 6675  gst
 6676  ./generate-cfn.sh
 6677  python
 6678  gst
 6679  gd
 6680  greset
 6681  gp
 6682  gst
 6683  git checkout -b feature/update-ontrack
 6684  git push
 6685  git push --set-upstream origin feature/update-ontrack
 6686  gst
 6687  git add .
 6688  git commit -m "remove null option"
 6689  git push
 6690  vim ~/.aws/credentials
 6691  cd dev/www/seloger
 6692  grep -nri "access_key" .
 6693  grep -nr "access_key" .
 6694  git checkout master
 6695  gp
 6696  gst
 6697  gp
 6698  git log
 6699  gst
 6700  git log
 6701  export AWS_PROFILE=sl-central-auth
 6702  aws s3 ls
 6703  cd lambdas
 6704  l
 6705  cd key-rotator-recovery
 6706  l
 6707  vim main.py
 6708  python main.py
 6709  python -V
 6710  gst
 6711  python main.py
 6712  gst
 6713  greset
 6714  gp
 6715  cat ~/pCloudDrive/notes/todo.txt
 6716  cd ..
 6717  l
 6718  gp
 6719  git checkout -b feature/feed-readme
 6720  git push
 6721  gp
 6722  git checkout -b feature/feed-readme
 6723  git push
 6724  gp
 6725  git checkout -b feature/feed-readme
 6726  gp
 6727  git checkout -b feature/feed-readme
 6728  git push
 6729  git push --set-upstream origin feature/feed-readme
 6730  git push
 6731  git push --set-upstream origin feature/feed-readme
 6732  git push
 6733  git push --set-upstream origin feature/feed-readme
 6734  git push
 6735  git push --set-upstream origin feature/feed-readme
 6736  gst
 6737  gd
 6738  git add .
 6739  git commit -m "make readme"
 6740  git push
 6741  gst
 6742  git add .
 6743  git commit -m "make readme"
 6744  git push
 6745  gst
 6746  git add .
 6747  git commit -m "make readme"
 6748  git push
 6749  gst
 6750  gd
 6751  gst
 6752  git add .
 6753  git commit -m "make readme"
 6754  git push
 6755  git commit -am "fix readme"
 6756  git push
 6757  git commit -m "fix readme"
 6758  git commit -am "fix readme"
 6759  git push
 6760  git commit -am "fix readme"
 6761  git push
 6762  git commit -am "fix readme"
 6763  git push
 6764  git commit -am "fix readme"
 6765  git push
 6766  git commit -am "fix readme"
 6767  git push
 6768  sudo -i
 6769  git checkout master
 6770  gp
 6771  git checkout master
 6772  gp
 6773  git checkout master
 6774  gp
 6775  git checkout master
 6776  gp
 6777  uptime
 6778  mkdir dev/www/johnpaul
 6779  l dev/www
 6780  apt search gnome-authenticator
 6781  apt search authenticator
 6782  pwd
 6783  gp
 6784  git log
 6785  l
 6786  pwd
 6787  top
 6788  gst
 6789  gp
 6790  cat ~/pCloudDrive/notes/todo.txt
 6791  vim pCloudDrive/notes/todo.txt
 6792  l
 6793  vim ~/.zshrc
 6794  sudo -i
 6795  gp
 6796  gb
 6797  git checkout feature/ecr
 6798  gp
 6799  git merge master
 6800  git push
 6801  aws s3 ls
 6802  gst
 6803  git push
 6804  ./infra-builder-terraform.sh
 6805  ./infra-builder-terraform.sh --account jdwescaledrone-dev
 6806  aws s3 ls
 6807  ./workstation/launch.sh\n
 6808  gst
 6809  ./workstation/launch.sh\n
 6810  ./workstation/launch.sh --no-cache\n
 6811  ./workstation/launch.sh\n
 6812  export HOMEPATH="root"
 6813  echo $HOMEPATH
 6814  ./workstation/launch.sh\n
 6815  gst
 6816  gd
 6817  git add .
 6818  git commit -m "some readme and workstation updates"
 6819  git push
 6820  gst
 6821  sudo -i
 6822  cd Téléchargements
 6823  touch infra-jp.txt
 6824  vim infra-jp.txt
 6825  vim pCloudDrive/notes/todo.txt
 6826  cat ~/.ssh/id_rsa.pub
 6827  vim ~/.aws/credentials
 6828  aws configure --profile johnp-main-jdx
 6829  export AWS_PROFILE=john-main-jdx
 6830  aws s3 ls
 6831  export AWS_PROFILE=johnp-main-jdx
 6832  aws s3 ls
 6833  ip a
 6834  ifconfig -a |\nawk '/^[a-z]/ { iface=$1; mac=$NF; next }\n    /inet addr:/ { print iface, mac }'
 6835  cat /sys/class/net/*/address
 6836  cat /sys/class/net/eth0/address
 6837  aws s3 ls
 6838  vim ~/.zshrc
 6839  aws s3 ls
 6840  cd /media/jdx/Debian buster-DI-a5 amd64 n
 6841  cd /media/jdx/Debian\ buster-DI-a5\ amd64\ n
 6842  l
 6843  cp ~/Téléchargements/firmware-atheros_20190717-2\~bpo10+1_all.deb .
 6844  sudo cp ~/Téléchargements/firmware-atheros_20190717-2\~bpo10+1_all.deb .
 6845  cd dev/git/johnpaul
 6846  l
 6847  git clone git@git.infra.johnpaultech.com:it/cluster-nomad.git
 6848  l
 6849  cd cluster-nomad
 6850  git fetch && git checkout tomerge
 6851  git log
 6852  l
 6853  cd
 6854  sudo -i
 6855  who
 6856  w
 6857  whoami
 6858  cat ~/.ssh/id_rsa.pub
 6859  tree
 6860  pip3 install sshuttle --user
 6861  sshuttle -vr admin@18.185.253.77 --dns 10.0.0.0/8
 6862  tree
 6863  aws s3 ls
 6864  sshuttle -vr admin@18.185.253.77 --dns 10.0.0.0/8
 6865  ps aux | grep sshuttle
 6866  sshuttle -vr admin@18.185.253.77 --dns 10.0.0.0/8
 6867  l
 6868  sshuttle -vr admin@18.185.253.77 --dns 10.0.0.0/8
 6869  sshuttle -vr jerome.devoucoux@18.185.253.77 --dns 10.0.0.0/8
 6870  ping 10.2.0.251
 6871  sshuttle -vr jerome.devoucoux@18.185.253.77 --dns 10.0.0.0/8
 6872  ping google.fr
 6873  ssh-add ~/.ssh/id_rsa
 6874  sshuttle -vr jerome.devoucoux@18.185.253.77 --dns 10.0.0.0/8
 6875  pip3 uninstall sshuttle
 6876  sshuttle
 6877  sudo apt install sshuttle
 6878  sshuttle -vr jerome.devoucoux@18.185.253.77 --dns 10.0.0.0/8
 6879  sshuttle -vr jerome.devoucoux@18.185.253.77 --dns 10.0.0.0/8 -vvv
 6880  ping 10.2.0.251
 6881  ssh 10.2.0.251
 6882  sshuttle -vr jerome.devoucoux@18.185.253.77 --dns 10.0.0.0/8
 6883  sudo 
 6884  sudo -v
 6885  sudo
 6886  uname -ra
 6887  sudo -V
 6888  4294967295
 6889  sudo 4294967295
 6890  sudo 4294967295 -1
 6891  sudo -#u -1
 6892  sudo -u#-1 ID -u whoami
 6893  sshuttle -vr jerome.devoucoux@18.185.253.77 --dns 10.0.0.0/8
 6894  aws s3 ls
 6895  sshuttle -vr jerome.devoucoux@18.185.253.77 --dns 10.0.0.0/8
 6896  bash
 6897  sudo -i
 6898  vim ~/.zshrc
 6899  vim ~/.bashrc
 6900  vim /etc/sudoers.d/jdx-sudoer
 6901  vim ~/.zshrc
 6902  sudo -i
 6903  pwd
 6904  vim .profile
 6905  sudo -i
 6906  sudo apt update
 6907  sudo apt upgrade
 6908  sudo apt autoremove
 6909  wget -q https://www.virtualbox.org/download/oracle_vbox_2016.asc -O- | sudo apt-key add -
 6910  wget -q https://www.virtualbox.org/download/oracle_vbox.asc -O- | sudo apt-key add -
 6911  sudo add-apt-repository "deb http://download.virtualbox.org/virtualbox/debian buster contrib"
 6912  sudo vim /etc/apt/sources.list
 6913  sudo apt update
 6914  sudo apt upgrade
 6915  sudo apt search virtuablox
 6916  sudo apt search virtualbox
 6917  sudo apt install virtualbox-6.0
 6918  vim pCloudDrive/notes/todo.txt
 6919  l
 6920  vim pCloudDrive/notes/todo.txt
 6921  gst
 6922  gp
 6923  aws s3 ls
 6924  l
 6925  export AWS_PROFILE=jdwescale-jerome
 6926  aws s3 ls
 6927  ./infra-builder-terraform.sh --help
 6928  ./infra-builder-terraform.sh --account jdwescaledrone-dev
 6929  gp
 6930  gst
 6931  gp
 6932  gst
 6933  git add .
 6934  git commit -m "test"
 6935  git push
 6936  touch .hadolint.yaml
 6937  gst
 6938  gd
 6939  git add .
 6940  git commit -m "make build"
 6941  git push
 6942  nslookup 52.29.1.95
 6943  dig 52.29.1.95
 6944  nslookup 52.29.1.95
 6945  traceroute 52.29.1.95
 6946  ip a
 6947  nslookup 52.29.1.96
 6948  nslookup 52.29.1.97
 6949  ping 52.29.1.95
 6950  cd dev/git/johnpaul
 6951  l
 6952  git clone git@git.infra.johnpaultech.com:infra/aws-base.git
 6953  l
 6954  git clone git@git.infra.johnpaultech.com:infra/aws-base.git
 6955  l
 6956  htop
 6957  pwd
 6958  vim README.md
 6959  git add .
 6960  git commit -m "wip"
 6961  git push
 6962  sshuttle -vr jerome.devoucoux@18.185.253.77 --dns 10.0.0.0/8
 6963  tmux
 6964  ssh admin@10.2.1.203
 6965  ssh admin@10.2.2.152
 6966  curl cheat.sh/find
 6967  find . -iname '*htaccess*'
 6968  ssh admin@10.2.64.179
 6969  l
 6970  ssh admin@10.2.64.179
 6971  sshuttle -vr jerome.devoucoux@18.185.253.77 --dns 10.0.0.0/8
 6972  ssh admin@10.2.2.21
 6973  vim pCloudDrive/notes/todo.txt
 6974  sshuttle -vr jerome.devoucoux@18.185.253.77 --dns 10.0.0.0/8
 6975  tmux
 6976  ssh admin@10.2.1.203
 6977  sshuttle -vr jerome.devoucoux@18.185.253.77 --dns 10.0.0.0/8
 6978  ssh admin@10.2.1.203
 6979  ssh admin@10.2.0.251
 6980  sshuttle -vr jerome.devoucoux@18.185.253.77 --dns 10.0.0.0/8
 6981  ssh admin@10.2.0.251
 6982  ssh admin@10.2.65.179
 6983  ssh admin@10.2.64.179
 6984  nomad -V
 6985  consul -V
 6986  ssh admin@10.2.2.21
 6987  cd pCloudDrive/notes
 6988  grep -nri "ssh -L" .
 6989  grep -nri " -L " .
 6990  grep -nr " -L " .
 6991  ssh admin@10.2.2.21 -L 8080:8080
 6992  ssh admin@10.2.2.21 -L 8080:localhost:8080
 6993  ssh admin@10.2.2.21 -L 8080:10.2.2.21:8080
 6994  find . -iname '*htpass*'
 6995  find . -iname '*htp*'
 6996  gst
 6997  gd
 6998  greset
 6999  gst
 7000  gb
 7001  git checkout develop
 7002  git fetch && git checkout -b current
 7003  git fetch && git checkout current
 7004  gst
 7005  gd
 7006  git log
 7007  git checkout tomerge
 7008  gb
 7009  git checkout develop
 7010  gb
 7011  git branch -d current
 7012  gb
 7013  history
 7014  gb
 7015  git fetch && git checkout current
 7016  gst
 7017  grset
 7018  greset
 7019  gst
 7020  git fetch && git checkout current
 7021  git log
 7022  md5
 7023  gst
 7024  gd
 7025  git add .
 7026  git commit -m "update uis accesses"
 7027  git push
 7028  gst
 7029  aws s3 ls
 7030  gb
 7031  nslookup 10.10.14.208
 7032  git checkout master
 7033  gp
 7034  aws s3 ls
 7035  ./infra-builder-terraform.sh --account jdwescaledrone-dev
 7036  ./infra-make-inventory.sh
 7037  ./infra-provisioning-base.sh
 7038  cat ../drone-base_bkp/ansible/group_vars/all.yml
 7039  ./infra-provisioning-base.sh
 7040  ./infra-builder-terraform.sh --account jdwescaledrone-dev
 7041  ./infra-provisioning-base.sh
 7042  sudo -i
 7043  cat pCloudDrive/notes/tasks/johnpaul
 7044  cat pCloudDrive/notes/tasks/johnpaul/roadmap.txt
 7045  gp
 7046  git log
 7047  gst
 7048  pwd
 7049  gp
 7050  aws s3 ls
 7051  terraform plan
 7052  terraform --version
 7053  terraform011 --version
 7054  sshuttle -vr jerome.devoucoux@18.185.253.77 --dns 10.0.0.0/8
 7055  terraform011 --version
 7056  terraform011 init
 7057  terraform011 plan
 7058  aws s3 ls
 7059  terraform011 plan --help
 7060  terraform011 plan --version
 7061  sudo -i
 7062  gource
 7063  gource --help
 7064  gource -s 1000
 7065  gource -s 100000
 7066  gource -s 0.001
 7067  gource -s 0.01
 7068  gource -s 0.1
 7069  gource -s 1
 7070  gource -s 0.5
 7071  gource -s 0.8
 7072  gource -s 0.2
 7073  gst
 7074  gp
 7075  gb
 7076  git checkout tomerge
 7077  gp
 7078  git log
 7079  pakcer
 7080  packer
 7081  packer version
 7082  aws s3 ls
 7083  packer build bastion/bastion.json
 7084  packer build bastion/packer.bastion.json
 7085  packer build bastion/packer/bastion.json
 7086  touch /home/jdx/dev/git/johnpaul/cluster-nomad/bastion/packer/authorized_keys
 7087  gst
 7088  gd
 7089  l
 7090  cat ~/.ssh/id_rsa.pub
 7091  packer build bastion/packer/bastion.json
 7092  sshuttle -vr jerome.devoucoux@18.185.253.77 --dns 10.0.0.0/8
 7093  ssh admin@10.1.0.106
 7094  sshuttle -vr jerome.devoucoux@18.185.253.77 --dns 10.0.0.0/8
 7095  ssh admin@10.1.0.106
 7096  ping google.fr
 7097  ssh admin@18.185.253.77
 7098  ssh jerome.devoucoux@18.185.253.77
 7099  history
 7100  terraform011 plan
 7101  gst
 7102  greset
 7103  l
 7104  git checkout current
 7105  terraform011 plan
 7106  git log
 7107  gb
 7108  gst
 7109  rm bastion/packer/authorized_keys
 7110  gst
 7111  gp
 7112  gst
 7113  pwd
 7114  l
 7115  gp
 7116  aws s3 ls
 7117  terraform plan -target='module.cluster_dev.aws_instance.master[0]'
 7118  terraform init
 7119  terraform plan -target='module.cluster_dev.aws_instance.master[0]'
 7120  terraform011 plan -target='module.cluster_dev.aws_instance.master[0]'
 7121  terraform011 init
 7122  terraform011 plan -target='module.cluster_dev.aws_instance.master[0]'
 7123  gst
 7124  greset
 7125  rm -r .terraform
 7126  terraform011 init
 7127  terraform011 plan -target='module.cluster_dev.aws_instance.master[0]'
 7128  terraform011 plan -target='module.logs'
 7129  gst
 7130  git checkout tomerge
 7131  terraform011 plan -target='module.logs'
 7132  terraform011 init
 7133  terraform011 plan -target='module.logs'
 7134  gst
 7135  gb
 7136  git checkout develop
 7137  gp
 7138  terraform011 init
 7139  rm -rf .terraform
 7140  terraform011 init
 7141  cd ~/.local/bin/
 7142  l
 7143  git clone https://github.com/tfutils/tfenv.git ~/.tfenv
 7144  ln -s ~/.tfenv/bin/* ~/.local/bin
 7145  cd ~/.local/bin
 7146  l
 7147  cd ..
 7148  l
 7149  cp -r bin bin_bkp
 7150  ls -la ~/.tfenv/bin
 7151  ln -s ~/.tfenv/bin/* ~/.local/bin
 7152  l
 7153  cd bin
 7154  l
 7155  rm terraform*
 7156  rm tfenv
 7157  l
 7158  l ~/.tfenv/bin
 7159  ln -s ~/.tfenv/bin/* ~/.local/bin
 7160  l
 7161  . ~/.zshrc
 7162  terraform --version
 7163  tfenv list
 7164  tfenv install latest
 7165  tfenv list
 7166  tfenv install 0.11.14
 7167  tfenv list
 7168  terraform --version
 7169  tfenv --help
 7170  tfenv use 0.12.12
 7171  terraform --version
 7172  tfenv use 0.11.14
 7173  terraform --version
 7174  terraform use 0.11.14
 7175  terraform use 0.12.12
 7176  tfenv use 0.11.14
 7177  terraform --version
 7178  grep -nr 'module "' main.tf
 7179  gp
 7180  sudo -i
 7181  vim pCloudDrive/notes/todo.txt
 7182  mv ~/pCloudDrive/notes/tasks/tips.txt ~/pCloudDrive/notes/tasks/johnpaul/tips.txt
 7183  cd dev/git
 7184  git clone git@git.infra.johnpaultech.com:infra/cluster-nomad_sandbox.git
 7185  l
 7186  mv cluster-nomad_sandbox johnpaul
 7187  l
 7188  cd johnpaul
 7189  l
 7190  gb
 7191  git fetch && git checkout -b master
 7192  git push
 7193  git push --set-upstream origin master
 7194  git checkout develop
 7195  gp
 7196  git fetch && git checkout tomerge
 7197  gst
 7198  gp
 7199  git checkout dev
 7200  git checkout develop
 7201  gb
 7202  git branch -d dev
 7203  gb
 7204  gst
 7205  git merge tomerge
 7206  gst
 7207  git push
 7208  gb
 7209  git branch -d tomerge
 7210  gb
 7211  git checkout master
 7212  gp
 7213  git merge develop
 7214  git push
 7215  gst
 7216  git checkout develop
 7217  gst
 7218  greset
 7219  gst
 7220  rm -r bastion/ansible/
 7221  gst
 7222  git checkout current
 7223  gource -s 0.2
 7224  l
 7225  gp
 7226  git fetch && git checkout feature/mobilejohnpaultechcom 
 7227  git merge develop
 7228  git push
 7229  gst
 7230  git checkout develop
 7231  gb
 7232  gp
 7233  gst
 7234  gp
 7235  vim pCloudDrive/notes/todo.txt
 7236  gp
 7237  gst
 7238  gp
 7239  gb
 7240  gst
 7241  git fetch && git checkout refacto
 7242  gp
 7243  gst
 7244  gp
 7245  gst
 7246  gp
 7247  \n
 7248  git checkout current
 7249  gp
 7250  git merge develop
 7251  hp
 7252  gp
 7253  git push
 7254  gst
 7255  git push --force
 7256  cat cluster/packer/master/data/notary/notary-server.key
 7257  vim pCloudDrive/notes/todo.txt
 7258  cd
 7259  vim pCloudDrive/notes/todo.txt
 7260  l pCloudDrive
 7261  vim pCloudDrive/notes/todo.txt
 7262  rm cluster/packer/master/data/notary/notary-server.key
 7263  gst
 7264  git add .
 7265  gst
 7266  git commit -m "secure rule"
 7267  git push
 7268  cat cluster/packer/master/data/notary/notary-server.key
 7269  git rm cluster/packer/master/data/notary/notary-server.key
 7270  touch cluster/packer/master/data/notary/notary-server.key
 7271  git rm cluster/packer/master/data/notary/notary-server.key
 7272  gst
 7273  greset
 7274  gst
 7275  rm cluster/packer/master/data/notary/notary-server.key
 7276  gst
 7277  gp
 7278  gst
 7279  git push
 7280  git commit --amend -CHEAD\n
 7281  gb
 7282  gst
 7283  git log
 7284  git reset --hard 3b4477b06f4fe88f982726c87b4efaf83a213b26
 7285  gst
 7286  git rm --cached cluster/packer/master/data/notary/notary-server.key
 7287  gst
 7288  git add .
 7289  git commit -m "secure it"
 7290  git push
 7291  gst
 7292  git push
 7293  gst
 7294  gb
 7295  gst
 7296  git checkout develop
 7297  git branch -d dev
 7298  gst
 7299  gb
 7300  git checkout develop
 7301  gp
 7302  git checkout tomerge
 7303  gp
 7304  curl cheat.sh/find
 7305  find . -iname 'build*'
 7306  gp
 7307  git checkout develop
 7308  gp
 7309  git merge tomerge
 7310  gst
 7311  git push
 7312  gb
 7313  gst
 7314  git push
 7315  git checkout current
 7316  gp
 7317  git merge develop
 7318  git push
 7319  gst
 7320  git checkout develop
 7321  gp
 7322  git merge current
 7323  gst
 7324  git push
 7325  gst
 7326  diff -bur . ./../cluster-nomad_sandbox
 7327  gst
 7328  git log
 7329  gst
 7330  diff -bur . ./../cluster-nomad_sandbox/
 7331  git merge current
 7332  git push
 7333  git checkout current
 7334  gp
 7335  git merge develop
 7336  git push
 7337  git checkout develop
 7338  gp
 7339  git merge current
 7340  gst
 7341  git log
 7342  gst
 7343  git log
 7344  git merge current
 7345  gst
 7346  git push
 7347  gb
 7348  gst
 7349  diff -bur . ./../cluster-nomad_sandbox/
 7350  diff --help
 7351  diff -bur . ./../cluster-nomad_sandbox/ -x .git -x .terraform
 7352  gb
 7353  git branch -d current
 7354  git branch -d curren
 7355  git branch -d tomerge
 7356  gb
 7357  gst
 7358  git log
 7359  git push
 7360  gb
 7361  git branch -d feature/mobilejohnpaultechcom
 7362  git branch -d current
 7363  git push
 7364  gb
 7365  gst
 7366  gp
 7367  git checkout -b master
 7368  git push
 7369  git push --set-upstream origin master
 7370  gst
 7371  cat ~/pCloudDrive/notes/tasks/johnpaul/tips.txt
 7372  aws s3 ls
 7373  terraform --version
 7374  terraform plan -target=module.gitlab.aws_internet_gateway.gw
 7375  terraform init
 7376  terraform plan -target=module.gitlab.aws_internet_gateway.gw
 7377  gst
 7378  gb
 7379  git checkout develop
 7380  gp
 7381  git checkout refacto
 7382  gp
 7383  gst
 7384  git checkout develop
 7385  git checkout refacto
 7386  aws s3 ls
 7387  touch .env
 7388  cat ~/.ssh/id_rsa.pub
 7389  cat ~/.aws/credentials
 7390  aws configure --profile johnp-main-jdx
 7391  aws configure --profile johnp-sandbox-jdx
 7392  export AWS_PROFILE=johnp-sandbox-jdx
 7393  aws s3 ls
 7394  export AWS_PROFILE=johnp-sandbox-jdx
 7395  aws s3 ls
 7396  perl
 7397  perl --version
 7398  aws s3 ls
 7399  perl buildndeploy.pl
 7400  sudo apt install libjson-xs-perl
 7401  perl buildndeploy.pl
 7402  terraform --version
 7403  rm -r .terraform
 7404  perl buildndeploy.pl
 7405  aws configure --profile johnp-main-jdx
 7406  aws s3 ls
 7407  export AWS_PROFILE=johnp-main-jdx
 7408  aws s3 ls
 7409  perl buildndeploy.pl
 7410  aws s3 ls
 7411  aws ec2 describe-images --filters "Name=tag:Project,Values=jp-cluster" "Name=tag:Role,Values=admin" "Name=tag:Revision,Values=5918f2f" --query 'Images[*].ImageId' --output text\n
 7412  cd /tmp/packer_builder-TO0pl
 7413  l
 7414  cat main.tf
 7415  gst
 7416  gd
 7417  tfenv list
 7418  tfenv use 0.12.12
 7419  terraform --version
 7420  aws s3 ls
 7421  perl buildndeploy.pl
 7422  aws ec2 describe-images --filters "Name=tag:Project,Values=jp-cluster" "Name=tag:Role,Values=admin" "Name=tag:Revision,Values=5918f2f" --query 'Images[*].ImageId' --output text\n
 7423  export AWS_PROFILE=johnp-sandbox-jdx
 7424  aws s3 ls
 7425  perl buildndeploy.pl
 7426  aws ec2 describe-images --filters "Name=tag:Project,Values=jp-cluster" "Name=tag:Role,Values=admin" "Name=tag:Revision,Values=5918f2f" --query 'Images[*].ImageId' --output text\n
 7427  aws s3 ls
 7428  perl buildndeploy.pl
 7429  git fetch && git checkout alamara
 7430  export AWS_PROFILE=johnp-sandbox-jdx
 7431  terraform configure --profile jpsandbox
 7432  terraform --version
 7433  tfenv use 0.11.14
 7434  terraform --version
 7435  terraform configure --profile jpsandbox 
 7436  dd
 7437  terraform configure --profile jpsandbox 
 7438  gp
 7439  greset
 7440  gp
 7441  terraform init
 7442  aws s3 ls
 7443  rm -rf .terraform
 7444  terraform init
 7445  terraform plan
 7446  terraform init
 7447  terraform plan
 7448  - The first thing to target is the bastion: `terraform plan --target=module.bastion`\n
 7449  terraform plan --target=module.bastion
 7450  git log
 7451  gst
 7452  gd
 7453  gst
 7454  gd
 7455  vim ~/.aws/credentials
 7456  greset
 7457  gp
 7458  . ~/.zshrc
 7459  aws s3 ls
 7460  export AWS_PROFILE=johnp-sandbox-jdx
 7461  aws s3 ls
 7462  terraform plan --target=module.bastion
 7463  terraform init
 7464  terraform plan --target=module.bastion
 7465  rm ~/pCloudDrive/notes/tasks/wescale/feedback_formation.txt
 7466  gst
 7467  g
 7468  gd
 7469  greset
 7470  gst
 7471  gp
 7472  gst
 7473  git checkout develop
 7474  gst
 7475  git add .
 7476  git commit -m "update gitignore"
 7477  git push
 7478  aws s3 ls
 7479  export AWS_PROFILE=johnp-main-jdx
 7480  aws s3 ls
 7481  gst
 7482  gp
 7483  gst
 7484  git log
 7485  gst
 7486  gp
 7487  gst
 7488  git push
 7489  gst
 7490  aws s3 ls
 7491  packer build bastion/bastion.json
 7492  packer build bastion/packer/bastion.json
 7493  gst
 7494  git add .
 7495  git commit -m "fix readme"
 7496  git push
 7497  git checkout refacto 
 7498  find . -iname '*authorized_keys*'
 7499  git checkout master
 7500  sshuttle -vr jerome.devoucoux@18.185.253.77 --dns 10.0.0.0/8
 7501  git checkout refacto
 7502  gp
 7503  find . -iname '*authorized_keys*'
 7504  git checkout develop
 7505  gst
 7506  git fetch
 7507  git checkout develop
 7508  gp
 7509  ssh jerome.devoucoux@18.185.253.77
 7510  ssh admin@10.2.1.203
 7511  ssh admin@10.2.2.21
 7512  aws s3 ls
 7513  packer build bastion/packer/bastion.json
 7514  touch /home/jdx/dev/git/johnpaul/cluster-nomad/bastion/packer/authorized_keys
 7515  tmux
 7516  ssh jerome.devoucoux@18.185.253.77
 7517  cat ~/.ssh/id_rsa.pub
 7518  gst
 7519  git add .
 7520  git commit -m "update packer bastion"
 7521  git push
 7522  packer build bastion/packer/bastion.json
 7523  ssh admin@18.185.253.77
 7524  ansible --version
 7525  ssh admin@18.185.253.77
 7526  packer build bastion/packer/bastion.json
 7527  ssh admin@18.185.253.77
 7528  cd dev/tmp
 7529  vim bkp_auth_keys_bastion_jp.txt
 7530  gst
 7531  git add .
 7532  gst
 7533  git commit -m "update packer"
 7534  git push
 7535  gst
 7536  git push
 7537  gst
 7538  gb
 7539  gst
 7540  git log
 7541  git checkout -b feature/update-packer
 7542  git push
 7543  git push --set-upstream origin feature/update-packer
 7544  gst
 7545  gd
 7546  greste
 7547  greset
 7548  gst
 7549  gb
 7550  gst
 7551  gp
 7552  gst
 7553  gp
 7554  vim bastion/packer/authorized_keys
 7555  gst
 7556  gd
 7557  git add .
 7558  git commit -m "restrict authorized keys for bastion"
 7559  gst
 7560  git push
 7561  gst
 7562  git add .
 7563  git commit -m "line break"
 7564  git push
 7565  packer build cluster/packer/master/master.json
 7566  sshuttle -vr jerome.devoucoux@18.185.253.77 --dns 10.0.0.0/8
 7567  l
 7568  gst
 7569  gb
 7570  git branch -d feature/mobilejohnpaultechcom
 7571  gst
 7572  gb
 7573  git branch -D feature/mobilejohnpaultechcom
 7574  gst
 7575  gb
 7576  git checkout master
 7577  gp
 7578  gst
 7579  gb
 7580  gst
 7581  gp
 7582  git checkout alamara
 7583  gb
 7584  gst
 7585  gp
 7586  git log
 7587  gst
 7588  gd
 7589  gst
 7590  gd
 7591  git add .
 7592  git commit -m 'update readme'
 7593  git push
 7594  pwd
 7595  packer build cluster/packer/master/master.json
 7596  aws s3 ls
 7597  packer help
 7598  packer build cluster/packer/master/master.json
 7599  rm ~/pCloudDrive/notes/tasks/johnpaul/amis_tromas.txt
 7600  l
 7601  pwd
 7602  packer build cluster/packer/master/master.json
 7603  packer build help
 7604  packer build --help
 7605  packer build cluster/packer/master/master.json -debug
 7606  packer build -debug cluster/packer/master/master.json 
 7607  ssh admin@172.31.2.230
 7608  packer build cluster/packer/master/master.json 
 7609  ssh admin@10.2.2.21
 7610  sshuttle -vr jerome.devoucoux@18.185.253.77 --dns 10.0.0.0/8
 7611  ssh admin@10.2.2.21
 7612  packer build cluster/packer/master/master.json 
 7613  tmux
 7614  ssh admin@10.2.2.21
 7615  gst
 7616  gd
 7617  git add .
 7618  git commit -m "update notary"
 7619  gst
 7620  git push
 7621  aws s3 ls
 7622  packer build cluster/packer/slave/slave.json
 7623  gst
 7624  packer build cluster/packer/slave/slave.json
 7625  gitk /home/jdx/dev/git/johnpaul/cluster-nomad/gitlab/packer/gitlab.json
 7626  gst
 7627  gd
 7628  git add .
 7629  gst
 7630  git commit -m "debian 9 for all amis"
 7631  git push
 7632  vim /etc/apt/sources.list
 7633  apt update
 7634  sudo -i
 7635  export AWS_PROFILE=jdwescale-jerome
 7636  aws s3 ls
 7637  ./infra-builder-terraform.sh --account jdwescaledrone-dev
 7638  gp
 7639  git lo
 7640  git log
 7641  ./infra-builder-terraform.sh --help
 7642  ./infra-builder-terraform.sh --account jdwescaledrone-dev --plan
 7643  terraform --version
 7644  tfenv list
 7645  tfenv use 0.12.12
 7646  tfenv list
 7647  terraform --version
 7648  ./infra-builder-terraform.sh --account jdwescaledrone-dev --plan
 7649  ./infra-builder-terraform.sh --account jdwescaledrone-dev
 7650  ./infra-builder-terraform.sh --account jdwescaledrone-dev --plan
 7651  ./infra-builder-terraform.sh --account jdwescaledrone-dev
 7652  ./infra-builder-terraform.sh --account jdwescaledrone-dev --plan
 7653  ./infra-builder-terraform.sh --account jdwescaledrone-dev --destroy
 7654  ./infra-builder-terraform.sh --account jdwescaledrone-dev --plan
 7655  ./infra-builder-terraform.sh --help
 7656  ./infra-builder-terraform.sh --account jdwescaledrone-dev --layer 001-vpc --plan
 7657  ./infra-builder-terraform.sh --account jdwescaledrone-dev --layer 001-vpc
 7658  ./infra-builder-terraform.sh --account jdwescaledrone-dev --layer 002-asg
 7659  ./infra-builder-terraform.sh --account jdwescaledrone-dev
 7660  gst
 7661  gd
 7662  gst
 7663  gd
 7664  git add .
 7665  git commit -m "update ref vars"
 7666  git push
 7667  gst
 7668  gb
 7669  git branch -d feature/auto-route53
 7670  gst
 7671  gb
 7672  gst
 7673  gp
 7674  aws s3 ls
 7675  git log
 7676  ./infra-builder-terraform.sh --account jdwescaledrone-dev --layer 001-vpc
 7677  ./infra-builder-terraform.sh --account jdwescaledrone-dev --layer 002-asg
 7678  ./infra-make-inventory.sh
 7679  ./infra-provisioning-base.sh
 7680  gst
 7681  gd
 7682  git add .
 7683  git commit -m "update drone url"
 7684  git push
 7685  gp
 7686  gst
 7687  gd
 7688  gst
 7689  gd
 7690  git add .
 7691  git commit -m "fix merge + ttl"
 7692  git push
 7693  gst
 7694  aws s3 ls
 7695  ./infra-make-inventory.sh
 7696  ./infra-provisioning-base.sh
 7697  ./infra-provisioning-monitoring.sh
 7698  ./infra-provisioning-monitoring.sh rlsVPwksCoo5Nk1HIth1grjeO4bcBvWB
 7699  drone
 7700  \nexport DRONE_SERVER=https://drone.jdwescaledrone-dev.jdwscaws.jdxlabs.com\nexport DRONE_TOKEN=rlsVPwksCoo5Nk1HIth1grjeO4bcBvWB\ndrone info\n
 7701  drone
 7702  \nexport DRONE_SERVER=https://drone.jdwescaledrone-dev.jdwscaws.jdxlabs.com\nexport DRONE_TOKEN=rlsVPwksCoo5Nk1HIth1grjeO4bcBvWB\ndrone info\n
 7703  drone info
 7704  drone user add prometheus --machine
 7705  ./infra-provisioning-monitoring.sh pJAtALIwHRU1AOQcMfJ7thKInZ9R2Vvc
 7706  ssh admin@54.246.137.197
 7707  ./infra-builder-terraform.sh --account jdwescaledrone-dev --destroy
 7708  gp
 7709  git log
 7710  ./infra-builder-terraform.sh --account jdwescaledrone-dev --destroy
 7711  gst
 7712  greset
 7713  gp
 7714  ./infra-builder-terraform.sh --account jdwescaledrone-dev
 7715  gst
 7716  gp
 7717  gst
 7718  gp
 7719  git log
 7720  ./infra-builder-terraform.sh --account jdwescaledrone-dev
 7721  ./infra-make-inventory.sh
 7722  ansible -m ping all
 7723  ./infra-provisioning-base.sh
 7724  ./infra-provisioning-monitoring.sh
 7725  gp
 7726  git log
 7727  export DRONE_SERVER=https://drone.jdwescaledrone-dev.jdwscaws.jdxlabs.com\nexport DRONE_TOKEN=9OwYZJQBpFnrFom19WYzRAB31UmNxJka
 7728  drone info
 7729  drone user add prometheus --machine
 7730  drone info
 7731  drone 
 7732  drone user
 7733  drone user ls
 7734  aws s3 ls
 7735  vim ~/.zshrc
 7736  gst
 7737  gd
 7738  drone info
 7739  vim ~/.zshrc
 7740  aws s3 ls
 7741  \nexport DRONE_SERVER=https://drone.jdwescaledrone-dev.jdwscaws.jdxlabs.com\nexport DRONE_TOKEN=9OwYZJQBpFnrFom19WYzRAB31UmNxJka\ndrone info\n
 7742  vim ~/.zshrc
 7743  . ~/.zshrc
 7744  aws s3 ls
 7745  drone info
 7746  drone user ls
 7747  drone user --help
 7748  drone user rm prometheus
 7749  drone user add prometheus
 7750  drone user rm prometheus
 7751  drone user add prometheus
 7752  drone user rm prometheus
 7753  drone user add prometheus --machine
 7754  ./infra-provisioning-base.sh
 7755  ./infra-provisioning-monitoring.sh NbZUsQJvgKyONFcqI6j6HQL0fN5dsivM
 7756  ansible -m ping all
 7757  ssh admin@34.251.46.161
 7758  ./infra-provisioning-monitoring.sh NbZUsQJvgKyONFcqI6j6HQL0fN5dsivM
 7759  sshuttle -vr admin@34.251.46.161 --dns 11.0.0.0/8
 7760  ssh -L 9090:localhost:9090 admin@34.251.46.161
 7761  ssh admin@34.251.46.161
 7762  aws s3 ls
 7763  drone info
 7764  . ~/.zshrc
 7765  drone info
 7766  vim ~/.zshrc
 7767  drone info
 7768  . ~/.zshrc
 7769  drone info
 7770  drone user ls
 7771  drone user add prometheus --machine
 7772  ./infra-provisioning-monitoring.sh xRE4ubw2lTaJcXF69ptxQAfPD4V68Tm4
 7773  gst
 7774  gd
 7775  gst
 7776  gd
 7777  gp
 7778  git add .
 7779  git commit -m "update readme"
 7780  git push
 7781  gst
 7782  vim pCloudDrive/notes/todo.txt
 7783  aws s3 ls
 7784  gst
 7785  git log
 7786  aws s3 ls
 7787  gst
 7788  gd
 7789  gst
 7790  vim ~/.aws/credentials
 7791  . ~/.zshrc
 7792  aws s3 ls
 7793  export AWS_PROFILE=jp-main-jdx
 7794  aws s3 ls
 7795  gst
 7796  gd
 7797  git add .
 7798  gst
 7799  git commit -m "prefer jp-sandbox"
 7800  git push
 7801  gst
 7802  aws s3 ls
 7803  packer build bastion/packer/bastion.json
 7804  export AWS_PROFILE=jp-main-jdx
 7805  aws s3 ls
 7806  packer build cluster/packer/master/master.json
 7807  packer build cluster/packer/slave/slave.json
 7808  packer build gitlab/packer/gitlab.json
 7809  export AWS_PROFILE=jp-main-jdx
 7810  aws s3 ls
 7811  packer build proxy/packer/proxy.json
 7812  gst
 7813  gp
 7814  aws s3 ks$
 7815  aws s3 ls
 7816  git checkout develop
 7817  gp
 7818  git log
 7819  git branch -d feature/update-packer
 7820  gst
 7821  gp
 7822  git checkout -b feature/source-ami-filter
 7823  git push
 7824  git push --set-upstream origin feature/source-ami-filter
 7825  gst
 7826  packer build bastion/packer/bastion.json
 7827  gst
 7828  gp
 7829  git checkout develop
 7830  gp
 7831  gb
 7832  git checkout origin/feature/mobilejohnpaultechcom
 7833  gst
 7834  git checkout feature/source-ami-filter
 7835  gst
 7836  gp
 7837  gst
 7838  gp
 7839  git log
 7840  gst
 7841  git checkout develop
 7842  gp
 7843  git log
 7844  gst
 7845  git fetch upstream
 7846  gst
 7847  gp
 7848  git log
 7849  git checkout alamara
 7850  gp
 7851  git merge develop
 7852  gst
 7853  gd
 7854  gst
 7855  gd
 7856  gst
 7857  gd
 7858  git add .
 7859  gst
 7860  git commit -m "merge develop"
 7861  git push
 7862  gst
 7863  git checkout develop
 7864  gp
 7865  git merge alamara
 7866  gst
 7867  git push
 7868  gb
 7869  gst
 7870  git push
 7871  git log
 7872  git checkout -b feature/init-sandbox
 7873  git push
 7874  git push --set-upstream origin feature/init-sandbox
 7875  gst
 7876  aws s3 ks
 7877  aws s3 ls
 7878  export AWS_PROFILE=jp-sandbox-jdx
 7879  gst
 7880  aws s3 ls
 7881  packer build bastion/packer/bastion.json
 7882  export AWS_PROFILE=jp-sandbox-jdx
 7883  packer build cluster/packer/master/master.json
 7884  export AWS_PROFILE=jp-sandbox-jdx
 7885  packer build cluster/packer/slave/slave.json
 7886  export AWS_PROFILE=jp-sandbox-jdx
 7887  packer build gitlab/packer/gitlab.json
 7888  export AWS_PROFILE=jp-sandbox-jdx
 7889  packer build proxy/packer/proxy.json
 7890  gst
 7891  gd
 7892  gst
 7893  gd
 7894  git add .
 7895  gst
 7896  git commit -m "fix proxy ami"
 7897  git push
 7898  gst
 7899  export AWS_PROFILE=jp-main-jdx
 7900  packer build cluster/packer/master/master.json
 7901  packer build cluster/packer/slave/slave.json
 7902  packer build gitlab/packer/gitlab.json
 7903  export AWS_PROFILE=jp-main-jdx
 7904  packer build gitlab/packer/gitlab.json
 7905  export AWS_PROFILE=jp-sandbox-jdx
 7906  packer build proxy/packer/proxy.json
 7907  aws s3 ks
 7908  aws s3 ls
 7909  export AWS_PROFILE=jp-sandbox-jdx
 7910  export AWS_PROFILE=jp-main-jdx
 7911  aws s3 ls
 7912  packer build cluster/packer/slave/slave.json
 7913  aws s3 ls
 7914  gst
 7915  export AWS_PROFILE=jp-sandbox-jdx
 7916  terraform --version
 7917  tfenv list
 7918  tfenv use 0.11.14
 7919  terraform init
 7920  rm -rf .terraform
 7921  gst
 7922  gd
 7923  terraform init
 7924  uname -a
 7925  dmi-decode
 7926  dmidecode
 7927  sudo dmidecode
 7928  aws s3 ls
 7929  terraform init
 7930  terraform plan
 7931  l ~/Téléchargements
 7932  cp ~/Téléchargements/terraform-provider-consulacl_v1.5.0-linux-amd64 ./.terraform/plugins/linux_amd64/
 7933  terraform plan
 7934  export AWS_PROFILE=jp-main-jdx
 7935  aws s3 ls
 7936  l
 7937  cd datafeed
 7938  terraform init
 7939  terraform --version
 7940  pwd
 7941  l
 7942  terraform --version
 7943  terraform init
 7944  terraform plan
 7945  terraform init
 7946  terraform plan
 7947  terraform init
 7948  terraform --version
 7949  terraform init
 7950  tfenv list
 7951  tfenv 0.12.12
 7952  tfenv use 0.12.12
 7953  tfenv list
 7954  terraform --version
 7955  terraform init
 7956  terraform plan
 7957  l
 7958  aws s3 ls
 7959  terraform --version
 7960  cp ~/Téléchargements/tf_sven_artefacts/terraform_datafeed.tfstate ~/dev/git/johnpaul/cluster-nomad/datafeed/terraform.tfstate
 7961  vim ~/dev/git/johnpaul/cluster-nomad/datafeed/terraform.tfstate
 7962  terraform plan
 7963  terraform init
 7964  terraform plan
 7965  gst
 7966  aws s3 ls
 7967  terraform init
 7968  gst
 7969  terraform init
 7970  tfenv use 0.11.14
 7971  terraform plan
 7972  terraform init
 7973  terraform plan
 7974  gst
 7975  gd
 7976  git checkout cluster/nomad/logstash.nomad proxy/packer/logstash/filter.conf proxy/packer/logstash/modsec.grok
 7977  gst
 7978  gd
 7979  terraform plan
 7980  TF_LOG=DEBUG terraform plan
 7981  terraform plan
 7982  gst
 7983  gd
 7984  terraform plan
 7985  aws s3 ls
 7986  sshuttle -vr jerome.devoucoux@18.185.253.77 --dns 10.0.0.0/8
 7987  ssh admin@10.8.0.149
 7988  terraform plan
 7989  gst
 7990  gd
 7991  find . -iname '*restore_state*'
 7992  cd ..
 7993  gst
 7994  gp
 7995  gst
 7996  tree
 7997  find . -iname '*restore_state*'
 7998  vim pCloudDrive/notes/todo.txt
 7999  gst
 8000  gb
 8001  gst
 8002  export AWS_PROFILE=jp-main-jdx
 8003  aws s3 ls
 8004  gst
 8005  gp
 8006  gst
 8007  git log
 8008  gst
 8009  sudo -i
 8010  cd dev/git/codebase/recipes-infra
 8011  l
 8012  mkdir wikijs
 8013  cd wikijs
 8014  l
 8015  curl -sSo- https://wiki.js.org/install.sh | bash
 8016  cd ~/Téléchargements
 8017  mkdir tamerelapute
 8018  cd tamerelapute
 8019  curl -sSo- https://wiki.js.org/install.sh | bash
 8020  l
 8021  cd ..
 8022  l
 8023  rm -rm wikijs
 8024  rm -rf wikijs
 8025  cd ..
 8026  mr -rf tamerelapute
 8027  l
 8028  rm -rf tamerelapute
 8029  l
 8030  cd
 8031  cd dev/tmp
 8032  l
 8033  mkdir wikijs
 8034  cd wikijs
 8035  l
 8036  curl -sSo- https://wiki.js.org/install.sh | bash
 8037  gst
 8038  node wiki start
 8039  netstat -ntpul
 8040  node wiki configure
 8041  apt search mongo
 8042  docker run --name mongo -p 127.0.0.1:27017:27017 -d mongo
 8043  ping google.fr
 8044  docker run --name mongo -p 127.0.0.1:27017:27017 -d mongo
 8045  cat ~/pCloudDrive/notes/todo.txt
 8046  node wiki sto
 8047  node wiki stop
 8048  htop
 8049  docker ps
 8050  docker stop -t0 4cff02cc4ac6
 8051  docker rm 4cff02cc4ac6
 8052  docker ps
 8053  cd ..
 8054  l
 8055  sudo -i
 8056  nslookup 213.199.138.187
 8057  ping 213.199.138.187
 8058  traceroute 213.199.138.187
 8059  gs
 8060  gst
 8061  gb
 8062  git checkout refacto
 8063  gst
 8064  git checkout master
 8065  gst
 8066  git checkout refacto
 8067  gst
 8068  tree
 8069  sshuttle -vr jerome.devoucoux@18.185.253.77 --dns 10.0.0.0/8
 8070  ssh admin@10.2.0.146
 8071  ssh admin@10.2.68.52
 8072  ssh admin@10.2.1.101
 8073  ssh admin@10.2.2.21
 8074  git checkout master
 8075  gst
 8076  gp
 8077  gst
 8078  git log
 8079  gst
 8080  gd
 8081  git add .
 8082  git commit -m "update gitignore"
 8083  git push
 8084  gst
 8085  gd
 8086  aws s3 ls
 8087  export AWS_PROFILE=jp-sandbox-jdx
 8088  aws s3 ls
 8089  tfenv use 0.11.14
 8090  terraform init
 8091  terraform plan
 8092  gst
 8093  gd
 8094  terraform plan
 8095  gst
 8096  gd
 8097  terraform plan
 8098  gst
 8099  gd
 8100  gst
 8101  gd
 8102  git add .
 8103  git commit -m "init modifs"
 8104  gst
 8105  git push
 8106  gst
 8107  terraform plan
 8108  export AWS_PROFILE=jp-main-jdx
 8109  aws s3 ls
 8110  terraform --version
 8111  terraform init
 8112  ps aux | grep skyp
 8113  vim pCloudDrive/notes/todo.txt
 8114  aws s3 ls
 8115  tree
 8116  aws s3 ls
 8117  pwd
 8118  aws s3 ls
 8119  ./infra-builder-terraform.sh --account jdwescaledrone-dev --destroy
 8120  gp
 8121  gst
 8122  ./infra-builder-terraform.sh --account jdwescaledrone-dev --destroy
 8123  gst
 8124  ./infra-builder-terraform.sh --account jdwescaledrone-dev --destroy
 8125  gst
 8126  terraform --version
 8127  tfenv list
 8128  tfenv use 0.12.12
 8129  terraform --version
 8130  aws s3 ls
 8131  ./infra-builder-terraform.sh --account jdwescaledrone-dev --destroy
 8132  ./infra-builder-terraform.sh --account jdwescaledrone-dev --plan
 8133  ./infra-builder-terraform.sh --help
 8134  ./infra-builder-terraform.sh --account jdwescaledrone-dev --layer 001-vpc --plan
 8135  ./infra-builder-terraform.sh --account jdwescaledrone-dev --layer 001-vpc
 8136  ./infra-builder-terraform.sh --account jdwescaledrone-dev --layer 002-asg --plan
 8137  ./infra-builder-terraform.sh --account jdwescaledrone-dev --layer 002-asg
 8138  ./infra-builder-terraform.sh --account jdwescaledrone-dev --layer 002-asg --plan
 8139  ./infra-make-inventory.sh
 8140  ./infra-provisioning-base.sh
 8141  aws s3 ls
 8142  ansible -m ping all
 8143  ./infra-provisioning-base.sh
 8144  ./infra-provisioning-monitoring.sh
 8145  export DRONE_SERVER=https://drone.jdwescaledrone-dev.jdwscaws.jdxlabs.com\nexport DRONE_TOKEN=vpRrQ9SBJAYi26lEWNaiFkE59ObmVJNf
 8146  drone info
 8147  drone user add prometheus --machine
 8148  ./infra-provisioning-monitoring.sh Met6sjvgiJDkoxut5ce22bOF5IOsWRvX
 8149  drone info
 8150  vim pCloudDrive/notes/todo.txt
 8151  aws s3 ls
 8152  ansible -m ping all
 8153  ansible -m ping master-0
 8154  pwd
 8155  cd /home/jdx/dev/git/wescale/drone-base
 8156  ssh admin@54.76.135.75
 8157  ssh admin@34.243.146.254
 8158  ssh -F ./ssh.cfg -o ProxyCommand="ssh -W %h:%p -F ./ssh.cfg 34.243.146.254" admin@11.0.10.43
 8159  ssh -F ./ssh.cfg -o ProxyCommand="ssh -W %h:%p -F ./ssh.cfg 34.243.146.254" admin@11.0.20.33
 8160  tmux
 8161  ssh -L 9090:localhost:9090 admin@34.243.146.254
 8162  ssh -L 3000:localhost:3000 admin@34.243.146.254
 8163  drone info
 8164  vim ~/.zshrc
 8165  . ~/.zshrc
 8166  drone info
 8167  drone --help
 8168  drone repo --help
 8169  drone repo ls
 8170  drone repo activate WeScale/drone-with-python
 8171  drone repo --help
 8172  drone repo enable WeScale/drone-with-python
 8173  drone repo update WeScale/drone-with-python
 8174  drone repo sync
 8175  drone repo --help
 8176  drone --help
 8177  drone build --help
 8178  drone build ls
 8179  drone --help
 8180  drone exec --help
 8181  history
 8182  drone exec --repo WeScale/drone-with-python
 8183  drone exec --help
 8184  drone --help
 8185  drone queue --help
 8186  drone --help
 8187  drone --version
 8188  cd ;.
 8189  cd ..
 8190  l
 8191  cd ..
 8192  l
 8193  git clone git@github.com:WeScale/drone-with-python.git
 8194  cd drone-with-python
 8195  l
 8196  touch test
 8197  vim test
 8198  git add .
 8199  rm test
 8200  touch trigger_build
 8201  vim trigger_build
 8202  git add .
 8203  git commit -m "trigger build"
 8204  git push
 8205  top
 8206  htop
 8207  cp .drone.yml .drone.yml.bkp
 8208  vim .drone.yml
 8209  gst
 8210  git add .
 8211  git commit -m "just a demo"
 8212  git push
 8213  ./infra-builder-terraform.sh --account jdwescaledrone-dev --destroy
 8214  ./infra-builder-terraform.sh --account jdwescaledrone-dev --layer 001-vpc
 8215  ./infra-builder-terraform.sh --account jdwescaledrone-dev --layer 002-asg
 8216  ./infra-builder-terraform.sh --account jdwescaledrone-dev --layer 002-asg --destroy
 8217  ./infra-builder-terraform.sh --account jdwescaledrone-dev --layer 002-asg 
 8218  history
 8219  ansible -m ping all
 8220  gst
 8221  history
 8222  ls
 8223  l
 8224  ./infra-builder-terraform.sh --account jdwescaledrone-dev --destroy
 8225  ./infra-builder-terraform.sh --account jdwescaledrone-dev --layer 001-vpc
 8226  ./infra-builder-terraform.sh --account jdwescaledrone-dev --layer 002-asg --plan
 8227  ./infra-builder-terraform.sh --account jdwescaledrone-dev --layer 002-asg
 8228  ./infra-make-inventory.sh
 8229  ansible -m ping all
 8230  ./infra-provisioning-base.sh
 8231  ssh admin@34.243.37.1
 8232  vim ~/.zshrc
 8233  . ~/.zshrc
 8234  drone info
 8235  drone repo ls
 8236  drone repo ls | grep drone-with
 8237  drone repo enable WeScale/drone-with-python
 8238  vim trigger_build
 8239  git commit -am "trigger build"
 8240  git push
 8241  ssh admin@34.243.37.1
 8242  gst
 8243  l
 8244  drone info
 8245  drone repo ls
 8246  . ~/.zshrc
 8247  drone repo ls
 8248  ssh -F ./ssh.cfg -o ProxyCommand="ssh -W %h:%p -F ./ssh.cfg 34.243.37.1" admin@11.0.20.231
 8249  l
 8250  drone user add prometheus --machine
 8251  ./infra-provisioning-monitoring.sh 1z3WeYb7tiWki6qyA3bEYQWDo3wtiaGL
 8252  ssh -L 9090:localhost:9090 admin@34.243.37.1
 8253  ssh -F ./ssh.cfg -o ProxyCommand="ssh -W %h:%p -F ./ssh.cfg 34.243.37.1" admin@11.0.10.75
 8254  ssh -L 9090:localhost:3000 admin@34.243.37.1
 8255  ssh -L 3000:localhost:3000 admin@34.243.37.1
 8256  tmux list-sessions
 8257  tmux attach-session -t 0
 8258  l
 8259  ./infra-builder-terraform.sh --account jdwescaledrone-dev --destroy
 8260  vim pCloudDrive/notes/tasks/jdxlabs/
 8261  cat ~/.aws/credentials
 8262  cat ~/pCloudDrive/notes/tasks/wescale/2019-11_weshare-k3s.txt
 8263  ps aux | grep skyp
 8264  aws s3 ls
 8265  cd dev/git/wescale/
 8266  git clone git@gitlab.com:wescalefr-oss/toolbox-security.git
 8267  cd toolbox-security
 8268  l
 8269  cd aws
 8270  l
 8271  vim README.md
 8272  aws s3 ls
 8273  git log
 8274  gst
 8275  gp
 8276  gb
 8277  gp
 8278  git checkout -b aws/issue-5_nuke-the-weworld
 8279  git push
 8280  git push --set-upstream origin aws/issue-5_nuke-the-weworld
 8281  gst
 8282  gb
 8283  gst
 8284  l
 8285  cd aws
 8286  l
 8287  mkdir nuke
 8288  l
 8289  cd nuke
 8290  l
 8291  cd
 8292  cd dev/git
 8293  l
 8294  cd wescale
 8295  l
 8296  git clone git@github.com:rebuy-de/aws-nuke.git
 8297  gb
 8298  gst
 8299  l
 8300  cd aws-nuke
 8301  l
 8302  cd ..
 8303  cp -r aws-nuke/ toolbox-security/aws/nuke
 8304  cd toolbox-security/aws/nuke
 8305  l
 8306  cd aws-nuke
 8307  l
 8308  cd ..
 8309  touch README.md
 8310  cd aws-nuke
 8311  l
 8312  rm -r .git
 8313  rm -rf .git
 8314  gst
 8315  l
 8316  tree
 8317  gst
 8318  l
 8319  gst
 8320  pwd
 8321  cd ../..
 8322  cd ..
 8323  l
 8324  gst
 8325  cd
 8326  cd dev/git/wescale/toolbox-security
 8327  l
 8328  gst
 8329  git add .
 8330  git commit -m "nuke nuke"
 8331  gst
 8332  git push
 8333  gst
 8334  gp
 8335  gst
 8336  gb
 8337  l
 8338  pwd
 8339  cd ..
 8340  l
 8341  pwd
 8342  gst
 8343  g
 8344  gp
 8345  cd aws/nuke
 8346  l
 8347  aws-nuke -c nuke-config.yml
 8348  pwd
 8349  docker run \\n    --rm -it \\n    -v ./aws/nuke/nuke-config.yml:/home/aws-nuke/config.yml \\n    -v ~/.aws:/home/aws-nuke/.aws \\n    quay.io/rebuy/aws-nuke:v2.11.0 \\n    --profile default \\n    --config /home/aws-nuke/config.yml
 8350  ping google.fr
 8351  docker run \\n    --rm -it \\n    -v ./aws/nuke/nuke-config.yml:/home/aws-nuke/config.yml \\n    -v ~/.aws:/home/aws-nuke/.aws \\n    quay.io/rebuy/aws-nuke:v2.11.0 \\n    --profile default \\n    --config /home/aws-nuke/config.yml
 8352  cat ./aws/nuke/nuke-config.yml
 8353  pwd
 8354  docker run \\n    --rm -it \\n    -v ./aws/nuke/nuke-config.yml:/home/aws-nuke/config.yml \\n    -v ~/.aws:/home/aws-nuke/.aws \\n    quay.io/rebuy/aws-nuke:v2.11.0 \\n    --profile default \\n    --config /home/aws-nuke/config.yml
 8355  gst
 8356  git add .
 8357  git commit -m "update readme"
 8358  git push
 8359  gst
 8360  docker run \\n    --rm -it \\n    -v ./aws/nuke/nuke-config.yml:/home/aws-nuke/config.yml \\n    -v ~/.aws:/home/aws-nuke/.aws \\n    quay.io/rebuy/aws-nuke:v2.11.0 \\n    --profile default \\n    --config /home/aws-nuke/config.yml
 8361  cat ./aws/nuke/nuke-config.yml
 8362  docker run \\n    --rm -it \\n    -v ./aws/nuke/nuke-config.yml:/home/aws-nuke/config.yml \\n    -v ~/.aws:/home/aws-nuke/.aws \\n    quay.io/rebuy/aws-nuke:v2.11.0 \\n    --profile default \\n    --config /home/aws-nuke/config.yml
 8363  cat ./aws/nuke/nuke-config.yml
 8364  pwd
 8365  docker run \\n    --rm -it \\n    -v ~/dev/git/wescale/toolbox-security/aws/nuke/nuke-config.yml:/home/aws-nuke/config.yml \\n    -v ~/.aws:/home/aws-nuke/.aws \\n    quay.io/rebuy/aws-nuke:v2.11.0 \\n    --profile default \\n    --config /home/aws-nuke/config.yml
 8366  docker run \\n    --rm -it \\n    -v ~/dev/git/wescale/toolbox-security/aws/nuke/nuke-config.yml:/home/aws-nuke/config.yml \\n    -v ~/.aws:/home/aws-nuke/.aws \\n    quay.io/rebuy/aws-nuke:v2.11.0 \\n    --help
 8367  docker run \\n    --rm -it \\n    -v ~/dev/git/wescale/toolbox-security/aws/nuke/nuke-config.yml:/home/aws-nuke/config.yml \\n    -v ~/.aws:/home/aws-nuke/.aws \\n    quay.io/rebuy/aws-nuke:v2.11.0 \\n    --profile default \\n    --config /home/aws-nuke/config.yml --force
 8368  docker run \\n    --rm -it \\n    -v ~/dev/git/wescale/toolbox-security/aws/nuke/nuke-config.yml:/home/aws-nuke/config.yml \\n    -v ~/.aws:/home/aws-nuke/.aws \\n    quay.io/rebuy/aws-nuke:v2.11.0 \\n    --profile default \\n    --config /home/aws-nuke/config.yml
 8369  aws s3 ls
 8370  cat ~/.aws/credentials
 8371  docker run \\n    --rm -it \\n    -v ~/dev/git/wescale/toolbox-security/aws/nuke/nuke-config.yml:/home/aws-nuke/config.yml \\n    -v ~/.aws:/home/aws-nuke/.aws \\n    quay.io/rebuy/aws-nuke:v2.11.0 \\n    --profile jdwescale-jerome \\n    --config /home/aws-nuke/config.yml
 8372  docker run \\n    --rm -it \\n    -v ~/dev/git/wescale/toolbox-security/aws/nuke/nuke-config.yml:/home/aws-nuke/config.yml \\n    -v ~/.aws:/home/aws-nuke/.aws \\n    quay.io/rebuy/aws-nuke:v2.11.0 --help
 8373  cd
 8374  cd Téléchargements
 8375  wget https://dl.google.com/go/go1.13.4.linux-amd64.tar.gz\n
 8376  tar -xvf go1.13.4.linux-amd64.tar.gz
 8377  sudo mv go /usr/local\n
 8378  go --version
 8379  go version
 8380  which go
 8381  sudo mv /usr/local/go /usr/bin\n
 8382  sudo rm -r /usr/local/go
 8383  l
 8384  rm go1.13.4.linux-amd64.tar.gz
 8385  l
 8386  gst
 8387  gd
 8388  chmod +x aws/nuke/launch-nuke.sh
 8389  ./aws/nuke/launch-nuke.sh
 8390  gst
 8391  gd
 8392  git add .
 8393  gst
 8394  git commit -m "update nuke"
 8395  git push
 8396  gp
 8397  git add .
 8398  git commit -m "update script"
 8399  git push
 8400  gst
 8401  gp
 8402  gst
 8403  pwd
 8404  cd ../
 8405  l
 8406  pwd
 8407  gp
 8408  l
 8409  mkdir k3s_tmp
 8410  l
 8411  gst
 8412  gd
 8413  gst
 8414  gd
 8415  git add .
 8416  git commit -m "merge"
 8417  gst
 8418  git push
 8419  gst
 8420  vim pCloudDrive/notes/todo.txt
 8421  sshuttle -vr jerome.devoucoux@18.185.253.77 --dns 10.0.0.0/8
 8422  cd dev/git/johnpaul
 8423  l
 8424  git clone git@git.infra.johnpaultech.com:johnpaultech/infra/documentation.git
 8425  l
 8426  cd documentation
 8427  l
 8428  gst
 8429  git add .
 8430  git commir -m "create readme"
 8431  git commit -m "create readme"
 8432  git push
 8433  gp
 8434  gst
 8435  gd
 8436  greset
 8437  gp
 8438  gst
 8439  l
 8440  mv AZURE Azure
 8441  gst
 8442  git add .
 8443  gst
 8444  git add .
 8445  git commit -m "README update"
 8446  git push
 8447  l
 8448  touch Support/Apps/ms-app.md
 8449  touch Support/Apps/teapot-app.md
 8450  touch Support/Apps/visa-app.md
 8451  gst
 8452  gd
 8453  git add .
 8454  git commit -m "global structure for the doc"
 8455  git push
 8456  gst
 8457  cat .git/config
 8458  gst
 8459  git add .
 8460  git commit -m "describe tooling for the ops team"
 8461  git push
 8462  gp
 8463  gst
 8464  git push
 8465  gst
 8466  gd
 8467  git add .
 8468  gst
 8469  git commit -m "add aws schemas & security docs"
 8470  git push
 8471  gst
 8472  git add .
 8473  git commit -m "remove notes"
 8474  git push
 8475  git add .
 8476  git commit -m "fix"
 8477  git push
 8478  gst
 8479  gd
 8480  git add .
 8481  git commit -m "add team work section"
 8482  git push
 8483  gst
 8484  git add .
 8485  git commit -m "set Trello dashboard"
 8486  git push
 8487  gst
 8488  sshuttle -vr jerome.devoucoux@18.185.253.77 --dns 10.0.0.0/8
 8489  gst
 8490  tmux
 8491  ssh admin@10.2.0.251
 8492  ssh admin@10.2.68.52
 8493  ssh admin@10.2.69.71
 8494  ssh admin@10.2.2.21
 8495  ssh admin@10.2.67.19
 8496  nslookup 10.2.67.19
 8497  nslookup 52.94.204.39
 8498  ssh admin@10.2.2.21
 8499  tmux
 8500  ssh admin@10.2.68.52
 8501  ssh admin@10.2.67.19
 8502  ssh admin@10.2.69.178
 8503  l
 8504  mkdir Reports/Tasks
 8505  mv ~/pCloudDrive/notes/tasks/johnpaul/20191105_egress_dev.txt Reports/Tasks
 8506  gst
 8507  gd
 8508  git add .
 8509  git commit -m "document egress"
 8510  git push
 8511  ssh admin@10.2.69.178
 8512  cd dev/git
 8513  l
 8514  cd seloger
 8515  grep -nri Statement ?
 8516  grep -nri Statement .
 8517  vim ./sl_data-aws-base-infra/cfn/templates/datalake/v2/s3-seloger-data-runtime.yml
 8518  mv ~/dev/git/johnpaul/documentation/Reports/Tasks/20191105_egress_dev.md ~/pCloudDrive/notes/tasks/johnpaul/20191105_egress_dev.txt
 8519  l
 8520  export AWS_PROFILE=jp-main-jdx
 8521  aws s3 ls
 8522  gst
 8523  gd
 8524  git add .
 8525  git commit -m "set doc structure for aws network"
 8526  git push
 8527  gst
 8528  gd
 8529  git add .
 8530  git commit -m "set dashlane as tool"
 8531  git push
 8532  gst
 8533  git add .
 8534  git commit -m "update tooling and oubounds"
 8535  git push
 8536  sshuttle -vr jerome.devoucoux@18.185.253.77 --dns 10.0.0.0/8
 8537  gst
 8538  gd
 8539  gst
 8540  gd
 8541  gp
 8542  cd datafeed
 8543  l
 8544  terraform --version
 8545  tfenv use 0.12.13
 8546  tfenv install 0.12.13
 8547  touch terraform.tfvars
 8548  gst
 8549  terraform --version
 8550  terraform init
 8551  terraform plan
 8552  terraform --help
 8553  terraform plan --help
 8554  terraform plan -var-file=terraform.tfvars
 8555  aws s3 ls
 8556  export AWS_PROFILE=jp-main-jdx
 8557  aws s3 ls
 8558  terraform init
 8559  terraform plan -var-file=terraform.tfvars
 8560  terraform workspace select staging
 8561  terraform init
 8562  terraform workspace --help
 8563  terraform workspace list
 8564  aws s3 ls
 8565  aws configure --profile jp-tech-jdx
 8566  aws s3 ls
 8567  export AWS_PROFILE=jp-tech-jdx
 8568  aws s3 ls
 8569  terraform init
 8570  terraform workspace list
 8571  l
 8572  pwd
 8573  terraform init
 8574  terraform plan -var-file=terraform.tfvars
 8575  export AWS_PROFILE=jp-tech-jdx
 8576  aws s3 ls
 8577  rm -rf terraform.tf
 8578  l
 8579  gst
 8580  rm -rf .terraform
 8581  aws s3 ls
 8582  terraform init
 8583  terraform plan -var-file=terraform.tfvars
 8584  terraform workspace list
 8585  aws s3 ls
 8586  gst
 8587  gb
 8588  pwd
 8589  cd dev/git/johnpaul
 8590  l
 8591  git clone git@git.infra.johnpaultech.com:it/pan-anon/terraform.git
 8592  l
 8593  mkdir pan-anon
 8594  mv terraform pan-anon
 8595  l
 8596  cd pan-anon
 8597  l
 8598  cd terraform
 8599  l
 8600  git submodules
 8601  git submodule
 8602  git submodule update --init
 8603  mv ../../cluster-nomad/datafeed/terraform.tfvars .
 8604  l
 8605  export AWS_PROFILE=jp-tech-jdx
 8606  aws s3 ls
 8607  terraform init
 8608  terraform plan -var-file=terraform.tfvars
 8609  terraform workspace list
 8610  terraform workspace select staging
 8611  terraform workspace list
 8612  terraform plan -var-file=terraform.tfvars
 8613  cd ..
 8614  l
 8615  pwd
 8616  gst
 8617  gd
 8618  gst
 8619  gd
 8620  gst
 8621  gd
 8622  git add .
 8623  git commit -m "set tooling and tickets"
 8624  git push
 8625  gp
 8626  gst
 8627  gd
 8628  git log
 8629  gst
 8630  git push
 8631  gst
 8632  ip a
 8633  ping google.fr
 8634  ip a
 8635  ping 10.33.24.44
 8636  nslookup 10.33.24.44
 8637  dig 10.33.24.44
 8638  gst
 8639  git add .
 8640  git commit -m "team work"
 8641  gst
 8642  git push
 8643  gst
 8644  gp
 8645  gst
 8646  cd dev/git/johnpaul
 8647  l
 8648  git clone git@git.infra.johnpaultech.com:johnpaultech/infra/es-cleaner.git
 8649  l
 8650  cd es-cleaner
 8651  gp
 8652  l
 8653  tree
 8654  vim
 8655  export AWS_PROFILE=jp-main-jdx
 8656  terraform init
 8657  terraform plan
 8658  terraform destroy
 8659  nslookup 18.184.196.15
 8660  nslookup 52.58.18.26
 8661  sshuttle -vr jerome.devoucoux@18.185.253.77 --dns 10.0.0.0/8
 8662  ssh admin@10.2.2.21
 8663  l
 8664  ssh admin@10.2.64.179
 8665  export AWS_PROFILE=jp-main-jdx
 8666  aws s3 ls
 8667  aws ec2 help
 8668  aws ec2 describe-instances
 8669  aws ec2 describe-instances help
 8670  aws ec2 describe-instances --instance-ids
 8671  aws ec2 describe-instances help
 8672  aws ec2 describe-instances --filters Name=instance-id,Values=$(wget -qO- http://instance-data/latest/meta-data/instance-id) --query Reservations[].Instances[].Tags[].Value --output text
 8673  aws ec2 describe-instances --filters Name=instance-id,Values=$(wget -qO- http://instance-data/latest/meta-data/instance-id) --output text
 8674  aws ec2 describe-instances
 8675  aws ec2 describe-instances > instances
 8676  vim instances
 8677  aws ec2 describe-instances --instances-ids
 8678  aws ec2 list-instances
 8679  aws ec2 describe-flow-logs
 8680  aws ec2 describe-flow-logs help
 8681  aws ec2 describe-instances \\n    --filters "Name=tag-key,Values=Owner"
 8682  aws ec2 describe-instances \\n    --query 'Reservations[*].Instances[*].{Instance:InstanceId,Subnet:SubnetId}' \\n    --output json
 8683  aws ec2 describe-instances \\n    --filters "Name=tag-key,Values=Owner"
 8684  aws ec2 describe-instances
 8685  aws ec2 describe-instances \\n    --query 'Reservations[*].Instances[*].{Instance:InstanceId,Instance:Tags}' \\n    --output json
 8686  aws ec2 describe-instances \\n    --query 'Reservations[*].Instances[*].{InstanceId,Tags}' \\n    --output json
 8687  aws ec2 describe-instances \\n    --query "Reservations[*].Instances[*].[InstanceId,Tags[*]]"\n    --output json
 8688  aws ec2 describe-instances \\n    --query "Reservations[*].Instances[*].[InstanceId,Tags[Name]]"\n    --output json
 8689  cd Téléchargements/awless-linux-amd64
 8690  l
 8691  mv awless ~/.local/bin
 8692  awless --help
 8693  awless -p jp-main-jdx
 8694  awless list instances --sort uptime --local
 8695  awless list users --format csv --columns name,created
 8696  awless switch jp-main-jdx
 8697  awless list users --format csv --columns name,created
 8698  export AWS_PROFILE=jp-main-jdx
 8699  awless list users --format csv --columns name,created
 8700  awless list instances
 8701  awless list instances -format csv
 8702  awless list instances --format csv
 8703  awless list instances --help
 8704  awless list instances -format csv | wc -l
 8705  wc
 8706  l
 8707  pwd
 8708  cd ..
 8709  l
 8710  awless list instances -format csv > instances.csv
 8711  awless list instances --format csv | wc -l
 8712  l
 8713  awless list instances --format csv | instances.csv
 8714  awless list instances --format csv > instances.csv
 8715  awless ls vpcs
 8716  awless ls subnets
 8717  awless ls subnets --format csv
 8718  awless ls subnets --format csv > subnets.csv
 8719  awless ls vpcs --format csv > vpcs.csv
 8720  awless ls enis --format csv
 8721  awless ls --help
 8722  awless ls networkinterfaces
 8723  awless ls networkinterfaces --format csv > enis.csv
 8724  l
 8725  cat vpcs.csv
 8726  cat subnets.csv
 8727  export AWS_PROFILE=jp-main-jdx
 8728  aws s3 ls
 8729  awless list instances
 8730  awless list instances --format csv
 8731  awless list subnets
 8732  awless list subnets --help
 8733  awless list subnets
 8734  awless list subnets --help
 8735  awless list subnets
 8736  awless list subnets --sort name
 8737  gst
 8738  gd
 8739  gst
 8740  gd
 8741  gst
 8742  git add .
 8743  git commit -m 'remove gitkeeps'
 8744  git push
 8745  awless list vpcs --sort name
 8746  gst
 8747  gd
 8748  git add .
 8749  git commit -m "set vpc adressing plan"
 8750  gst
 8751  git push
 8752  git add .
 8753  git commit -m "fix list"
 8754  git push
 8755  pip install csv2md
 8756  pip install csv2md --user
 8757  csv2md
 8758  cd Téléchargements
 8759  l
 8760  csv2md vpcs.csv
 8761  cd pCloudDrive/work/formations/Kube_formation_LVL1/
 8762  l
 8763  cat notes-j3.txt
 8764  vim notes-j3.txt
 8765  sshuttle -vr jerome.devoucoux@18.185.253.77 --dns 10.0.0.0/8
 8766  ssh admin@10.2.0.251
 8767  ssh admin@10.2.68.52
 8768  ssh admin@10.2.0.146
 8769  ssh admin@10.2.0.251
 8770  nomad version
 8771  cd Téléchargements
 8772  csv2md tmp.csv
 8773  gst
 8774  gp
 8775  gst
 8776  git log
 8777  gst
 8778  gd
 8779  git add .
 8780  git commit -m "update doc : network aws nodes"
 8781  git push
 8782  git add .
 8783  git commit -m "update doc : network aws nodes"
 8784  git push
 8785  gst
 8786  git add .
 8787  git commit -m "update doc : network aws nodes"
 8788  git push
 8789  gst
 8790  git add .
 8791  git commit -m "set aws versions"
 8792  gst
 8793  git push
 8794  gst
 8795  ip a
 8796  awless list vpcs --sort name
 8797  nomad version
 8798  htop
 8799  snap
 8800  snap list
 8801  ps aux | grep skype
 8802  sudo -i
 8803  vim pCloudDrive/notes/todo.txt
 8804  gp
 8805  gst
 8806  gp
 8807  gst
 8808  gd
 8809  git add .
 8810  git commit -m 'init post mortem'
 8811  gst
 8812  git push
 8813  gst
 8814  vim pCloudDrive/notes/todo.txt
 8815  gst
 8816  gp
 8817  gst
 8818  greset
 8819  gst
 8820  gp
 8821  greset
 8822  gst
 8823  gp
 8824  gst
 8825  gp
 8826  sudo -i
 8827  ps aux | grep calendar
 8828  sudo pkill -f calendar
 8829  ps aux | grep calendar
 8830  cat ~/.ssh/id_rsa.pub
 8831  sshuttle -vr jerome.devoucoux@18.185.253.77 --dns 10.0.0.0/8
 8832  ssh admin@10.2.2.21
 8833  gst
 8834  gd
 8835  git add .
 8836  git commit -m "set structure for visa report"
 8837  gst
 8838  git push
 8839  gp
 8840  git push
 8841  gst
 8842  gd
 8843  g
 8844  gd
 8845  git add .
 8846  git commit -m "set visa proposal"
 8847  git push
 8848  gst
 8849  git add .
 8850  git commit -m "document for visa"
 8851  git push
 8852  gst
 8853  gp
 8854  gst
 8855  gsgt
 8856  gst
 8857  gd
 8858  git add .
 8859  git commit -m "so sad"
 8860  git push
 8861  gst
 8862  gd
 8863  gst
 8864  gd
 8865  git add ?
 8866  git add .
 8867  git commit -m "update nodes"
 8868  git push
 8869  gst
 8870  gp
 8871  gst
 8872  sudo -i
 8873  gst
 8874  gp
 8875  export AWS_PROFILE=jp-main-jdx
 8876  aws s3 ls
 8877  echo $AWS_ACCESS_KEY_ID
 8878  echo $AWS_SECRET_ACCESS_KEY
 8879  docker network create terranet
 8880  docker run --name db \\n  -e POSTGRES_USER=gorm \\n  -e POSTGRES_DB=gorm \\n  -e POSTGRES_PASSWORD="testtest42" \\n   --net terranet \\n  --restart=always postgres -d
 8881  cd ..
 8882  l
 8883  docker run --name db \\n  -e POSTGRES_USER=gorm \\n  -e POSTGRES_DB=gorm \\n  -e POSTGRES_PASSWORD="<mypassword>" \\n   --net terranet \\n  --restart=always postgres -d
 8884  docker ps
 8885  docker stats
 8886  docker ps
 8887  docker stop -t0 db
 8888  docker rm db
 8889  docker ps
 8890  l
 8891  pwd
 8892  aws s3 ls
 8893  pw
 8894  pwd
 8895  l
 8896  pwd
 8897  aws s3 ls
 8898  gb
 8899  gp
 8900  git log
 8901  pwd
 8902  git log
 8903  gst
 8904  gp
 8905  git fetch && git checkout feature/update-k3s
 8906  git checkout master
 8907  git merge feature/update-k3s
 8908  git push
 8909  git log
 8910  gb
 8911  gst
 8912  gb
 8913  git checkout feature/ecr
 8914  gp
 8915  git merge master
 8916  gd
 8917  gst
 8918  gd
 8919  gst
 8920  gd
 8921  git add .
 8922  git commit -m "merge master"
 8923  git push
 8924  gst
 8925  gb
 8926  gst
 8927  aws s3 ls
 8928  ./infra-builder-terraform.sh --account jdwescaledrone-dev --destroy
 8929  gst
 8930  ./infra-builder-terraform.sh --account jdwescaledrone-dev --destroy
 8931  ./infra-builder-terraform.sh --account jdwescaledrone-dev --plan
 8932  gst
 8933  gb
 8934  git log
 8935  gst
 8936  git checkout 1d30aaedadcbaff6c16f22fab9ef471a13c1d41e
 8937  aws s3 ls
 8938  ./infra-builder-terraform.sh --account jdwescaledrone-dev --destroy
 8939  terraform --version
 8940  terraform init
 8941  ./infra-builder-terraform.sh --account jdwescaledrone-dev --destroy
 8942  ./infra-builder-terraform.sh --account jdwescaledrone-dev --layer 002-asg --plan
 8943  ./infra-builder-terraform.sh --account jdwescaledrone-dev --layer 002-asg --destroy
 8944  ./infra-builder-terraform.sh --account jdwescaledrone-dev --layer 001-vpc --destroy
 8945  aws s3 ls
 8946  ./infra-builder-terraform.sh --account jdwescaledrone-dev --layer 001-vpc --destroy
 8947  gst
 8948  greset
 8949  gst
 8950  git checkout master
 8951  gp
 8952  gst
 8953  aws s3 ls
 8954  gst
 8955  gp
 8956  git log
 8957  aws s3 ls
 8958  ./infra-builder-terraform.sh --account jdwescaledrone-dev --layer 001-vpc --plan
 8959  ./infra-builder-terraform.sh --account jdwescaledrone-dev --layer 001-vpc
 8960  gst
 8961  ./infra-builder-terraform.sh --account jdwescaledrone-dev --layer 002-vms --plan
 8962  gp
 8963  ./infra-builder-terraform.sh --account jdwescaledrone-dev --layer 002-vms --plan
 8964  ./infra-builder-terraform.sh --account jdwescaledrone-dev --layer 002-vms
 8965  ./infra-make-inventory.sh
 8966  ./infra-provisioning-base.sh
 8967  pip3 install requests --user
 8968  cd ./.local/lib/python3.7/site-packages
 8969  l
 8970  cd requests
 8971  l
 8972  vim hooks.py
 8973  vim
 8974  cd
 8975  cd dev/git/external
 8976  L
 8977  l
 8978  git clone git@github.com:psf/requests.git
 8979  cd requests
 8980  l
 8981  ping google.fr
 8982  ansible -m ping all
 8983  ./infra-provisioning-base.sh
 8984  pwd
 8985  l
 8986  cat pytest.ini
 8987  pytests
 8988  pytest
 8989  pip3 install pytest --user
 8990  git clone git@github.com:psf/requests.git
 8991  pytest
 8992  cat pytest.ini
 8993  cd ..
 8994  git clone https://github.com/gleitz/howdoi.git
 8995  cd howdoi
 8996  virtualenv -p python3 venv
 8997  source venv/bin/activate
 8998  cd howdoi
 8999  pip install --editable .
 9000  pip3 install --editable .
 9001  python test_howdoi.py
 9002  pip3 install --editable .
 9003  l
 9004  pip install --editable .
 9005  pip install .
 9006  cd dev/git/external
 9007  l
 9008  git clone git@github.com:timofurrer/maya.git
 9009  cd maya
 9010  pytest
 9011  pip3 install freezegun --user
 9012  pytest
 9013  pip3 install maya --user
 9014  pytest
 9015  pip3 install maya --user
 9016  pip3 uninstall maya --user
 9017  pip3 uninstall maya
 9018  gst
 9019  gp
 9020  ./infra-builder-terraform.sh --account jdwescaledrone-dev --layer 002-vms --destroy
 9021  pip3 install maya --user
 9022  ./infra-builder-terraform.sh --account jdwescaledrone-dev --layer 002-vms
 9023  pip3 install maya
 9024  pip install --upgrade pip
 9025  pip install --upgrade pip --user
 9026  pip3 install maya --user
 9027  sudo pip3 install maya
 9028  pip3 install --upgrade pip --user
 9029  sudo pip3 install --upgrade pip
 9030  cd ..
 9031  l
 9032  cd troposphere
 9033  gp
 9034  l
 9035  pytest
 9036  pip3 install troposphere --user
 9037  pytest
 9038  cd tests
 9039  pytest
 9040  cd ..
 9041  l
 9042  pytest
 9043  ./infra-make-inventory.sh
 9044  ./infra-provisioning-base.sh
 9045  cd ..
 9046  git clone git@github.com:zozzz/yapic.json.git
 9047  cd yapic.json
 9048  pytest
 9049  l
 9050  git submodule update --init --recursive
 9051  python3 -m pip install --upgrade pip setuptools pytest wheel\n
 9052  python3 -m pip install --upgrade pip setuptools pytest wheel --user\n
 9053  rm -rf pytest.py
 9054  cd 
 9055  cd dev/git/wescale/drone-base
 9056  l
 9057  ssh admin@34.243.135.14
 9058  ping 34.243.135.14
 9059  nslookup 34.243.135.14
 9060  ssh admin@34.255.199.142
 9061  ./infra-builder-terraform.sh --account jdwescaledrone-dev --layer 002-vms --destroy
 9062  cd ../howdoi
 9063  gst
 9064  gp
 9065  pip3 install flake8 --user
 9066  flake8 . --count --select=E901,E999,F821,F822,F823 --show-source --statistics
 9067  rm -rf venv
 9068  flake8 . --count --select=E901,E999,F821,F822,F823 --show-source --statistics
 9069  flake8 . --count --exit-zero --max-complexity=10 --statistics
 9070  nosetests
 9071  pip install -r requirements.txt
 9072  nosetests
 9073  sudo pip install -r requirements.txt
 9074  nosetests
 9075  pytest
 9076  ./infra-builder-terraform.sh --account jdwescaledrone-dev --layer 002-vms
 9077  ./infra-make-inventory.sh
 9078  ./infra-provisioning-base.sh
 9079  gst
 9080  gd
 9081  sshuttle -vr jerome.devoucoux@18.185.253.77 --dns 10.0.0.0/8
 9082  ssh admin@10.8.64.187
 9083  vim pCloudDrive/notes/todo.txt
 9084  gp
 9085  gst
 9086  gd
 9087  greset
 9088  gst
 9089  gp
 9090  gst
 9091  gp
 9092  export AWS_PROFILE=jp-main-jdx
 9093  aws ec2 describe-instances --query 'Reservations[*].Instances[*].NetworkInterfaces[*].PrivateIpAddresses[*].PrivateIpAddress' --output table --filter Name=network-interface.vpc-id,Values='vpc-0ef35882ea9f70c70' --filter Name=tag:Name,Values='Cluster prod'
 9094  aws ec2 describe-instances --query 'Reservations[*].Instances[*].NetworkInterfaces[*].PrivateIpAddresses[*].PrivateIpAddress' --output table --filter Name=network-interface.vpc-id,Values='vpc-0ef35882ea9f70c70' --filter Name=tag:Name,Values='Cluster prod slave'
 9095  aws ec2 describe-instances --query 'Reservations[*].Instances[*].NetworkInterfaces[*].PrivateIpAddresses[*].PrivateIpAddress' --output table --filter Name=network-interface.vpc-id,Values='vpc-0ef35882ea9f70c70' --filter Name=tag:Name,Values='Cluster prod backend'
 9096  aws ec2 describe-instances --query 'Reservations[*].Instances[*].NetworkInterfaces[*].PrivateIpAddresses[*].PrivateIpAddress' --output table --filter Name=network-interface.vpc-id,Values='vpc-0ef35882ea9f70c70' --filter Name=tag:Name,Values='Proxy*'
 9097  aws ec2 describe-instances --query 'Reservations[*].Instances[*].NetworkInterfaces[*].PrivateIpAddresses[*].PrivateIpAddress' --output table --filter Name=network-interface.vpc-id,Values='vpc-0ef35882ea9f70c70' --filter Name=tag:Name,Values='Proxy'
 9098  aws ec2 describe-instances --query 'Reservations[*].Instances[*].NetworkInterfaces[*].PrivateIpAddresses[*].PrivateIpAddress' --output table --filter Name=network-interface.vpc-id,Values='vpc-0ef35882ea9f70c70' --filter Name=tag:Name,Values='proxy-*'
 9099  gst
 9100  l
 9101  htop
 9102  gst
 9103  vim pCloudDrive/notes/todo.txt
 9104  gst
 9105  gd
 9106  gst
 9107  sshuttle -vr jerome.devoucoux@18.185.253.77 --dns 10.0.0.0/8
 9108  gst
 9109  tmux
 9110  ssh admin@10.2.64.179
 9111  sshuttle -vr jerome.devoucoux@18.185.253.77 --dns 10.0.0.0/8
 9112  tmux
 9113  ssh admin@10.2.64.179
 9114  export AWS_PROFILE=jp-main-jdx
 9115  aws ec2 describe-instances --query 'Reservations[*].Instances[*].NetworkInterfaces[*].PrivateIpAddresses[*].PrivateIpAddress' --output table --filter Name=network-interface.vpc-id,Values='vpc-0ef35882ea9f70c70' --filter Name=tag:Name,Values='Cluster dev slave'
 9116  aws ec2 describe-instances --query 'Reservations[*].Instances[*].NetworkInterfaces[*].PrivateIpAddresses[*].PrivateIpAddress' --output table --filter Name=network-interface.vpc-id,Values='vpc-0ef35882ea9f70c70' --filter Name=tag:Name,Values='Cluster dev backend'
 9117  gst
 9118  ssh admin@10.5.64.138\n
 9119  ssh admin@10.5.2.239
 9120  ssh admin@10.5.64.138
 9121  ssh admin@10.2.64.179
 9122  ssh admin@10.2.65.179
 9123  ssh admin@10.2.66.99
 9124  tmux
 9125  aws ec2 describe-instances --query 'Reservations[*].Instances[*].NetworkInterfaces[*].PrivateIpAddresses[*].PrivateIpAddress' --output table --filter Name=network-interface.vpc-id,Values='vpc-0d29a9b61e0f58fe3' --filter Name=tag:Name,Values='Cluster dev slave'~
 9126  aws ec2 describe-instances --query 'Reservations[*].Instances[*].NetworkInterfaces[*].PrivateIpAddresses[*].PrivateIpAddress' --output table --filter Name=network-interface.vpc-id,Values='vpc-0d29a9b61e0f58fe3' --filter Name=tag:Name,Values='Cluster dev slave'
 9127  export AWS_PROFILE=jp-main-jdx
 9128  aws ec2 describe-instances --query 'Reservations[*].Instances[*].NetworkInterfaces[*].PrivateIpAddresses[*].PrivateIpAddress' --output table --filter Name=network-interface.vpc-id,Values='vpc-0d29a9b61e0f58fe3' --filter Name=tag:Name,Values='Cluster dev slave'
 9129  ssh admin@10.2.0.146
 9130  ssh admin@10.2.0.62
 9131  ssh admin@10.2.1.218
 9132  ssh admin@10.2.1.101
 9133  ssh admin@10.2.2.152
 9134  ssh admin@10.2.2.21
 9135  sshuttle -vr jerome.devoucoux@18.185.253.77 --dns 10.0.0.0/8
 9136  cd dev/git
 9137  l
 9138  cd johnpaul
 9139  grep -nri jdevoucoux .
 9140  vim ./cluster-nomad/cluster/nomad/logs-proxy.nomad
 9141  ssh admin@10.5.0.25
 9142  tmux
 9143  ssh admin@10.2.64.179
 9144  ssh admin@10.2.65.179
 9145  ssh admin@10.2.66.99
 9146  ssh admin@10.2.2.21
 9147  ssh admin@10.2.1.101
 9148  ssh admin@10.2.1.218
 9149  ssh admin@10.2.0.146
 9150  ssh admin@10.2.2.152
 9151  ssh admin@10.2.0.62
 9152  tmux
 9153  ssh admin@10.2.68.91
 9154  ssh admin@10.2.69.71
 9155  ssh admin@10.2.68.52
 9156  ssh admin@10.2.69.169
 9157  ssh admin@10.2.67.19
 9158  ssh admin@10.2.68.91
 9159  ssh admin@10.2.69.71
 9160  ssh admin@10.2.68.52
 9161  ssh admin@10.2.69.169
 9162  ssh admin@10.2.67.19
 9163  gst
 9164  gd
 9165  git add .
 9166  cd
 9167  nomad status
 9168  nomad version
 9169  cd Téléchargements
 9170  git commit -m "post mortem certif"
 9171  git push
 9172  export NOMAD_ADDR=http://10.5.2.31:4646
 9173  nomad status
 9174  cd
 9175  cd Téléchargements/logproxy
 9176  l
 9177  export NOMAD_ADDR=http://10.2.1.203:4646
 9178  nomad status
 9179  nomad status logs-proxy
 9180  nomad run logproxy-dev.nomad
 9181  nomad status logs-proxy
 9182  nomad status
 9183  nomad node-status
 9184  vim logproxy-staging.nomad
 9185  export NOMAD_ADDR=http://10.5.2.31:4646
 9186  nomad node-status
 9187  vim logproxy-dev.nomad
 9188  nomad node-status
 9189  nomad status logs-status
 9190  nomad status log-status
 9191  nomad status
 9192  nomad status logs-proxy
 9193  nomad run logproxy-staging.nomad
 9194  nomad status logs-proxy
 9195  nomad node-status
 9196  export NOMAD_ADDR=http://10.2.1.203:4646
 9197  nomad node-status
 9198  nomad run logproxy-dev.nomad
 9199  nomad status logs-proxy
 9200  nomad logs eca5bb86
 9201  nomad status logs-proxy
 9202  nomad node-status
 9203  export NOMAD_ADDR=http://10.5.2.31:4646
 9204  nomad node-status
 9205  nomad run logproxy-staging.nomad
 9206  nomad status logs-proxy
 9207  cp logproxy-staging.nomad logproxy-prod.nomad
 9208  export NOMAD_ADDR=http://10.2.1.203:4646
 9209  nomad status
 9210  nomad status api-johnpaul
 9211  nomad job eval api-johnpaul
 9212  nomad status api-johnpaul
 9213  export NOMAD_ADDR=http://10.8.1.129:4646
 9214  nomad status
 9215  nomad status logs-proxy
 9216  nomad status
 9217  nomad status logproxy
 9218  nomad node status
 9219  nomad status logs-proxy
 9220  vim logproxy-prod.nomad
 9221  nomad status logs-proxy
 9222  nomad status
 9223  nomad status logs-proxy
 9224  nomad status
 9225  nomad status logs-proxy
 9226  nomad status
 9227  nomad node status
 9228  vim logproxy-prod.nomad
 9229  nomad run logproxy-prod.nomad
 9230  nomad status logs-proxy
 9231  watch nomad status logs-proxy
 9232  cat ~/pCloudDrive/notes/tasks/johnpaul/tips.txt
 9233  export NOMAD_ADDR=http://10.8.1.129:4646
 9234  nomad status
 9235  nomad node status
 9236  cat ~/pCloudDrive/notes/tasks/johnpaul/tips.txt
 9237  vim logproxy-prod.nomad
 9238  gst
 9239  gp
 9240  git log
 9241  ps aux | grep tmux
 9242  kill 10801
 9243  ps aux | grep tmux
 9244  export NOMAD_ADDR=http://10.2.1.203:4646
 9245  nomad status
 9246  nomad status auth-server
 9247  nomad node status
 9248  nomad node status | grep 84f79738
 9249  ssh admin@10.2.68.91
 9250  nomad status auth-server
 9251  watch nomad status auth-server
 9252  nomad node status
 9253  export NOMAD_ADDR=http://10.2.1.203:4646
 9254  nomad node status
 9255  nomad logs d68807c5
 9256  nomad logs auth-server d68807c5
 9257  nomad node status
 9258  export NOMAD_ADDR=http://10.2.1.203:4646
 9259  nomad node status
 9260  nomad status auth-server
 9261  ssh admin@10.2.68.91
 9262  ssh admin@10.8.1.64
 9263  cd Téléchargements/logproxy
 9264  vim logproxy-dev.nomad
 9265  sudo -i
 9266  gst
 9267  gp
 9268  ipa 
 9269  ip a
 9270  aws s3 ls
 9271  ./infra-builder-terraform.sh --account jdwescaledrone-dev --layer 002-vms --destroy
 9272  ./infra-builder-terraform.sh --account jdwescaledrone-dev --layer 001-vpc --destroy
 9273  gst
 9274  gd
 9275  git add .
 9276  git commit -m "allow different size for masters"
 9277  git push
 9278  gst
 9279  l
 9280  gst
 9281  git log
 9282  git checkout 1d30aaedadcbaff6c16f22fab9ef471a13c1d41e
 9283  gst
 9284  gd
 9285  aws s3 ls
 9286  ./infra-builder-terraform.sh --account jdwescaledrone-dev --layer 001-vpc
 9287  ./infra-builder-terraform.sh --account jdwescaledrone-dev --layer 002-asg
 9288  ./infra-make-inventory.sh
 9289  ansible -m ping all
 9290  ./infra-provisioning-base.sh
 9291  ./infra-provisioning-monitoring.sh
 9292  drone user add prometheus --machine
 9293  export DRONE_SERVER=https://drone.jdwescaledrone-dev.jdwscaws.jdxlabs.com\nexport DRONE_TOKEN=C0NlSndIuLRww5USvjpVlopWHlRuMLzF
 9294  drone user add prometheus --machine
 9295  aws s3 ls
 9296  ./infra-provisioning-monitoring.sh rQlPOKQV81xBrzJf0Um5H4cvMCxgJb7q
 9297  gst
 9298  greset
 9299  gp
 9300  gst
 9301  gp
 9302  gb
 9303  git checkout master
 9304  gst
 9305  gp
 9306  git checkout 1d30aaedadcbaff6c16f22fab9ef471a13c1d41e
 9307  gst
 9308  aws s3 ls
 9309  ./infra-builder-terraform.sh --account jdwescaledrone-dev --destroy
 9310  gst
 9311  git log
 9312  ./infra-builder-terraform.sh --account jdwescaledrone-dev --layer 002-asg --destroy
 9313  ./infra-builder-terraform.sh --account jdwescaledrone-dev --layer 001-vpc --destroy
 9314  gst
 9315  git checkout master
 9316  gst
 9317  gp
 9318  gst
 9319  ./infra-builder-terraform.sh --account jdwescaledrone-dev --layer 001-vpc --destroy
 9320  ./infra-builder-terraform.sh --account jdwescaledrone-dev --layer 001-vpc
 9321  aws s3 ls
 9322  ./infra-make-inventory.sh
 9323  ./infra-builder-terraform.sh --account jdwescaledrone-dev --layer 002-vms
 9324  cd dev/git/johnpaul
 9325  git clone git@git.infra.johnpaultech.com:johnpaultech/infra/aws-lambda-instances-scheduler.git
 9326  l
 9327  cd aws-lambda-instances-scheduler
 9328  l
 9329  cd ..
 9330  l
 9331  cd aws-lambda-instances-scheduler
 9332  cat README
 9333  cat README\ copy.md
 9334  cd es-cleaner
 9335  gp
 9336  gst
 9337  greset
 9338  gst
 9339  pwd
 9340  gst
 9341  export AWS_PROFILE=jp-main-jdx
 9342  python instances-scheduler.py
 9343  aws s3 ls
 9344  python ec2-scheduler.py
 9345  gst
 9346  git add .
 9347  gst
 9348  cd ../
 9349  l
 9350  mv aws-lambda-instances-scheduler aws-ec2-scheduler
 9351  l
 9352  gst
 9353  git add .
 9354  git commit -m "set basis"
 9355  git push
 9356  gst
 9357  git log
 9358  vim .git/config
 9359  gst
 9360  gp
 9361  vim .git/config
 9362  gp
 9363  gst
 9364  export AWS_PROFILE=jp-main-jdx
 9365  aws s3 ls
 9366  terraform version
 9367  terraform init
 9368  touch .gitignore
 9369  l
 9370  terraform workspace select main
 9371  terraform workspace list
 9372  terraform plan
 9373  touch provider.tf
 9374  terraform plan
 9375  terraform apply
 9376  terraform plan
 9377  terraform apply
 9378  terraform taint
 9379  terraform taint -help
 9380  terraform taint aws_lambda_function.ec2_scheduler
 9381  terraform plan
 9382  python ec2-scheduler.py
 9383  gst
 9384  gd
 9385  git add .
 9386  git commit -m "yolo"
 9387  git push
 9388  gst
 9389  terraform plan
 9390  terraform apply
 9391  it add .
 9392  git commit -m "update readme"
 9393  git add .
 9394  git commit -m "update readme"
 9395  git push
 9396  gst
 9397  git log
 9398  gp
 9399  git log
 9400  python ec2-scheduler.py
 9401  gst
 9402  gd
 9403  gst
 9404  gd
 9405  aws s3 ls
 9406  terraform taint aws_lambda_function.ec2_scheduler
 9407  tfenv list
 9408  tfenv --help
 9409  tfenv install 0.12.16
 9410  terraform taint aws_lambda_function.ec2_scheduler
 9411  terraform apply
 9412  gst
 9413  aws s3 ls
 9414  l
 9415  aws s3 ls
 9416  gst
 9417  l
 9418  aws s3 ls
 9419  ./infra-builder-terraform.sh --account jdwescaledrone-dev --layer 001-vpc
 9420  ./infra-builder-terraform.sh --account jdwescaledrone-dev --layer 002-vms
 9421  ./infra-make-inventory.sh
 9422  ansible -m ping all
 9423  ./infra-provisioning-base.sh
 9424  drone user add prometheus --machine
 9425  export DRONE_SERVER=https://drone.jdwescaledrone-dev.jdwscaws.jdxlabs.com\nexport DRONE_TOKEN=Rsfyz9FyMFV9Vh5Pz6lvsVyTXKacNplc
 9426  drone user add prometheus --machine
 9427  ./infra-provisioning-base.sh
 9428  drone user add prometheus --machine
 9429  gst
 9430  export AWS_PROFILE=jp-main-jdx
 9431  l
 9432  terraform version
 9433  cd Téléchargements
 9434  l
 9435  ./infra-builder-terraform.sh --account jdwescaledrone-dev --layer 002-vms --destroy
 9436  terrafom version
 9437  terraform version
 9438  ./infra-builder-terraform.sh --account jdwescaledrone-dev --layer 002-vms --plan
 9439  aws s3 ls
 9440  terraform version
 9441  ./infra-builder-terraform.sh --account jdwescaledrone-dev --layer 002-vms --plan
 9442  terraform help
 9443  terraform 0.12upgrade help
 9444  terraform 0.12upgrade -- help
 9445  terraform 0.12upgrade --help
 9446  terraform 0.12upgrade ./terraform -yes
 9447  terraform 0.12upgrade ./terraform -force
 9448  terraform 0.12upgrade ./terraform
 9449  terraform 0.12upgrade ./terraform/layers
 9450  terraform 0.12upgrade ./terraform/layers/001-main-aws
 9451  terraform 0.12upgrade ./terraform/layers/001-main-aws/001-vpc
 9452  terraform 0.12upgrade ./terraform/layers/001-main-aws/001-vpc -force
 9453  terraform 0.12upgrade -force -yes ./terraform/layers/001-main-aws/001-vpc
 9454  terraform 0.12upgrade -force -yes ./terraform/layers/001-main-aws/002-vms
 9455  terraform 0.12upgrade ./terraform/layers/001-main-aws/002-vms
 9456  gst
 9457  ./infra-builder-terraform.sh --account jdwescaledrone-dev --layer 001-vpc --plan
 9458  ./infra-builder-terraform.sh --account jdwescaledrone-dev --layer 002-vms --plan
 9459  git checkout terraform/layers/001-main-aws/002-vms/main.tf
 9460  gst
 9461  ./infra-builder-terraform.sh --account jdwescaledrone-dev --layer 002-vms --plan
 9462  ./infra-builder-terraform.sh --account jdwescaledrone-dev --layer 002-vms
 9463  aws s3 ls
 9464  ./infra-make-inventory.sh
 9465  ./infra-provisioning-base.sh
 9466  tfenv list
 9467  wget https://releases.hashicorp.com/terraform/0.12.16/terraform_0.12.16_linux_amd64.zip
 9468  wget https://releases.hashicorp.com/terraform/0.11.14/terraform_0.11.14_linux_amd64.zip
 9469  l
 9470  rm terraform_0.12.16_linux_amd64.zip
 9471  l
 9472  unzip terraform_0.11.14_linux_amd64.zip
 9473  l
 9474  ./infra-make-inventory.sh
 9475  ansible -m ping all
 9476  ./infra-provisioning-base.sh
 9477  mv terraform ~/.local/bin/terraform011
 9478  terraform version
 9479  terraform011 version
 9480  gst
 9481  aws s3 ls
 9482  terraform011 init
 9483  terraform011 plan
 9484  export DRONE_SERVER=https://drone.jdwescaledrone-dev.jdwscaws.jdxlabs.com\nexport DRONE_TOKEN=rrN8IXiCDS5dpdifgUBFLEihIiqAzqti
 9485  drone info
 9486  drone user add prometheus --machine
 9487  ./infra-provisioning-monitoring.sh 3osLdOZ6NShMz08J5NfEiT4idjK9V2zf
 9488  l
 9489  rm terraform_0.11.14_linux_amd64.zip
 9490  l
 9491  cd ~/dev/git/wescale/drone-base
 9492  l
 9493  htop
 9494  docker ps
 9495  ssh -F ./ssh.cfg -o ProxyCommand="ssh -W %h:%p -F ./ssh.cfg 52.17.97.242" admin@11.0.5.155
 9496  ./infra-provisioning-monitoring.sh 3osLdOZ6NShMz08J5NfEiT4idjK9V2zf
 9497  w
 9498  screenfetch
 9499  bash
 9500  cd dev/scripts
 9501  cd ../git
 9502  grep -nri devopstest .
 9503  grep -nri "import unittest" .
 9504  vim ./external/howdoi/test_howdoi.py
 9505  cd external/howdoi
 9506  l
 9507  cat .travis.yml
 9508  pip install flake8
 9509  flake8 . --count --select=E901,E999,F821,F822,F823 --show-source --statistics
 9510  flake8 . --count --exit-zero --max-complexity=10 --statistics
 9511  pytest
 9512  vim pCloudDrive/notes/todo.txt
 9513  gs
 9514  gst
 9515  gp
 9516  touch conf.yml
 9517  gst
 9518  gd
 9519  python ec2-scheduler.py
 9520  gp
 9521  gst
 9522  gd
 9523  gp
 9524  export AWS_PROFILE=jp-main-jdx
 9525  terraform plan
 9526  terraform apply
 9527  terraform apply help
 9528  l
 9529  terraform plan -out tmp
 9530  terraform apply tmp
 9531  l
 9532  cat tmp
 9533  l
 9534  rm tmp
 9535  l
 9536  gst
 9537  python ec2-scheduler.py
 9538  aws s3 ls
 9539  history | grep AWS_PROFILE
 9540  python ec2-scheduler.py
 9541  terraform taint aws_lambda_function.ec2_scheduler
 9542  terraform plan -out tmp.plan
 9543  terraform apply tmp.plan
 9544  gst
 9545  gd
 9546  git add .
 9547  git commit -m "update with conf on s3"
 9548  git push
 9549  mkdir tmp
 9550  cd tmp
 9551  pip install yamllint .
 9552  pwd
 9553  l
 9554  pip install yamllint ./
 9555  pwd
 9556  cd ..
 9557  l
 9558  pwd
 9559  export AWS_PROFILE=jp-main-jdx
 9560  aws s3 ls
 9561  l
 9562  tree
 9563  aws s3 ls
 9564  pipenv --python 3.7
 9565  pip install pipenv --user
 9566  pipenv --python 3.7
 9567  pipenv shell
 9568  venv --help
 9569  virtualenv --help
 9570  pipenv shell
 9571  pip install yamllint -t ./ec2-scheduler/lambda_layers/python/lib/python3.7/site-packages/.
 9572  gst
 9573  aws s3 ls
 9574  terraform plan -out tmp.plan
 9575  terraform plan -out tmp.plan -vvv
 9576  terraform plan -out tmp.plan -verbose
 9577  terraform plan -out tmp.plan -help
 9578  aws s3 ls
 9579  export AWS_PROFILE=jp-main-jdx
 9580  aws s3 ls
 9581  terraform plan -out tmp.plan -help
 9582  terraform plan -out tmp.plan
 9583  terraform apply tmp.plan
 9584  terraform plan -out tmp.plan
 9585  terraform apply tmp.plan
 9586  terraform plan -out tmp.plan
 9587  terraform apply tmp.plan
 9588  gst
 9589  gd
 9590  git add .
 9591  git commit -m "add lambda layers for libs"
 9592  gst
 9593  git push
 9594  gst
 9595  gitk lambda.tf
 9596  terraform apply tmp.plan
 9597  terraform plan -out tmp.plan
 9598  terraform apply tmp.plan
 9599  gst
 9600  gd
 9601  git add .
 9602  git commit -m "add env vars"
 9603  git push
 9604  gst
 9605  grep -nri "import log" .
 9606  python ec2-scheduler
 9607  python ec2-scheduler/main.py 
 9608  sshuttle -vr jerome.devoucoux@18.185.253.77 --dns 10.0.0.0/8
 9609  ssh admin@10.2.69.169
 9610  ssh admin@10.2.1.101
 9611  ssh admin@10.2.68.91
 9612  ssh admin@10.2.0.146
 9613  ssh admin@10.2.2.152
 9614  python ec2-scheduler/main.py
 9615  l
 9616  pip install pipenv --user\npipenv --python 3.7\npipenv shell\nmkdir -p ./ec2-scheduler/lambda_layers\npip install yamllint -t ./ec2-scheduler/lambda_layers/python/lib/python3.7/site-packages/.
 9617  l
 9618  terraform taint aws_lambda_function.ec2_scheduler
 9619  terraform plan -out tmp.plan
 9620  terraform apply tmp.plan
 9621  terraform taint aws_lambda_function.ec2_scheduler\n\nterraform plan -out tmp.plan\nterraform apply tmp.plan
 9622  export AWS_PROFILE=jp-main-jdx
 9623  aws ec2 describe-instances --query 'Reservations[*].Instances[*].NetworkInterfaces[*].PrivateIpAddresses[*].PrivateIpAddress' --output table --filter Name=tag:Name,Values='msa-emea-matillion_server'
 9624  ping google.fr
 9625  aws ec2 describe-instances --query 'Reservations[*].Instances[*].NetworkInterfaces[*].PrivateIpAddresses[*].PrivateIpAddress' --output table --filter Name=tag:Name,Values='msa-emea-matillion_server'
 9626  aws ec2 describe-instances --help
 9627  aws ec2 describe-instances help
 9628  aws ec2 describe-instances --query 'Reservations[*].Instances[*].NetworkInterfaces[*].PrivateIpAddresses[*].PrivateIpAddress' --output table --filter Name=tag:Name,Values='msa-emea-matillion_server' --region eu-central-1
 9629  aws ec2 help
 9630  aws ec2 start-instances hlp
 9631  aws ec2 start-instances help
 9632  aws ec2 start-instances --instance-ids i-06fbc560208e3084b --region eu-central-1
 9633  gst
 9634  gd
 9635  gst
 9636  gd
 9637  gst
 9638  gd
 9639  git add .
 9640  git commit -m "update config"
 9641  git push
 9642  gst
 9643  export AWS_PROFILE=jp-main-jdx
 9644  export BUCKET_NAME=jp-ec2-scheduler-config
 9645  export BUCKET_REGION=eu-central-1
 9646  export BUCKET_CONFIG_FILENAME=ec2-scheduler-config.yml
 9647  python ec2-scheduler/main.py
 9648  vim
 9649  python ec2-scheduler/main.py
 9650  gst
 9651  terraform taint aws_lambda_function.ec2_scheduler\n\nterraform plan -out tmp.plan\nterraform apply tmp.plan
 9652  python ec2-scheduler/main.py
 9653  python
 9654  python ec2-scheduler/main.py
 9655  gst
 9656  gd
 9657  gst
 9658  gd
 9659  gst
 9660  gd
 9661  git add .
 9662  git commit -m "restart hours"
 9663  git commit --amend
 9664  git push
 9665  gst
 9666  git add .
 9667  git commit -m "remove pipfile"
 9668  git push
 9669  gst
 9670  cd ./ec2-scheduler\n
 9671  pipenv --python 3.7\npipenv shell\nmkdir lambda_layers\npip install yamllint -t lambda_layers/python/lib/python3.7/site-packages/.
 9672  gst
 9673  git add .
 9674  gst
 9675  cd ..
 9676  git add .
 9677  git commit -m "update lambda create"
 9678  git push
 9679  terraform taint aws_lambda_function.ec2_scheduler\n\nterraform plan -out tmp.plan\nterraform apply tmp.plan
 9680  export AWS_PROFILE=jp-main-jdx
 9681  terraform taint aws_lambda_function.ec2_scheduler\n\nterraform plan -out tmp.plan\nterraform apply tmp.plan
 9682  gst
 9683  gd
 9684  git add .
 9685  git commit -m "update zip"
 9686  git push
 9687  python 
 9688  gst
 9689  terraform plan -out tmp.plan
 9690  terraform apply tmp.plan
 9691  terraform plan -out tmp.plan
 9692  terraform apply tmp.plan
 9693  gst
 9694  gd
 9695  git add .
 9696  git commit -m "update config"
 9697  git push
 9698  gst
 9699  aws s3 ls
 9700  terraform destroy
 9701  gst
 9702  gp
 9703  git log
 9704  gst
 9705  df -h
 9706  ps aux | grep chess
 9707  ps aux | grep moni
 9708  htop
 9709  sudo -i
 9710  vim pCloudDrive/notes/todo.txt
 9711  sudo -i
 9712  htop
 9713  ping google.fr
 9714  vim pCloudDrive/notes/todo.txt
 9715  cd Téléchargements
 9716  l
 9717  cd logproxy
 9718  l
 9719  vim logproxy-dev.nomad
 9720  l
 9721  cd
 9722  sshuttle -vr jerome.devoucoux@18.185.253.77 --dns 10.0.0.0/8
 9723  vim logproxy-dev.nomad
 9724  export NOMAD_ADDR=http://10.2.1.203:4646
 9725  nomad status
 9726  ssh admin@10.2.1.203
 9727  sshuttle -vr jerome.devoucoux@18.185.253.77 --dns 10.0.0.0/8
 9728  ping google.fr
 9729  ssh admin@10.2.1.203
 9730  nomad status
 9731  nomad node-status
 9732  vim logproxy-dev.nomad
 9733  nomad node-status
 9734  nomad status
 9735  nomad status logs-proxy
 9736  nomad run logproxy-dev.nomad
 9737  nomad status logs-proxy
 9738  watch nomad status logs-proxy
 9739  nomad status logs-proxy
 9740  vim logproxy-dev.nomad
 9741  nomad run logproxy-dev.nomad
 9742  nomad status logs-proxy
 9743  vim logproxy-dev.nomad
 9744  nomad run logproxy-dev.nomad
 9745  nomad status logs-proxy
 9746  cd dev/git/johnpaul/documentation
 9747  gp
 9748  vim Support/Incidents/2019-11-18_aws_post-mortem-ssl-certs-squid.md
 9749  git checkout feature/roadmap
 9750  git checkout -b feature/roadmap
 9751  git push
 9752  git push --set-upstream origin feature/roadmap
 9753  gst
 9754  gd
 9755  git checkout master
 9756  gst
 9757  git add .
 9758  gst
 9759  git commit -m "fix markdown"
 9760  git push
 9761  git checkout feature/roadmap
 9762  git merge master
 9763  git push
 9764  gst
 9765  gb
 9766  gst
 9767  gd
 9768  gst
 9769  gd
 9770  gst
 9771  gp
 9772  gb
 9773  gst
 9774  l
 9775  pwd
 9776  l
 9777  gst
 9778  gd
 9779  git add .
 9780  git commit -m "init roadmap"
 9781  git push
 9782  gst
 9783  git checkout master
 9784  gp
 9785  git merge feature/roadmap
 9786  gst
 9787  git push
 9788  gst
 9789  git checkout feature/roadmap
 9790  gst
 9791  tree
 9792  gst
 9793  gb
 9794  git checkout refacto
 9795  tree
 9796  gst
 9797  gd
 9798  git add .
 9799  gst
 9800  git commit -m "roadmap proposal"
 9801  gst
 9802  git push
 9803  gst
 9804  gd
 9805  git add .
 9806  gst
 9807  git commit -m "add gitlab"
 9808  git push
 9809  vim pCloudDrive/notes/todo.txt
 9810  gp
 9811  git log
 9812  gp
 9813  gst
 9814  gp
 9815  gst
 9816  gd
 9817  cd Téléchargements
 9818  l
 9819  cd logproxy
 9820  l
 9821  cat logproxy-dev.nomad
 9822  diff logproxy-dev.nomad ~/dev/git/johnpaul/aws-base/artefacts/logproxy-dev.nomad
 9823  cat logproxy-dev.nomad
 9824  gst
 9825  gd
 9826  git add .
 9827  git commit -m "add user for accesses"
 9828  gst
 9829  git push
 9830  gst
 9831  cd artefacts
 9832  sshuttle -vr jerome.devoucoux@18.185.253.77 --dns 10.0.0.0/8
 9833  export NOMAD_ADDR=http://10.2.1.203:4646
 9834  nomad node-status
 9835  nomad run logproxy-dev.nomad
 9836  nomad status logs-proxy
 9837  gst
 9838  gp
 9839  l
 9840  cat logproxy-staging.nomad
 9841  cat logproxy-prod.nomad
 9842  gst
 9843  gd
 9844  git add .
 9845  git commit -m "add envs logproxy"
 9846  git push
 9847  gst
 9848  gp
 9849  export NOMAD_ADDR=http://10.5.2.31:4646
 9850  nomad node-status
 9851  gst
 9852  nomad run logproxy-staging.nomad
 9853  nomad status logs-proxy
 9854  export NOMAD_ADDR=http://10.8.1.129:4646
 9855  nomad node-status
 9856  nomad run logproxy-prod.nomad
 9857  nomad status logs-proxy
 9858  gst
 9859  l
 9860  d ..
 9861  rm -rf logproxy-
 9862  cd ..
 9863  l
 9864  rm -rf logproxy
 9865  l
 9866  gst
 9867  cd ..
 9868  gst
 9869  gp
 9870  gst
 9871  gd
 9872  gst
 9873  gd
 9874  git add .
 9875  git commit -m "add missing things"
 9876  git push
 9877  gst
 9878  git add .
 9879  git commit -m "remove duplicate"
 9880  git push
 9881  gst
 9882  gd
 9883  git add .
 9884  git commit -m "set final goals"
 9885  git push
 9886  gst
 9887  gd
 9888  git add .
 9889  git commit -m "final strat"
 9890  git push
 9891  gst
 9892  gd
 9893  git add .
 9894  gst
 9895  git commit -m "and destroy"
 9896  git push
 9897  gst
 9898  gp
 9899  gst
 9900  git checkout master
 9901  gst
 9902  gp
 9903  cd Téléchargements
 9904  l
 9905  mkdir tests_terraboard
 9906  cd tests_terraboard
 9907  l
 9908  tmux
 9909  vim ~/.aws/credentials
 9910  export AWS_PROFILE=jp-sandbox-jdx
 9911  aws s3 ls
 9912  touch launch_sbx.sh
 9913  vim launch_sbx.sh
 9914  cp launch_sbx.sh launch_main.sh
 9915  vim launch_sbx.sh
 9916  gst
 9917  gd
 9918  git add .
 9919  git commit -m "add guidelines"
 9920  git push
 9921  gst
 9922  gp
 9923  vim launch_main.sh
 9924  gst
 9925  gd
 9926  git add ?
 9927  git add .
 9928  gst
 9929  git commit -m "dont forget the region"
 9930  git push
 9931  gst
 9932  git log
 9933  gst
 9934  chmod +x launch_*
 9935  l
 9936  export AWS_PROFILE=jp-sandbox-jdx
 9937  aws s3 ls
 9938  ./launch_sbx.sh
 9939  docker ps
 9940  l
 9941  docker ps
 9942  docker stop -t0 bd45949439cd && docker rm bd45949439cd
 9943  docker ps
 9944  vim launch_main.sh
 9945  ./launch_main.sh
 9946  gst
 9947  gd
 9948  git add .
 9949  git commit -m "add pci-dss"
 9950  git push
 9951  gst
 9952  gd
 9953  git add .
 9954  git commit -m "consul connect"
 9955  git push
 9956  git add .
 9957  git commit -m "updates"
 9958  git push
 9959  git commit -am "updates"
 9960  git push
 9961  gst
 9962  gd
 9963  git add .
 9964  git commit -m "migration process"
 9965  git push
 9966  git commit -am "migration process"
 9967  git push
 9968  git commit -am "migration process"
 9969  git push
 9970  gst
 9971  vim launch_main.sh
 9972  l
 9973  vim launch_main.sh
 9974  cat launch_main.sh
 9975  docker run -p 8080:8080 \\n -e AWS_REGION="eu-central-1" \\n -e AWS_ACCESS_KEY_ID="${AWS_ACCESS_KEY_ID}" \\n -e AWS_SECRET_ACCESS_KEY="${AWS_SECRET_ACCESS_KEY}" \\n -e AWS_BUCKET="jp-terraform-states" \\n -e AWS_DYNAMODB_TABLE="johnpaul-tfstates-lock" \\n -e DB_PASSWORD="k56TaBMY3H6W" \\n --net terranet \\n camptocamp/terraboard:latest
 9976  gst
 9977  docker ps
 9978  docker network ls
 9979  docker network rm bf07c764b37c
 9980  docker network ls
 9981  docker ps
 9982  docker stop -t0 db && docker rm db
 9983  docker ps
 9984  docker ps -a
 9985  docker network create terranet
 9986  docker network ls
 9987  gst
 9988  gd
 9989  gst
 9990  gd
 9991  gst
 9992  gd
 9993  git add .
 9994  gst
 9995  git commit -m "update"
 9996  gst
 9997  git commit --amend
 9998  gst
 9999  git push
10000  docker ps
10001  gp
10002  aws s3 ls
10003  l
10004  pwd
10005  l
10006  ansible -m ping all
10007  l
10008  cd dev/git
10009  l
10010  cd wescale
10011  git clone git@github.com:WeScale/drone-pipeline-example.git
10012  gst
10013  cd drone-pipeline-example
10014  l
10015  cp ../drone-with-python/.drone.yml .
10016  l
10017  vim .drone.yml
10018  gst
10019  git add .
10020  git commit -m "init"
10021  git push
10022  git checkout -b init
10023  git push
10024  git push --set-upstream origin init
10025  gst
10026  git commit -am  "update"
10027  git push
10028  history grep flake8
10029  history | grep flake8
10030  history
